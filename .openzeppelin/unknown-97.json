{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x23D2e5625d2645dD43477690D5FfCE1aA3bD55B0",
      "txHash": "0x1aa39c85f421d9a1bb644238f2e78c79206fed9ec02939ca63da984175276e34",
      "kind": "uups"
    },
    {
      "address": "0xCC106105fe42444Fe3138a522e83222bbf723620",
      "txHash": "0x24940d81c66c8291eed70c86bec57720877414909373eb40fc7dca0f842b3022",
      "kind": "uups"
    },
    {
      "address": "0x79FBdf7E1729FcA4ce50DAd3B5aAD5c6Dcc5c826",
      "txHash": "0x4b96612d6975acdaa5a20357d1bf02c97ef50c5532c7ddfb49d4bb40663944c9",
      "kind": "uups"
    },
    {
      "address": "0x7e4aC9ddA57cDAcBf297e7c8a78565AB21d671E8",
      "txHash": "0x1f84ad696ad07a0c4887ada00accadefafc2f8a63fa3fbda2bc201a5a4e8aa28",
      "kind": "uups"
    },
    {
      "address": "0x4e0FB0e1538868D813a35F5bA632023032e4d774",
      "txHash": "0xdbbcb11abb2a7f776c2001ec582a29d7551fa8ffd5ed1dd406725169035f5d88",
      "kind": "uups"
    },
    {
      "address": "0xfa7275F9C16E66fCA27140e9A7B49eC955445CBB",
      "txHash": "0x6dab557c753c3913c0e1d111a9a382d5222a8475731b6a29457b2cfcd5c47d50",
      "kind": "uups"
    },
    {
      "address": "0x67a46aD12a816A8E0c300E6F15ae80D818461833",
      "txHash": "0xad03610825104b1f638c7c5c2279e91740e6badb228d3334954c7063a122ec3d",
      "kind": "uups"
    },
    {
      "address": "0x4579aa2dDc1d5c45272F7fe11D6c553F71CAC0A5",
      "txHash": "0x333462e4ddaf8286f0a065f6ffbc60f1d7155acbca1854cc0ddbf845636a1844",
      "kind": "uups"
    },
    {
      "address": "0xBa262A08b25aCBeCb30F260D08455ec5CE945248",
      "txHash": "0x4507b7303f8b10e9936a4c618df0abe9d5820f792fac7c3c25f7fbef05d8d294",
      "kind": "uups"
    },
    {
      "address": "0x9B29CDAa8E1543505Eeb22c81767f6edEeD24808",
      "txHash": "0x450fe896b5504b210c042e5cff1a0d76a4afffde3943e96392fd1de3894c2082",
      "kind": "uups"
    },
    {
      "address": "0xAF3D0d8734E322001eB44e72446ba875A89d169A",
      "txHash": "0x3ea684209aad1a7258eb19d8dde151c03f95cfce566aade68492c8afe043cec7",
      "kind": "uups"
    },
    {
      "address": "0x81F8102238f8603938c3b88c99502a1dA8F85d1d",
      "txHash": "0x655bfefe2a6a483f6b5905bf337c2ffbf0190dbd8d14cb728a597f886dad685d",
      "kind": "uups"
    },
    {
      "address": "0x19e85f01F0Cb9780a212C30E89820AF65B952B8C",
      "txHash": "0x31abdb096af7234fa3db953de055beca53aeff0bae5fe1aeb4eea1d883a07e10",
      "kind": "uups"
    },
    {
      "address": "0x047792c742e1fBb2619454B9e1969c249DB2C07d",
      "txHash": "0x23c31667e167b2fbc71f439f79a8f2f6cbe69bc6aacc1a8abb1ef25f89f5d795",
      "kind": "uups"
    },
    {
      "address": "0xE855A904D2Ef6c8036b9C964FeaF12736aB02E4F",
      "txHash": "0x84a621b3d5ea2b8c7e2ba287c697de2412ada7841bbedc3f5e861be612076494",
      "kind": "uups"
    },
    {
      "address": "0x14365d388A5463794150177715C91F69F5ACb19c",
      "txHash": "0x482d63fb5525b07af90864ef0124b9fb852392a9dc117174d3ab322cc7652f84",
      "kind": "uups"
    },
    {
      "address": "0xF5FDD3376A442ab362A952A84756C363bb4E7427",
      "txHash": "0x8fd6597506a0ba0d1005b58b457d00ecb5ed173b6a9121cd0f98ac4e830b1741",
      "kind": "uups"
    },
    {
      "address": "0x96ae982Fd939eAec285944F92d7674bD073E8b79",
      "txHash": "0x0bdb25b3aa71752091a72bdb953d34259546d2d8d0a70f82eae3b318a30139c2",
      "kind": "uups"
    },
    {
      "address": "0x4CE8A0029cA7156c00b846A4faC2D3b0c7042263",
      "txHash": "0x4185ac601c13bd412262025b35fb983ca97a59050bccf09c9373276cd2c07293",
      "kind": "uups"
    },
    {
      "address": "0x19a5FCDfE12D6485215500EcFff436bBF1dc0fa9",
      "txHash": "0xf8219fb8dac7f09fc8fe758a9398dff170d0c0d4e37c67ba6f9641391443cd67",
      "kind": "uups"
    },
    {
      "address": "0x71cC286d506e26B57113fddC9f23b266d4048b54",
      "txHash": "0x088a9c64f75317f075fa25719595e4109e1ae9c6b8a1ba8b3b003970af918951",
      "kind": "uups"
    },
    {
      "address": "0x3caD070C9e76c03F85515cE12B5A6778e02D5E76",
      "txHash": "0x612c2090d28475339c0a71f2b6ee7eeb9073b8b8ea6df2732e66bdf9a8d4f362",
      "kind": "uups"
    },
    {
      "address": "0x7B0bA7EeF5eb95666D85be01a0afDFE5b1Ba7406",
      "txHash": "0x5449813c03e77dadec6547d2753692c588b07fc20df907770a013f0e25aa4a34",
      "kind": "uups"
    },
    {
      "address": "0x6A3F586dDeC3401d5a9148D14694f95590efb3De",
      "txHash": "0x6e9715aa08268cc1857f842e1f62d24e9502780fba2d2943643d8e1a814ed9ee",
      "kind": "uups"
    },
    {
      "address": "0x631E6ac6152aC2D67a47C1A7bA87F4456B9d41eB",
      "txHash": "0x67056baa44ee6fedad681d7e133c0b735fd1c5e1a43a5e47a788b315099b3fff",
      "kind": "uups"
    },
    {
      "address": "0x8eAcB46b269300386bae03095c0Cd703048C1242",
      "txHash": "0xb0a0cb6b1f611edcbdde55f58703df6c16e35fe99b292364f76fca63dc217485",
      "kind": "uups"
    },
    {
      "address": "0xA164569b805Af2dC1008C76D1132866182535240",
      "txHash": "0x04d1296fb453daae871dff1ad89170bb9d528049658ced60b0ed3ef20088631c",
      "kind": "uups"
    },
    {
      "address": "0xB14A5704bD36841163862bFC5d8E3fE2Dc5D637f",
      "txHash": "0x3508a0aada76795778c05397354bee07d469a9d95827c1d8be3d375047b8384d",
      "kind": "uups"
    },
    {
      "address": "0xf94B560871180d971e95D393df5E1bD9BBb566F6",
      "txHash": "0x415b85c029d0e09fcdf8444ee430f15bf00ada062bcf8a9f9b02853daa884ea1",
      "kind": "uups"
    },
    {
      "address": "0xBf7d1C39baeF1E329830854eD8Bbe0BadcBA7A2C",
      "txHash": "0x31b68581f77e7203b7712cf157374c1533d569eed75b3d3c7249761794527723",
      "kind": "uups"
    },
    {
      "address": "0x4EC1B055aA52835ccFd1E57b02d34e6728B68BaB",
      "txHash": "0x8b3a569b62095cc3fdf27af8048be5bb7e7e9d4aa7f367373175673d1bd7bf96",
      "kind": "uups"
    },
    {
      "address": "0xa65615374A9765c9D105EDD9d8A001ceCC4a3b0f",
      "txHash": "0xd21e043948c9100e43a3ceeed244bbc5a47ade687ab41df5f1eebff4e3d30117",
      "kind": "uups"
    },
    {
      "address": "0xE74878dbcB13F2c376Bf264Cae46e02A4B4bBC8E",
      "txHash": "0xa3f4115bb9600687cb9af47c023602ae79af3a8e8fa9999530eb8df274884539",
      "kind": "uups"
    },
    {
      "address": "0x11E1d30fC66561576b1c227205dad3779a22c21b",
      "txHash": "0xcc6d6f1238ff8ca99864af3c0e30996d4d414a4823beee7a533d155c3ae93e09",
      "kind": "uups"
    },
    {
      "address": "0x9Fccbfa30635e7825537Cd74f307882Ef5904924",
      "txHash": "0x6aab7a5fe3c71f1d9431460604f3bd9b0e57b599e1aa246d4faf6240df59a634",
      "kind": "uups"
    },
    {
      "address": "0xe0C97c3A606B9A711Ad73002601bf8d3e11F5A5C",
      "txHash": "0x7acaa34e5db9ff22cc7ff3b4294ce55260c2e397b1c9803d946c1b74c6cec181",
      "kind": "uups"
    },
    {
      "address": "0x638AC20ff6B754cA5D6a0BDB388BF3d694C596d5",
      "txHash": "0x63dd6de71b88c037700d5cd2f50176f364f326c179367a0eb0feaae7dc100e87",
      "kind": "uups"
    },
    {
      "address": "0x9cbc3ee86Df38f89E25b72d580D342e03dC16eE8",
      "txHash": "0xffcdedcc85ece60d25b24261bffccbcee0b100a843cc2050f8b35c6ca68d506e",
      "kind": "uups"
    },
    {
      "address": "0x9E27257Af57B01a585F8a35d694a1e55E3af3bE8",
      "txHash": "0x3e13954292557c50b2ec82222e268ce46e000834cccc1721aeb9f53ceb5bdbc8",
      "kind": "uups"
    },
    {
      "address": "0xdcbB03C150c49b70f6081A16633784cEC4cFF26e",
      "txHash": "0x961fc96cb5f2c4e091f56cedf899953028ffaa91482dfd848e332788caaed613",
      "kind": "uups"
    },
    {
      "address": "0x0aB46d671B56570E00DcbF450Bd358B482D0E5d0",
      "txHash": "0x1518b2a2c2f15ee59adf5cf34839d614f3d722ac4ca4ab84e62c4057e54b6309",
      "kind": "uups"
    },
    {
      "address": "0x5A0DB1B99C6c8A1bFa17cb5085871FcE9097cfF4",
      "txHash": "0x6dd33d5ec532fffba7f0f9acb0371c3d002ace57cfdabf9a68a12b4dba53d20d",
      "kind": "uups"
    },
    {
      "address": "0x3F970Af0b40e8Bb8eE41a5B978F9A5f6b5FE5B28",
      "txHash": "0xdbe67bffe63095c2116642d7cfce010b5785acb6d8e335af2481d9e61ee04a8b",
      "kind": "uups"
    },
    {
      "address": "0xc2EA37a4440d17Ff7FB20fd2160A5e949aBF3D10",
      "txHash": "0x1896a24e530168a709b037c6b407e423a3a8e4db798e29b6713b96d61ee020bb",
      "kind": "uups"
    },
    {
      "address": "0xA4dCd2ccF01A9F056083BD910d215B2BE6A5DcEa",
      "txHash": "0x976df8bcab30c9a7ca6bbd1d1aa8e942805bf8f45bcfe29f3cf315e9930c56d8",
      "kind": "uups"
    },
    {
      "address": "0xdD2e8c25c1D47370b13A7eA69710b805939A5655",
      "txHash": "0xed1bbcd0e2abd919769a33a5e12b44416418dac59fd6709b1279da5c273363c9",
      "kind": "uups"
    },
    {
      "address": "0x26245CeD315379964134a46496B1b2E09e6a8B70",
      "txHash": "0xbd8735a86e9a0bdad2ffc5eb69f6a4d80c34c538f041d043b1283cbd9d395b4e",
      "kind": "uups"
    },
    {
      "address": "0x23568366d5Bd710aDE3dbF7958ec622D4a545D8b",
      "txHash": "0xfcf19e2f5f3108eee5605f03818fe5856dcc3b7c4b2553c2478a1d8a5429db91",
      "kind": "uups"
    },
    {
      "address": "0xF00c05E07E8cDaF61923d4ED7aBae3DfDb923693",
      "txHash": "0xebf965bdbe1251c18b150f8bf80b7fdf0ef84a10696780e99834aa4fd0ac6ac0",
      "kind": "uups"
    },
    {
      "address": "0x240d72CC9392f91433e2594E0848027d3BaAdC58",
      "txHash": "0x504be149f0d6462a80e0fba73371a07b0f7a26a5b62c1b7c5ab16e5dff281bfc",
      "kind": "uups"
    },
    {
      "address": "0x4420Ab4bE83021c1337F77F4e75826aB4Fe0E4C3",
      "txHash": "0x55f94bf6314c58b5ff32b830f2ca3cf10ef7892f9951603357bb05a0375ae9e8",
      "kind": "uups"
    },
    {
      "address": "0x6A46C953F7bE80f190Ccf4b91AFD904116423B0A",
      "txHash": "0xd4c612269faef51e3239396151607d36473ef9e0df1e49339c3ff0e5f451f27a",
      "kind": "uups"
    },
    {
      "address": "0x2172c0C6057aFD42060CEc212F10eF145b5E882e",
      "txHash": "0xc484bf27b5e2f51f6c702df0e1d136de70a6dc06c6a82d3fc923db82f1818bdc",
      "kind": "uups"
    },
    {
      "address": "0x53211aA9f19E73498549db4A42AB882a33F9Bb6a",
      "txHash": "0x093d427366cc9ab7810d62c514e4b414bac9e2d2f4970349ec8a9df1e0166f28",
      "kind": "uups"
    },
    {
      "address": "0x9e3E27C18303cc0f76f9f91976F0D8d08Db4F7FE",
      "txHash": "0xaec3a79ed8c5b220fcb6db12a0e7091bd7fc14fa3e2348b1648afde8a513d8f0",
      "kind": "uups"
    },
    {
      "address": "0x73fa2441feD49b45893038367A97703b4f422276",
      "txHash": "0x5e889f483174d601ba9082505ba6a1483acc78bcf13cb5e9b113ab35ab3d6bc0",
      "kind": "uups"
    },
    {
      "address": "0x0b4DAe1Fa77946C8B713A6F31A337Ff0221cdcB5",
      "txHash": "0xe153507e7bc9f86596f65048f856421ba97e1b41431314e33fcd2aa481c44bee",
      "kind": "uups"
    },
    {
      "address": "0x8692e5EaE143A71d0d5D45E6a47135d58dF1F592",
      "txHash": "0xc21b84c0baf94d2dc486c4b4dde006d3f1366e1d8c760b8008e2dc33d5e7758a",
      "kind": "uups"
    },
    {
      "address": "0xc14593f7B48D03B517118c9fE773B381c75Eeb21",
      "txHash": "0x03d779def00810a3d36e6256876f4a5b835b0834dec27fc4e9b9e737b487c327",
      "kind": "uups"
    },
    {
      "address": "0x3800eA7F67fE0c4d3D3AB2e147C3a38E55934835",
      "txHash": "0x2492a2dbce10c43a03215bfc42993125fbd8f9095de2bf332f982743c86c9041",
      "kind": "uups"
    },
    {
      "address": "0xAEF8413160C293e2f990db245822C5381EdA72D1",
      "txHash": "0x9adf1ac6db82cb03ccc49728b3e15d22a7ac51b2ccfa7df800d63508dc50b5da",
      "kind": "uups"
    },
    {
      "address": "0xf24a68C5528830E4c5F8Cb6fDcAE067e382200d3",
      "txHash": "0x77983a53ff728f4317f99e346f31f121bbcff53abd7101062b15bde35ea81c28",
      "kind": "uups"
    },
    {
      "address": "0xE7264Ba3661cc2449777813e80d1DC98994FDB7b",
      "txHash": "0x235c61b81099e45d01cc4760053620d7654900b1b3fb4291dfac583bf803c4ee",
      "kind": "uups"
    },
    {
      "address": "0xe1ac11563Bc205a0f529F808cd460989ad74CA2d",
      "txHash": "0xa40bcf2edcf81305a714acf9de84c0c749853f8ec2324ba9442dbafbcafc19ff",
      "kind": "uups"
    },
    {
      "address": "0x7f224AC90200c02410EE2E652b382FF9F226F0a2",
      "txHash": "0x81aa3170d00cfe2e4a2e783cb3db7fbe868763d91bf9c952d5ea1cd2e821a6fa",
      "kind": "uups"
    },
    {
      "address": "0x307B75237B61431C5d4d3e7F361f1eFF3Ee4ccd2",
      "txHash": "0x5c37838509113f4864dedebfe87e14c11e18f022ea5a1ec47ee980443420bae0",
      "kind": "uups"
    },
    {
      "address": "0x0FD4c874f28422d76F5410f2b22654cA5C99C4B8",
      "txHash": "0x79926382ebdb8d7473fc890a7ad2fd0ad9efeaccf462a97a5b3f4a502326829a",
      "kind": "uups"
    },
    {
      "address": "0x8e6eE309767347108553E0f5ADE71FDF4CaeDf86",
      "txHash": "0x1c6783bd0701ebd7f1e342058a41e8f559fbf65d962d07adda0b54330a2a46f6",
      "kind": "uups"
    },
    {
      "address": "0x07C04cE7ad98C90f168310E1995deB6272Ca4d42",
      "txHash": "0x5e353a259e4448859a7b6bb84b4c38cbc24159799e109111a8945638a04a38b3",
      "kind": "uups"
    },
    {
      "address": "0x90C3764c2998b57E215704938EDA227a8466b3aA",
      "txHash": "0x19b7184ef35333c030113b620684c3ff7cfbb4009707671c0e206c790100b273",
      "kind": "uups"
    },
    {
      "address": "0x2fb8d65a817f32E6334dAA25D8CFe5fdE2027e30",
      "txHash": "0xa348a57b0d727b0c280268671dc4ce5c2747e289ac62b0d181f07176b35b3055",
      "kind": "uups"
    },
    {
      "address": "0xc3aa443940Dc788592F6Cd9008998741F93f40E6",
      "txHash": "0x6e11833d21f8df0042a44d909d039d2ec4aa182e72a2193d806cc8028e900950",
      "kind": "uups"
    },
    {
      "address": "0xC6e746e15Ff62F40aF012196b92a50d7C5e30d17",
      "txHash": "0x53352ab54b2cd51526e1c8acc71279efb1761823b5117beccb9b1a2d41aa7452",
      "kind": "uups"
    },
    {
      "address": "0x628fC5827360AAc81C3DF8981b25b302c9FE2d25",
      "txHash": "0x866c8d93274d798344ef0de4bd276cf86def993b758141441878be65bdd57984",
      "kind": "uups"
    },
    {
      "address": "0x52735aBdF9Ac8D95507b72e3d69984eEBCbe0d18",
      "txHash": "0x4bc21d1c36f9fae7d24ea613c8a745228328122663c9b008209eb9ee08250b0c",
      "kind": "uups"
    },
    {
      "address": "0x5d4941cadF21Fb26D53A8988Bae634fB72D4F775",
      "txHash": "0x40b08efa0484137db7fb35e5d3418ab4c1d4d7375c8e0ef1a99f462b553edb77",
      "kind": "uups"
    },
    {
      "address": "0xdD5bFf506986C9aCa431Fe02fa1fC9e36BB2bD7e",
      "txHash": "0x04a1135c840a4a875befe10a584352a395544dad0766453614cd8ab45e0aaf36",
      "kind": "uups"
    },
    {
      "address": "0x1B6D9d69D60d766F4F605EA281634f8cd1975176",
      "txHash": "0x201faf03e12a65ab552234cc50738dc66f95f04ca8e152ad2687d37e255228d9",
      "kind": "uups"
    },
    {
      "address": "0x20BBac1545B9e2a94AC22f8132E27E422CF430cE",
      "txHash": "0x9b5e446f257e1bd75b513d9ca2f6fa0c88283fd0a1c92c19d98ce9a197b983e7",
      "kind": "uups"
    },
    {
      "address": "0xc2E9aE60311c342dcCab83aa48518577b28Aa5a8",
      "txHash": "0x906fb28fdd70ee66b7980f4475dfddbaaaf2fc36fb300c79c4b672ad942ecdab",
      "kind": "uups"
    },
    {
      "address": "0xBfe260DbFC644f5c4D687170d6cD30bc5397d13B",
      "txHash": "0xb1f71e8a180d7c605d6b60bebb1949e43c7b752b6a3a64db39d60d3f7e638df3",
      "kind": "uups"
    },
    {
      "address": "0x3ad63cD38900A1889deaDBaF4f600728b4513950",
      "txHash": "0x9df363e6d21535b548bad3273c7f34c0db1cc6ecb28a04ac970e7d5e5a802c75",
      "kind": "uups"
    },
    {
      "address": "0x362A166aC03f041Fd6340dE6e92EA1c20813a560",
      "txHash": "0xbadeb31b0f59595fd40aedf6c0457d9d16446f6190899b909004082f58d40f5c",
      "kind": "uups"
    },
    {
      "address": "0xDe9256017932255B1336B457Aea37637F8b54913",
      "txHash": "0xc139931df4f8e0de8003c76bf53acfe611e3522f1e8bc015e4587e85aac6a9f0",
      "kind": "uups"
    },
    {
      "address": "0x8f93769C940A042256D4FF413FC2c53e594993A4",
      "txHash": "0x042eb5271c57881c7247ee1b7bfceaac001f47cf3a23e99b480046e650676894",
      "kind": "uups"
    },
    {
      "address": "0x8b988f599466ea9314A5F2bE149fb2d09199F3e8",
      "txHash": "0xb285634c7ee8a9c7ff80d94f100cb94016462da571022785e5d0f4d0d26c1551",
      "kind": "uups"
    },
    {
      "address": "0xA15826c2f4176e79a423d4c10702A6aB130E3b8F",
      "txHash": "0x6889489468bdbd341839cb48b8dfb0d314ddac851b0aa562ff3300c32bac879d",
      "kind": "uups"
    },
    {
      "address": "0x444309130991810ec7967bdaB7A8Eb1Ad243e7Eb",
      "txHash": "0x5a12c9253e4bf9efb6a733d64746c8af8060a0f5db670ec44fe8c8261238ea49",
      "kind": "uups"
    },
    {
      "address": "0x5cAf035460581C92212107e5C8462c6B88E66C93",
      "txHash": "0x062ac8da7d42798ddf79a84d03f0eb8d01f26da5cac25fc0adfb2e385300d891",
      "kind": "uups"
    },
    {
      "address": "0x69A432fF2AeeFD03C2a1795174fd2806154EA246",
      "txHash": "0x87b4ea44f891e45659ba149e5e847a19399cae1b8623ead7f0395776f4a0326a",
      "kind": "uups"
    },
    {
      "address": "0x15A11557C7bE665D254438133cc336c387A5fCa1",
      "txHash": "0xc8716a929e0c7b0963e6e02c8d4d93c1dd9cfb36497597f873e3e25498d53cbe",
      "kind": "uups"
    },
    {
      "address": "0x120756aff7F985A9c9963024c8eeBfb758F9aF14",
      "txHash": "0xa1f625d62295ba9eab876374e3247b233aca40700cac869e1df6374454dd669a",
      "kind": "uups"
    },
    {
      "address": "0xb8f7e256580674C061120c6D0eA5D6e6527D4D3f",
      "txHash": "0x9c477fc831a5cc4d27c902d17baa12249f17164f14d31c9601d5f00e1b573340",
      "kind": "uups"
    },
    {
      "address": "0xd8d3BCE7C185AC1EA7b712C0697bBEBc5E4E8722",
      "txHash": "0xba7e1ab66946fb24fd482051e81db562704b727a9a36ce39dd260bb41d4ddde6",
      "kind": "uups"
    },
    {
      "address": "0x82Bfa6096E4C8c7727692d2429bCfC3730Fe83ff",
      "txHash": "0xaa4aeb43702209b5b66ab09b342c58aa95c7515e870b592e9af4213b7bc0b80f",
      "kind": "uups"
    },
    {
      "address": "0x74BfE1c72Aa9E03Bcd4c13545266247f0049c99E",
      "txHash": "0xd38d2f3df843fb117b113885854dfd2e4f4320c2eb61f273914a2f03cfb9f81e",
      "kind": "uups"
    },
    {
      "address": "0xCb977D866783670fE9F2C5474f4EAa02a82d07e5",
      "txHash": "0xd8285fedf3c05769fc9ceb54d209964d2df94aef696b1879d4b5e5273fae968c",
      "kind": "uups"
    },
    {
      "address": "0x7C8BAfa0CA8EfF673A35e872ff7023B3Abecae65",
      "txHash": "0xf3fad420d2525b5ebc83a7c2334d9f850096ad19fae250883cfa578d36bd949f",
      "kind": "uups"
    }
  ],
  "impls": {
    "1d462498d6af758972d447d1306c4937257797a5714afe503d5165e52f7e8cc3": {
      "address": "0x6e158f463469924b75d467bCBe7b2E5521c0cfCf",
      "txHash": "0x59c11efe7c993ecf3e45797fae0f9f983cf8f42b6b84aa61cdb261b4aae6f681",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)7839_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)7839_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)7839_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "016923643fddd6954a1ee46b66c323f450e92361b726a805c3edaa4fcc946f0f": {
      "address": "0x94A4E1bC8799da086b41Eb1800f137F87958F413",
      "txHash": "0xbd13fa6e210eafbe4cb6916ed60b36a238f3540c0c95db50c3092d1e32a7bf82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)7832",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)7866",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)6801_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)6822_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)6801_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)6822_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)7832": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)7866": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)6801_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)6801_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)6793"
              }
            ]
          },
          "t_enum(AssetStatus)6793": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)6822_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)6822_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)6806"
              }
            ]
          },
          "t_enum(EvaluationStatus)6806": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dc8e77296cc7b26768b3bf9f49721b92229bc9456b137ecfb8eeae29d4c6a853": {
      "address": "0xB9754CaC928a7D91ABEDf6484A47418c7F86C287",
      "txHash": "0xce4a81db3518aa924d87c79e1e40363de7cac58b45410e6353fa12c5019e9717",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)7731",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:37"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:39"
          },
          {
            "contract": "PawnNFTContract",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:47"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:190"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)12023_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:193"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:196"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)12063_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:199"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:202"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12172_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:205"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12204_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:208"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)7731": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)12023_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)12023_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)11980"
              }
            ]
          },
          "t_enum(LoanDurationType)11975": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)11980": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)12063_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)12063_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)12087_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12087_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)12087_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)11985"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)11985": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)12172_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)12172_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12159_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11989"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)12159_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11989": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12204_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12204_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12204_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11998"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11994"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11998": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)11994": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "152e44297b05a20c90a5aa2d1cf67fbb7fd971d38775786a305701f76486ee9b": {
      "address": "0xa56879A77076D460666826df60f60f56D0F93a07",
      "txHash": "0x4b15144dfa3db27d565175047b0d0ef5f4f1684bf3f5767a207baa66a644aaae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)19142,t_int8)",
            "src": "contracts/reputation/Reputation.sol:55"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)19142,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)19142": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f533ac640ae03822e27e8583561a94b376b60548639ac009b85393a25bba387d": {
      "address": "0xb2aEa415F5cA552189aD477a8BEC890D239Fb20D",
      "txHash": "0x2ea4cf8556150d5044b0c1e76cb431cd8a824812f2fd85898bdcfb07746c9b7c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v101/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/v101/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)23376,t_int8)",
            "src": "contracts/reputation/v101/Reputation.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)23376,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)23376": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5217c213bcfb167cc1582cbc9723a741e2f04a4ac640701d3d904056011d4311": {
      "address": "0xcD32237b1AcE37fA3c72F2499AE546Bb2743943a",
      "txHash": "0xfaef5def432acacc3012ad882d3386174a98c0e657430320a9314d67fbb3c0e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v102/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/v102/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)23905,t_int8)",
            "src": "contracts/reputation/v102/Reputation.sol:37"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reputation/v102/Reputation.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)23905,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)23905": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f528f52f46535216e4f126eb227b16a7bf3c66e8454d339162f2cd7d2fbe6578": {
      "address": "0x9d7dD52c2dC53c1EA45030bA058f1d4f6Db225Ac",
      "txHash": "0xb2a08202c93dc41c0137436dda1c3c45ee1ba4648044d041c7db93e9e8f2283f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)7731",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:47"
          },
          {
            "contract": "PawnNFTContract",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:48"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)14966_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)15006_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)15115_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15147_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:209"
          },
          {
            "contract": "PawnNFTContract",
            "label": "_reputation",
            "type": "t_contract(IReputation)22290",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:911"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)7731": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)14966_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)14966_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)14923"
              }
            ]
          },
          "t_enum(LoanDurationType)14918": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)14923": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)15006_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)15006_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)15030_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)15030_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)15030_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)14928"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)14928": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)15115_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)15115_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)15102_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)14932"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)15102_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)14932": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15147_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)15147_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)15147_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)14941"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)14937"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)14941": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)14937": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)22290": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14ca8ddd259f5df90a6e7597a9a30ebe80b6d7a8e00f834e7d3288d5bfd359f7": {
      "address": "0xd362cB0f8E20F387310d739e6Dd4592aD64C2960",
      "txHash": "0x4db0358f3429d2de1c41e5ddb5ff022dda39d3bcfc6bba92b5227b20684a029c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)8470_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)8470_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)8470_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "a9bb09cc782b7af748108c5f8fdcc8ff76c128368f7786b82ef2ca96375a53bd": {
      "address": "0xf70516F07f668Cb5B53531555581223193C6aB4c",
      "txHash": "0x0cef01556a1b2e64ac93da0eab6d3a67779b676011408812e9460e85416eaa87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)1617_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)3642",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)3676",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)2590_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)1617_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)2590_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)1617_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)3642": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)3676": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)2590_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)2590_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)2582"
              }
            ]
          },
          "t_enum(AssetStatus)2582": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)2611_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)2595"
              }
            ]
          },
          "t_enum(EvaluationStatus)2595": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efaccc2ce1e4ca88a9764f8e300fbc7ae373d92d477e9b43a03007b2c50b0242": {
      "address": "0xe40f3258fFc462fF58F1108d236DAe39ED3Bb02D",
      "txHash": "0x4acb34914688cf342ec5a02f5f7dc1a913470eb53e46e478e7e1786f396a6f75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)8362",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)15597_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)15637_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)15746_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15778_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)22906",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)8362": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)15597_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)15597_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)15554"
              }
            ]
          },
          "t_enum(LoanDurationType)15549": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)15554": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)15637_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)15637_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)15661_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)15661_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)15661_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)15559"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)15559": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)15746_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)15746_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)15733_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)15563"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)15733_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)15563": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)15778_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)15778_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)15572"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)15568"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)15572": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)15568": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)22906": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3faf1477ab144b8bb7f9a4c3235bb1313364652caed31dfd50a2157ce87f275c": {
      "address": "0x26421289D13B92794a2DD985E0643f768Ce51fFA",
      "txHash": "0x7a346db388591da0dbde59bb81a3bcb2ab6361bcfc8c2811ed10d58349c40de2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v102/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)24467,t_int8)",
            "src": "contracts/reputation/v102/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reputation/v102/Reputation.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)24467,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)24467": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4794a87a39213e83cedd8265d97a9251a182c6b509fd9b1620f8181c7b852900": {
      "address": "0x38b4eACeBAB24adD3Ba1202e9B1EE4E28307e13A",
      "txHash": "0x7e0d9fdc871f29d68bbf988b2a94a5ff05b27a948a1d8a6059d55eb2a285a8bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)8471",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)8505",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)8471": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)8505": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)7411_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)7411_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)7403"
              }
            ]
          },
          "t_enum(AssetStatus)7403": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)7432_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)7416"
              }
            ]
          },
          "t_enum(EvaluationStatus)7416": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b9e12a13827ee14fd8e91b25d2bad1637e907dc0ca09b4e4ecff01fdb3176670": {
      "address": "0xd773FD44d550e9050FAd0D87cf5fF6264bBCf010",
      "txHash": "0x47940cd3619e9c9b8e139d5b5eefae32759a65b58ce1c24b0b2f42353aba322f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListcryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "63d6cd3a8af6979a0f5b58c7e98d0e6e66463ea6c4bb0dbdd931128bf9f537be": {
      "address": "0x9154D0Beb863C1654bc01c983dc93b98F60FBD1c",
      "txHash": "0xd2fb25bd3d2d9f00045558060aa8743ffc70b4efd506cf04a54ca38e92b65354",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)6489",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3307_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)7867_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3307_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)7907_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)8016_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8048_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)18069",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)6489": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3307_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)7867_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)7867_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)7824"
              }
            ]
          },
          "t_enum(LoanDurationType)7819": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)7824": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)7907_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)7907_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)7931_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)7931_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)7931_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)7829"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)7829": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)8016_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)8016_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)8003_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)7833"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)8003_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)7833": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8048_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)8048_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)8048_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)7842"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)7838"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)7842": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)7838": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)18069": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c7f2120bfa12cdac1f7189e985a5c1bd72b10203eb4dbc11f26fdb274c1f447d": {
      "address": "0xb712C506E1cA6B11C0555066f0A32c32e30fb2b4",
      "txHash": "0x6b3d6f2c050bec8648efe51a0504a599ddb83830de7f82025d50ec0a6fd034b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListcryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23aac7ce15950f0627f911de10b3917555e54ad9f670f7b163806b96ba25ed91": {
      "address": "0xbB2F32E79FA15534e364e94A3Da71710d8d80479",
      "txHash": "0xe77de91909b71f3c78709e8730a49f8779eb8e431e905410d33404518e852740",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)17728",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)6818",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)14335",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11200_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11232_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11147_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)14335": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11200_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11200_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11185_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11151"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11185_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11018"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11151": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11018": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11232_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11232_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11232_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11209"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11205"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11209": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11205": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11147_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11147_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11136_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11136_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11136_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11130"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11130": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)17728": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)6818": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b3eac9b575e077711ccdbfa975ea5a6d9f6dc872cd6cd0a9d3c82f019736d112": {
      "address": "0x650D243f81387Fb847E1457eea9801A273315eF2",
      "txHash": "0x13f077173c70f52a579b205666e521f0a37e09c82bc22124255e1eeecff4c53a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c9d6df1a8327df6f11e9246e31d4c31159b141ee1f0809b12ce77baf17c13c72": {
      "address": "0xa926035A62B1d44189a123B79F64ED1F96D986d4",
      "txHash": "0x9e22ec104fa5d179ffdd5e1665132488dec4e85a9ab9b422e25ea140fa1af6bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "42d8211901ada6d2ea3b50f5b632318caa9a332a8c931e89c31d6bcc42e9be77": {
      "address": "0x31cE2b5a86a4B9C4152835D3b38304873333FBAf",
      "txHash": "0x69e990a00181520cbeb9c46f3ceba3f735d76dc910a9481ed708fa106e475dff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)17932",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)7604",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)14530",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11390_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11422_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11337_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)14530": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11390_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11390_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11375_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11341"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11375_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11208"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11341": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11208": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11422_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11422_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11422_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11399"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11395"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11399": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11395": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11337_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11337_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11326_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11326_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11326_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11320"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11320": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)17932": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)7604": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e21e3f348ce22c0ccc598781d8c027c52391a32ee549c687fc6c796a3be05304": {
      "address": "0x60E31EA3F4C5579426E40eF93fdfef5B8D910221",
      "txHash": "0x647b59efefb51d4c9bb0c621a656934d4ae782b020c75f6e9651f854dec47cf5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "98785bbad42cda05d6da2f6dae4c098125a19d765d0280d40dc62f2096a80dba": {
      "address": "0xa56F6a38EF6A0393c047c6b7b36f22bfb2914Ac7",
      "txHash": "0xc55e5c16ca923a2e46cf26aa35880ee3e1e337636eda37cd7d6169a7074bf8d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)11109",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4083",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7716",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4572_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4604_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4519_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7716": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4572_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4572_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4557_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4523"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4557_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4390"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4523": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4390": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4604_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4604_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4604_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4581"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4577"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4581": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4577": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4519_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4519_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4508_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4508_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4508_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4502"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4502": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)11109": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4083": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5882a881ee0238db47a47f1a1186fed94c0f4ae5d7217c95468f07335962ee4": {
      "address": "0xcB812255ac928c58fd49005B0F957b00648186e2",
      "txHash": "0x38517b137648b9751c164e801be08dc57f168d98cfa984dce339c78685317aee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19341",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15955",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15955": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19341": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8556dc46c42b02bb02fed804ac96be5a6a7ac26c4a36e4fd4460618a71ea1b72": {
      "address": "0xE76BDbd24D26AA9F24572C47Ea8C5aeEb97749BC",
      "txHash": "0xda24b7b67137033e5f99c2704d8b2e698909cb7282e539979ee9e77ac59337cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14a06291f135b096f4ddab74f156eca47ac824817fedbb36a1357fd62a8c15c0": {
      "address": "0x11f11BA432F33709a6143a326e841fAeBe3f29B6",
      "txHash": "0x68abf39239e376313a86e8b933cc6562ce3cf856b9a2ab0b7e830bc1854159ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7514",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7468",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7468": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7514": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d948cd7e322f4204ce7765be5cbfc98289ccf736a150b4570e72a813c4b4f550": {
      "address": "0x79C6209BbE5e96602058C05EC85433f709Dc89Fa",
      "txHash": "0xc0677e484e1c02defabafb8a554e61f0bbef8ea181cbea6dd923d66598488538",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19363",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15975",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15975": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19363": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7f161fad228ea8be4a69e81ca2da509c09dce4f53360233a479df9a059055315": {
      "address": "0xB1887cEA6e0e5972746f50D69b33783FAF3ad6Bc",
      "txHash": "0xb85b5747facc68d9d80c54e5313ed777550a21bb59f481262185324ce1287e27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7536",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7490",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7490": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7536": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2468322961426c4582eb13e181d4ecc19f2a29d016f118541b6766cc29506dad": {
      "address": "0x55c79c62512FcE8605f8B147B9312C14d84a33bF",
      "txHash": "0x838cb9d628f0ec4437d61dae4d830a35e198e3f0df4c14db87056ac179c13d6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7518",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7472",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7472": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7518": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0adf9caca0cb9d795b879dc6360e58508455b8c8e6817fd29725e44c10ad53f": {
      "address": "0x95d9Ca5349eB9612e532be62194B6dd7b0Cea73F",
      "txHash": "0x4cce678de271f81f732364b28b27ab96e49f4d42a676e511f2c318e90b2d244b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7518",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7472",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7472": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7518": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a5c997e7b7e3af91cd7e2dd80255f6c4da2a6a215e91b1042de01901a7542a61": {
      "address": "0x4f48A33CEB732DBe0cf026F8490711cEE3CDfC45",
      "txHash": "0x386dec02b67338e56375d6fb79414a8640adfd93d1b4d992c4c65b2d02b86851",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19347",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15959",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15959": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19347": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b95f36b1d7d6cea7476b6417096dcac31208fc6b9c33d59ed712a2c57770213d": {
      "address": "0xbE4B2b309b408E9839560ab9aF60C5680549ed76",
      "txHash": "0x9282e3d07fe446428494ecb5f19ba8cd414e2fe5030385cef6a430975d3a7e06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d3e3a3c5b81efa5b3979fe86b424e3fc88e19620548e37aa5f27be29056573c": {
      "address": "0x0DD93e267b3eeE4Bc818F19aEb382a418831371d",
      "txHash": "0x9c51ba33fa39ccd77c225fd8328f55281969b04768a2d344e863e2ea4dfc0f51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bde432e81efc69fb59cf4dabe6f324941e2417ce751122f7c137847f833d4419": {
      "address": "0xCc906C9E82954108cdee01454998b2397172cfE1",
      "txHash": "0x579d1e5b4ff0acc030ed7af78630965367ef6e0f7d63cad0011bf0a02496abd9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c55715396e3e99fc42b0cda8fbecd4f8dadae55dc540b9493316c521ad43cc5": {
      "address": "0x8eAFa2FD0F598CD7a9c3F2A911dF60484def18B5",
      "txHash": "0x79e1c6437f7dd4c57db870f1fcfd6044f1a38bc3f33e789ee3afe65544528d2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e66fda85f285e69c440e26ad1fe88932395a4d95918f0968821fabe83702f85d": {
      "address": "0xb53D998F60CBE482416ad1d8f8E58c32D252c6b3",
      "txHash": "0x6eedb8133d2282baee451051fd2e4d6b153299ed80d76a2d1cb487c4ce33ef64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74421226b39ab28ee4644b353644a670731d55e6cfac3b53119d3f7a3a9cf0e6": {
      "address": "0x5f23b90F930AA96B5039122EA43B27C95f6CAF82",
      "txHash": "0xd2b8edca681217f466e64ceec9823404065d69b23e416e203164a3c293122d7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc6a49aa2ae177d4965bd314d1ddc77160ec49d4c06c77b91cb1d11c0003d5f6": {
      "address": "0x1FD7C91611358270eb1b08D95b9d5EB8D4aa0Be7",
      "txHash": "0x2322c95e08c425c792fee1b430d3a56ec8221f4b1f50bccbca6a54643fefcb60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a0cd958de861fef4747351fccca834479933422597bc06e168187061c8f26146": {
      "address": "0x3CfE085b2beeAe4fb30D590D8B824ad2303B96A4",
      "txHash": "0xb25d8570d44aff97198f1fa5860f54763b64e3e4c4cb88655dea7e46db6f3ae1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "41e2b9cf05af4f9b574c509a36e02fb1ccece338a783ff82addc944b7fb5ac83": {
      "address": "0x1270e763c41D3ed84B8008993Cf0fcad2239246A",
      "txHash": "0x047bcef0edc0b4d21856b0757ec4d24d8d1ab35f1c2f32ef45ac7e8249a76858",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8a641715d8d5667aa485d4ee8fcdcb528172046479c7c410aa7b4f7e6386fc3": {
      "address": "0x448fAc17eccEa1466764d57F0db554a0355B0541",
      "txHash": "0x32220d33db08424857d8807929531e93cf58d65bfa40ac2d6fe2cee8f4cee641",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "de84d73c77811d10e0a3692d026a91661a1b92e65fe057c8eeca4d053514f38c": {
      "address": "0xc5d5c5931C4E422BE92aDdFEB4bEB40571ec00E9",
      "txHash": "0x2121c3c95d0df0f9113ca6889bb80d5561aa79e8ab11e2c631df797cf375c148",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "39e7293ef931903a5391bbbaf7a9fbce58266fc0ee0f83e0a5da0458d508d026": {
      "address": "0x3Eef11fb1d5C5Baaf628FB061a07ee795A4Db43c",
      "txHash": "0x3eb4bdf1f2ba0e6dbaf57e1e04c001fd1c0b9dc1e7f3f04f90957ad4d54410db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90ef5eb5958a95d6a610737ebe845716046d6ef42ee62ccbcdb2f8ea062686a5": {
      "address": "0x1F7460f96B69fe90cc0A26d37577Cb0c0B57079A",
      "txHash": "0xf2ada90ef5458041bb177b2012240ed6eeaeecaf5a19f016301ed4065fb01fc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ee864cbdd47e3a92f42ddc8a4a4cd7e9f6382dbd694f67e6eb73a2ea0c44f443": {
      "address": "0xDb527f6e3b10C58c00b6eedE1c3231eE96ab06E0",
      "txHash": "0xb68471485f677752ca96df78b4a034ff629fbb1466e3428b72a04b36a94ab199",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ebcfae9e987aed18a403da5ac1366be3cb0ff1354a62a01752b901402e5f1d": {
      "address": "0x4D0E9b06E5CD4BE40F10889cC89918Ae452C18A1",
      "txHash": "0x0e68d9d14a4dd81339cb175b076e25c6b9db9b0d9c93985ab04c6474d0cf32fb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d9e013d90cd95e0df352c4f0292f4f67e4e0107800fec003a427631d7c46de7": {
      "address": "0x70895B579aFfa76C875a4c8444EAdef5225700B0",
      "txHash": "0x25812b68a18384d982eca087acbfc8c0b5a959aae92444bbe7c1ffd7175a0ff7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7768",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4133",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7722",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4622_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7722": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4622_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4622_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4607_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4573"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4607_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4440"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4573": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4440": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4654_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4654_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4631"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4627"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4631": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4627": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4569_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4558_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4552"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4552": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7768": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4133": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "13c4ebabd8dd4ccf337caffe543f8337ae44e1b1db18a5e1f7ff254c2c0a2d59": {
      "address": "0x6dB623564ebf9f57a466CA3FFF6D529AaE4bafce",
      "txHash": "0x6f17f00269a304493164c214e32f35fbc98d3b7ee2395e3ad956e8cc76969587",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7781",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4133",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:160"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7735",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4622_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7735": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4622_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4622_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4607_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4573"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4607_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4440"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4573": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4440": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4654_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4654_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4631"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4627"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4631": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4627": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4569_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4558_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4552"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4552": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7781": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4133": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9d7cf8b884dbbcde81ce077ae6f9d0559164f3084aa097159c36441fe4d5ceb1": {
      "address": "0xba4e62Bd3F595b898621EE4bfB867B29c11fdBE9",
      "txHash": "0x9c1c6a5eb682a121c1974412777891f80f57a093c5e37970c0ca2069036b2af8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19699",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8401",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16234",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13226_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13258_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13173_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16234": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13226_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13226_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13211_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13177"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13211_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13044"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13177": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13044": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13258_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13258_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13258_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13235"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13231"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13235": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13231": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13173_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13173_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13162_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13162_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13162_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13156"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13156": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19699": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8401": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "346e94fab5205ce14a81099e41878f9f2d4bcb72d34c88e3000b332a6087c097": {
      "address": "0x4DE27A8aB9D3168dD8321F6Cba18939c951982C6",
      "txHash": "0x99ce4f306358313b91fd79cdd13ed082f6e937d3e5a01d1399c95d22bb9370f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6cb8bc24877a4b2564dc3e6cb489cf6618e27fb72dcb3de214ccabd88535e2cf": {
      "address": "0xD1cBc985f569A1bFf443d2D614aF9F573D59A953",
      "txHash": "0x8f3a804756308d490daba2c2d0c305f8c1aea7ed62d3f1789666662ac767fb83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "490c36bacbdb56ac3d2196208b209a6dd43abaa8e98d4465f1902b9421e2c972": {
      "address": "0x025a4365d4E3eC9926C1CC3838677d2a0A9eA0A4",
      "txHash": "0xc8637afb3fb67d646f3347969f8c913dbedcddc1c858216f025edfc419280465",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19837",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8411",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16361",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13253_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13285_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13200_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16361": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13253_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13253_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13238_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13204"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13238_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13071"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13204": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13071": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13285_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13285_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13285_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13262"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13258"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13262": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13258": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13200_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13200_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13189_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13189_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13189_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13183"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13183": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19837": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8411": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c859404cbd75e987fc5d8927cefecb22c0ba680e422deea69eb341ef164482be": {
      "address": "0xEB1E65D01F21DdF773929d38EF42dB26557CA1aC",
      "txHash": "0x3032dc82e39b0dbeea8afd43f6b4d70e1c6c86611fab463e7dcb3d6a071df843",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0f3f9156f460f498f170a62afc82f8d9dfb40ed8bb81b985c7f735c2ef8033d": {
      "address": "0x6B6c54ED161be3210Daa3a55625250Ab1f550b8B",
      "txHash": "0xb47f0e75ce079d78c31f949d6391de904e9208ff52a35b890468c726aababbd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7932",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4223",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7886",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4754_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4786_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4701_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7886": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4754_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4754_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4739_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4705"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4739_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4572"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4705": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4572": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4786_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4786_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4786_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4763"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4759"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4763": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4759": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4701_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4701_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4690_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4690_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4690_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4684"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4684": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7932": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4223": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23770026afb854176d8af63cc605f098c7e93c4fd0add8b4bec14dc86a68a5d6": {
      "address": "0xA84EDF304eF7822c5195Deac20F08b1C560C7401",
      "txHash": "0x9f32f262a3f2571ac0623834f6967365c9c907318523a74968d4e0b19260c5f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19843",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8399",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16380",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13241_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13273_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13188_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16380": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13241_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13241_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13226_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13192"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13226_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13059"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13192": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13059": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13273_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13273_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13273_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13250"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13246"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13250": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13246": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13188_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13188_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13177_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13177_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13177_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13171"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13171": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19843": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8399": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea91afff7d3ff9a039edb8541fc2244cd6b8f86e26151b7e91e601d94803f2bf": {
      "address": "0x4e05F7F381ddb0176427E698231ea7Ae0F3bB8A5",
      "txHash": "0x961fcd45d2726d673bc569eff23ec12884650e79c06990e8956bf5ceb6fc109d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90db14b704d6ffa26899b1bd86a38af8534c708aeeabccd9269c51683853c1a6": {
      "address": "0xEe5360E0Ed2F74Ed5C3f899b1b05Fbd655c85fd1",
      "txHash": "0xf180bdd73623273f371f8ce20be092f54fdf4c07ff195780f88f48e15068b0b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19965",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8549",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16502",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13391_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13423_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13338_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16502": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13391_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13391_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13376_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13342"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13376_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13209"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13342": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13209": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13423_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13423_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13423_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13400"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13396"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13400": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13396": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13338_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13338_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13327_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13327_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13327_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13321"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13321": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19965": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8549": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2daf46f55e1c8f7df25eca0bdeef845a4fb5f7de2ba8a6bfefd76253155011a": {
      "address": "0xfC9390C6a8Ee9D0B125Df4795C685F41C191816A",
      "txHash": "0xb337adac31a085d9aa2bb447d67d91ab4e4c3b207c52e54d8c5f0cf23321e6e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "da8712ab38475f6899b76036e63b1813da9653abb5d5988b6946722385f218f2": {
      "address": "0xBfaCa2720F54a0E052bB14290f50484Bd1ca08f5",
      "txHash": "0x8bd6f7ad0d5f1d3f74c5df5fea6246653bfd90aca94657ca4a53c4eab655ccf0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)20036",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8600",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16569",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13446_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13478_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13393_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16569": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13446_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13446_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13431_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13397"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13431_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13397": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13264": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13478_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13478_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13478_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13455"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13451"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13455": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13451": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13393_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13393_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13382_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13382_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13382_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13376"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13376": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)20036": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8600": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ca9aed79634271bff942094d04f0616680e2a481787639c9900c5bf5f2f19c9": {
      "address": "0x09D825531483Fa94476BB359caBDb1D7FF77DCe2",
      "txHash": "0x57826e6eaf3eaa1d5bbea9326b3b1f6804c3cbb39a4dba585f64aafecb5bb861",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1a6d056befcf6be61b395e1167edffc1f792475330e00feda7368eaac07fcfa": {
      "address": "0xeFAd5614767f599bd4979D317DC205F4B433b8Ba",
      "txHash": "0x1c634837ceb8aa9dc23a80e520d6a28a186725e870739086d11f08dfdd147900",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ffe690ef9f3acb41357e4c9d219f6ed6f7f70f2814622bb462b778963fe3cd2": {
      "address": "0x091d226D048a978AeFB4D7448b2560d397Ba000B",
      "txHash": "0xc71256fdce2cada3328aa906b7f53ceb66776e551e483409b49967b72599f191",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "be326522c4b0aafbe4ecdd37dac46a8aa678c528db4a2018888c8c6cd224dba3": {
      "address": "0x2e143b2d1C2617d81a3872071577856364d5FfaB",
      "txHash": "0x94a42f09772b8124b695ce57ea24b4c2b2a2a0ae6e1d17abc348eb66e1403bf8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8132",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4416",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8086",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4951_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4983_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4898_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8086": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4951_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4951_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4936_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4902"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4936_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4769"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4902": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4769": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4983_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4983_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4983_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4960"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4956"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4960": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4956": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4898_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4898_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4887_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4887_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4887_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4881"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4881": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8132": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4416": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66ee6eb58ef353467a62970ca4f9b7bdd5c514b1ba8f27c94a411df876190820": {
      "address": "0x9727785482e3745f9E65aAA9249f44C8680e3BF2",
      "txHash": "0x22eddcf99eddd8dddfa8ccecb7089a6387fea99b7eb0c62d6b9e68c6c05c0fd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "19b73cee8aced08fb9a74934fc65cc7ecfaf3c965077999a5f3890691a00287e": {
      "address": "0xE637D604b589A706007f1a4e7A7e0268a5E5a9FF",
      "txHash": "0x3136275dbd26db3bfd5be4fcac6df5d0a5b54ba7fa8c905bd0a1aa3180aada59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)20061",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8594",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16594",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13440_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13472_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13387_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16594": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13440_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13440_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13425_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13391"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13425_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13258"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13391": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13258": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13472_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13472_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13472_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13449"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13445"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13449": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13445": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13387_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13387_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13376_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13376_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13376_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13370"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13370": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)20061": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8594": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
