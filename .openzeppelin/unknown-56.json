{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x26ECfE62674B62eD551e498c34E196C3acb52C01",
      "txHash": "0xf9343a7bfa461f7b72e5673a0ced18661f6c6ddd5aae11a7e5124a78a010d1a1",
      "kind": "uups"
    },
    {
      "address": "0xF12320A7e5Fb3e840bF264B0f04e24EAEf7e8Ab7",
      "txHash": "0x791b80ff76bf89c423c0acd7cfff7da365ee911dbe80f37c76a037b029ff2873",
      "kind": "uups"
    },
    {
      "address": "0x185b20026B5B552b0A26AD0Dc5aA4F1D5e0a2094",
      "txHash": "0xcff56976ddd34ddd0c26cd030c2ef571f1f6ba34dff091bd5051acfb5878f693",
      "kind": "uups"
    },
    {
      "address": "0x6080dd4acd32D211d514264e9784daB6a3955873",
      "txHash": "0x4a31f49ef2f30870aefc0ab8bdfaa7b61567d06c5e2c778199e3c907f61b17ca",
      "kind": "uups"
    },
    {
      "address": "0xb9eAF9626Ba35b55acC8e328a95c48B5403b8621",
      "txHash": "0xdedf738d0788e10de571a7ff88081d397d7dbfa621bc22177780cb1bf3f6f7bd",
      "kind": "uups"
    },
    {
      "address": "0x6c34C17fA89E9c65fB5A691B6b71f178311279Cb",
      "txHash": "0xd58c1a4a12e97db04330031119e2e4de4a96621b1695232e6c53b3660169bf8a",
      "kind": "uups"
    },
    {
      "address": "0xa74284D12eFbFd719d03f5a289C763Bc7317b5bE",
      "txHash": "0xff75a951160f3d1a897446c1a017c305ad0b69d604e8afe5d1cfb11e6acd4708",
      "kind": "uups"
    },
    {
      "address": "0xBa19b6fc0E9059617C08d6224C7e1c6d3b8d7D2F",
      "txHash": "0x7c878f0351e2232d5f9e3b05cb93813f5af2753591ac44b83b5e1e542825c33c",
      "kind": "uups"
    },
    {
      "address": "0x2CFd86376139B990e7Ff7286498DC25E98F7457E",
      "txHash": "0xe896324f1c6aac84cdb60bcef6de39cf73a61ff02acafb07c841b7740ec0c81a",
      "kind": "uups"
    },
    {
      "address": "0x3174bBbA2BAD72e3e3692d2646D34aa6eE38C191",
      "txHash": "0x5fc2cab5aa120fb5634a2db6acd7add2ac75b09aa8455360e238a64c1559c8fa",
      "kind": "uups"
    },
    {
      "address": "0x07D7453Ca7E653a607D8336A9356b703F1380E1C",
      "txHash": "0x5e6565193a16b912589330fcdc6c0a2fe956e3d50e4cdcdd9387074ce196a044",
      "kind": "uups"
    },
    {
      "address": "0x5f64cd7F5c1BbF94c4097380283BE1f21bB68518",
      "txHash": "0xb8f4415e0714e3d8eced0085b530d7d682f2ceae2da70885ccd5d87efd96cc61",
      "kind": "uups"
    },
    {
      "address": "0x899e455358a9d6d6C8674436f12742E21530ac7B",
      "txHash": "0x9340eb1f3c6d949feddbd6bc10a6e6635a4d3e69a2e372c300b67dd93d0a4318",
      "kind": "uups"
    },
    {
      "address": "0xcB886b1404e16085D68C053ee7F10034953E5814",
      "txHash": "0x54ab2a37010f8c98ddb11586a934003d4670d76c61c818b4bfdd1b088dcffd1a",
      "kind": "uups"
    },
    {
      "address": "0x9361DECA56f2A6B9e8C6a4217da61DeF5dB34099",
      "txHash": "0x25f211e6ad6b9aa0e55cc5f181e75445e0152b6468f0838f745d54d579b91140",
      "kind": "uups"
    },
    {
      "address": "0x59B4871f4E41EbDE4D54F028c6faD76ddE47a7bb",
      "txHash": "0xe40f582544aa0be8484a73f93ca03d075cfacd190585471f25b4a4f204642e1a",
      "kind": "uups"
    },
    {
      "address": "0xcf6656fD6DF6E867B638Ad14Ca38A64fa7Bd8A01",
      "txHash": "0xb63dee60934b2b3dd6b154ad62e88375a0fc1a9515f1459e312cad058dbe4853",
      "kind": "uups"
    },
    {
      "address": "0x23C75f9534193f685Cf99606Ceea3Ee0Fcc69B3a",
      "txHash": "0x645d77a6d36cc257def2eb076e19d89d0762546b710342885af944e0cd2ccd14",
      "kind": "uups"
    },
    {
      "address": "0x9a698C7c01fE931290fb8ad89689832833264398",
      "txHash": "0x2a5280bc8766bbea4ba9464e8b7543711e44b1628753ee0c5859199cd02ded09",
      "kind": "uups"
    },
    {
      "address": "0x09dA08CEb4C30d6bCE0099d0F578A056c2f4Cab1",
      "txHash": "0x09a64fade4ade0cc823daef957994a01698fd22477e05beedc4492d710ab4783",
      "kind": "uups"
    },
    {
      "address": "0x963E09fA4F253552E6D069d5f63b817e420C2B10",
      "txHash": "0x24e6199ee70c931c50cdf592c22b0a9660581cf82426b72d882df8a9ce4cb4aa",
      "kind": "uups"
    },
    {
      "address": "0x6cA1dc9B29b4Ec704f74F8114CdF9ea59642be2E",
      "txHash": "0xd4b93e113b4a4d7ddebf232e6e66a21af8516905707f781adea99f751dc1e8c4",
      "kind": "uups"
    },
    {
      "address": "0x55b8d79128f45f58BE5bb5E219aD87E8e5D3Bbc4",
      "txHash": "0x9f2cf760ebaf725427bb31fe10bdfe2f1b74d88922fcf6afadfd3e0fb65cfc54",
      "kind": "uups"
    }
  ],
  "impls": {
    "1d462498d6af758972d447d1306c4937257797a5714afe503d5165e52f7e8cc3": {
      "address": "0xC4aF3cfDD4f9EdAEB80fCdE3155B9a7B936D7c82",
      "txHash": "0x7d6e57e807600b7e0753808e95e5df1f94b10f681b51ed7723a3f490f733f2a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)2763_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)3694_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)2763_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)3694_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)3694_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "016923643fddd6954a1ee46b66c323f450e92361b726a805c3edaa4fcc946f0f": {
      "address": "0x86FD8b8C6A6937Fb980a3C3091a3CB13a5Bf424d",
      "txHash": "0xd35f83f1eafa9d395357c098b3a20ffd92f90885fcfd16956918fcb9b5e5644c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)8442",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)8476",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)8442": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)8476": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)7411_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)7411_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)7403"
              }
            ]
          },
          "t_enum(AssetStatus)7403": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)7432_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)7416"
              }
            ]
          },
          "t_enum(EvaluationStatus)7416": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f528f52f46535216e4f126eb227b16a7bf3c66e8454d339162f2cd7d2fbe6578": {
      "address": "0x4826a4Bc681E9AC2c3C3e0428f22C64dBFB9be50",
      "txHash": "0xb3e04d9c7eba55dc8745fd5ba1718614c0ac15f120ffbf063b639941364050f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)3944",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:47"
          },
          {
            "contract": "PawnNFTContract",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:48"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2041_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)4132_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)2041_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)4172_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4281_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4313_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:209"
          },
          {
            "contract": "PawnNFTContract",
            "label": "_reputation",
            "type": "t_contract(IReputation)7221",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:911"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)3944": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)2041_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)4132_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)4132_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)4084"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)4089"
              }
            ]
          },
          "t_enum(LoanDurationType)4084": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)4089": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)4172_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)4172_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)4196_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)4196_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)4196_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)4094"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)4084"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4084"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)4094": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)4281_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)4281_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4268_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4098"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)4268_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4084"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4098": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4313_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4313_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4313_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4107"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4103"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4107": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)4103": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)7221": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5217c213bcfb167cc1582cbc9723a741e2f04a4ac640701d3d904056011d4311": {
      "address": "0x89DF185D78de51e92E9BD4371fA1B46b6f338490",
      "txHash": "0x18062260519d996ff03fa6f406e93b5c482f6073cc0e7b8a39a23eeb4267f32b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v102/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/v102/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)2429,t_int8)",
            "src": "contracts/reputation/v102/Reputation.sol:37"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reputation/v102/Reputation.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)2429,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)2429": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efaccc2ce1e4ca88a9764f8e300fbc7ae373d92d477e9b43a03007b2c50b0242": {
      "address": "0x45085966f4A29ff318F494E1209F9f4260Ea3c2d",
      "txHash": "0xd7aa60ad89799add29cdca4fc97701b92c1154bfd94492284462e80deb22bf49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)8370",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)15605_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)15645_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)15754_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15786_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)22914",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)8370": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)15605_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)15605_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)15562"
              }
            ]
          },
          "t_enum(LoanDurationType)15557": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)15562": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)15645_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)15645_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)15669_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)15669_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)15669_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)15567"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)15567": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)15754_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)15754_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)15741_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)15571"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)15741_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)15571": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15786_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)15786_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)15786_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)15580"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)15576"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)15580": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)15576": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)22914": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3faf1477ab144b8bb7f9a4c3235bb1313364652caed31dfd50a2157ce87f275c": {
      "address": "0xAaC1a6d50EA54B911c3eD36Bac9E1835b29Ecc9C",
      "txHash": "0xeb6e29229079d516d28a570a413f9bf7b366a2941c8a6cf8cf4f860ee8363767",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v102/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)23836,t_int8)",
            "src": "contracts/reputation/v102/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reputation/v102/Reputation.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)23836,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)23836": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d82e203679657b8b72fc95fd4a5338a4b7780dc66a4b43c3aaa712a3d4883dd7": {
      "address": "0x3514cB367a867aeF6cb20D239e125bd2260E5DFE",
      "txHash": "0x7fd398b831f6d68ef76d25cf1274cd415da8204fcb8c544ccecb11b5919b68b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)8449_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)8449_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)8449_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "a9bb09cc782b7af748108c5f8fdcc8ff76c128368f7786b82ef2ca96375a53bd": {
      "address": "0x722b1F083CcF338Bf3650194F67CB04D18844157",
      "txHash": "0xf0dc4c20fd7790994690fd50808cf60ab9d4ad2f6fafa327467ec91259f0e0f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)1617_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)3642",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)3676",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)2590_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)1617_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)2590_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)1617_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)3642": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)3676": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)2590_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)2590_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)2582"
              }
            ]
          },
          "t_enum(AssetStatus)2582": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)2611_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)2595"
              }
            ]
          },
          "t_enum(EvaluationStatus)2595": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14ca8ddd259f5df90a6e7597a9a30ebe80b6d7a8e00f834e7d3288d5bfd359f7": {
      "address": "0x031855df3f2653BF50C2683d01876399AA2Df6A6",
      "txHash": "0xdc0309459d3397ef7b91f2239c8dfd1bef6f2beaafee5e90407515279f748ff4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)8470_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)8470_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)8470_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "4794a87a39213e83cedd8265d97a9251a182c6b509fd9b1620f8181c7b852900": {
      "address": "0xBc8c88e9d8973df21495b5322B4F436E235456E6",
      "txHash": "0xf3227e362ccd0573ea55cd9c31b64d96b08b9f7272c08706bc57e15f95bf7c24",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)8471",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)8505",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)8471": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)8505": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)7411_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)7411_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)7403"
              }
            ]
          },
          "t_enum(AssetStatus)7403": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)7432_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)7416"
              }
            ]
          },
          "t_enum(EvaluationStatus)7416": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "63d6cd3a8af6979a0f5b58c7e98d0e6e66463ea6c4bb0dbdd931128bf9f537be": {
      "address": "0x8070604d487FB5eCD6e5728c0348A2D957e7B7E9",
      "txHash": "0x86e18a1c48ad96a702f0c1723aae2ca69c3d69c49e6d6752e202b862ee4eca55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)8370",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)15605_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)15645_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)15754_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15786_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)22930",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)8370": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)15605_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)15605_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)15562"
              }
            ]
          },
          "t_enum(LoanDurationType)15557": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)15562": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)15645_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)15645_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)15669_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)15669_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)15669_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)15567"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)15567": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)15754_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)15754_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)15741_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)15571"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)15741_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15557"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)15571": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15786_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)15786_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)15786_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)15580"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)15576"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)15580": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)15576": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)22930": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66ee6eb58ef353467a62970ca4f9b7bdd5c514b1ba8f27c94a411df876190820": {
      "address": "0x8e2fA1704886d3D40E97a6999Ea6f34Eb0384cC9",
      "txHash": "0x9e723473bec0e971fe0fff45cd9797f9ea4d0241295639674262e716d40fbab7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "399db0428080d343f11fd215ae07f175dca67f54c8ba0a35b5a7a82db4ec6cc5": {
      "address": "0xE52D1e7444D18883BCD7CE73E32dCB56c5532Cd8",
      "txHash": "0xa6ebbca2e1288484f1518aec6cbe72c36ea818baa29767a087a68aaee2090ddf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8149",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4418",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8103",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4953_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8103": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4953_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4953_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4938_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4904"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4938_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4771"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4904": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4771": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4985_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4985_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4962"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4958"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4962": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4958": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4900_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4889_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4883"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4883": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8149": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4418": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c5bdc11b1fae60cef77209d6a036387816410bd241aa98bdda698dabb18ee37": {
      "address": "0x034f86C2E1193B5054DFB94d731737d74394FcF3",
      "txHash": "0xf703502c8641b85513b6a2e06243c0d890dcad01e2a4fd5a2e279349225f1993",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8188",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4418",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8142",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4953_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8142": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4953_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4953_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4938_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4904"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4938_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4771"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4904": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4771": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4985_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4985_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4962"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4958"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4962": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4958": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4900_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4889_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4883"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4883": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8188": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4418": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aad02f92dda39d0bcfac2bceb2aed2bb8928121fe6045decee23639bc7840782": {
      "address": "0x658b00888c42907bb1a4d7416af382444B01eDb9",
      "txHash": "0x59d99512923238ced6cf34c58e97f537a09cbcf4c929056f5fc3ab8fda7c47ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2450a475d1f7ff41db772059581ca068a63d761e6712e4d679bf556aba0c1d7d": {
      "address": "0xb12D7d9F6F3763d9D86Dd96B90f7e201459340bB",
      "txHash": "0x5db47a2ba757397a90b387a2719f74331858472c95cec351ecc4f9f552f32bed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19352",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)7864",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15777",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12399_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12431_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12346_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)15777": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12399_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12399_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12384_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12350"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12384_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12217"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12350": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12217": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12431_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12431_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12431_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12408"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12404"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12408": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12404": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12346_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12346_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12335_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12335_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12335_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12329"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12329": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19352": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)7864": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c03e512981235652d4ef73043910e36050ea40501bfe81ff18b82898346ddd2": {
      "address": "0xbEa6c5823C976A2959Ec4BEc9C5067ff1f57543e",
      "txHash": "0xe9e77a17a689905cb36f2a240c571684f592b9100ce3fc9d89132960d98ae115",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7674",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3688",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7628",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4242_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4274_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4189_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7628": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4242_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4242_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4227_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4193"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4227_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4060"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4193": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4060": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4274_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4274_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4274_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4251"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4247"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4251": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4247": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4189_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4189_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4178_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4178_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4178_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4172"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4172": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7674": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3688": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "085433e504bf647169d033f600456afb6b8c953b603d361515b9c00333f2b102": {
      "address": "0x2cc4A3e28838df40646b2172981953A29C205df5",
      "txHash": "0x03faa08c6b1b5649e5479be31ece9b41dc033d5abecef12d5d76fb3f4963df89",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)18748",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)7873",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15173",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11761_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11793_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11708_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)15173": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11761_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11761_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11746_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11712"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11746_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11579"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11712": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11579": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11793_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11793_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11793_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11770"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11766"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11770": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11766": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11708_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11708_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11697_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11697_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11697_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11691"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11691": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)18748": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)7873": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32727f2bd893e4462f55daa1d8ba391c2dfe08617859456621e0b9bc068de611": {
      "address": "0x31f81f2D1172Ccb945690AA0883f67d303F8adbE",
      "txHash": "0xb8906a633ad4eaa41a67982ad3d2355f31bd94e5b1fec43d1657f960f3ed6dcc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "15a2b9103ad4d9c47be68342a60add5348e306fd2510f2ea68f246c3d63f8594": {
      "address": "0xdBA9fE5A12712234b8F1f762854e560C102F1F42",
      "txHash": "0x6edadbddbf46e0cacee1b9327bd5d1287339d4af44981474fc9100a64a3f7239",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)18748",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)7873",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15173",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11761_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11793_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11708_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)15173": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11761_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11761_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11746_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11712"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11746_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11579"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11712": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11579": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11793_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11793_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11793_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11770"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11766"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11770": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11766": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11708_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11708_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11697_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11697_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11697_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11691"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11691": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)18748": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)7873": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8bbbe013a43090b1d9f3c5fdb02cf300a568f548d1fb2b2973a3f2e570078dfe": {
      "address": "0x6CE90C06f224af362282D8236842bAaf982408cA",
      "txHash": "0xaa76164c8e2f8d4f79c174525fdb58dfa85a00ceeca86f4864814cffd1e078fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)18714",
            "src": "contracts/pawn/reputation/UserReview.sol:20"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:23"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:26"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)19343_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)18697)",
            "src": "contracts/pawn/reputation/UserReview.sol:31"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)18697)",
            "src": "contracts/pawn/reputation/UserReview.sol:32"
          },
          {
            "contract": "UserReview",
            "label": "pawnNFTContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:34"
          }
        ],
        "types": {
          "t_contract(IReputation)18714": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)19343_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)19343_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)19343_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)18697)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)18697": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf7d83de199714046212e5e38bb3872fcd1fbdce0013fb00996e30ceeff3a83b": {
      "address": "0x9f76403258B4E9D0228AC6D1be6a378157D6D75c",
      "txHash": "0x0d8bc0de05447741d92ae4971582ade56cf34e3e2dde8ec0e049834941e9db65",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:29"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:32"
          },
          {
            "contract": "HardEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)16605_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)16619_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:43"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:47"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)16648_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:49"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)16648_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:54"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Asset)16605_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Asset)"
          },
          "t_struct(Asset)16605_storage": {
            "label": "struct IDFYHardEvaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "expectingPrice",
                "type": "t_uint256"
              },
              {
                "label": "expectingPriceAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16579"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)16571"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CollectionStandard)16579": {
            "label": "enum IDFYHardEvaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)16571": {
            "label": "enum IDFYHardEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)16619_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Appointment)"
          },
          "t_struct(Appointment)16619_storage": {
            "label": "struct IDFYHardEvaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)16585"
              }
            ]
          },
          "t_enum(AppointmentStatus)16585": {
            "label": "enum IDFYHardEvaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)16648_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFYHardEvaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)16648_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)16648_storage": {
            "label": "struct IDFYHardEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16579"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)16576"
              }
            ]
          },
          "t_enum(EvaluationStatus)16576": {
            "label": "enum IDFYHardEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0a83c740ca42fede0b7a5b9cfbdab73f40b97f6e3502bb17b5348e42c7a76cd2": {
      "address": "0x2803b1FA3E5fD493E8CcD4Ac7a52863A45FCE923",
      "txHash": "0x4a9baa46cad032665bd9cb458a965fd6aae3a590f57c96b82e36bfca0ea6a280",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)14625)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)14625)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)14625)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)14625": {
            "label": "contract DFYHard721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c8a6bd33467cea6af12b7717348495d6a088fb94ffc5bcd3a3109dac478393ba": {
      "address": "0xF0c2844049394ab9dceC826660B900088E9dfC4f",
      "txHash": "0x03f80f4f7d4dc2f0feec8dbb88811fcd4a07a04a31bc102207b394fb9c59e3ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7b3f3511b9a71becd48eda68d509f5fc146e0bb132b7ed49edb0da21b3b48e9a": {
      "address": "0x4F4DDc3064B5d17232C3fa3df1F251A8a9FbBcE6",
      "txHash": "0xd158958a977eeece7667738d314e52c661c0e7d93b1cc4c8d84ed831d2d124ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:23"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:26"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateral)16881_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:29"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)16892_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:32"
          },
          {
            "contract": "PawnNFTContract",
            "label": "informationNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTOriginalInformation)17045_storage))",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(NFTCollateral)16881_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateral)"
          },
          "t_struct(NFTCollateral)16881_storage": {
            "label": "struct IPawnNFTBase.NFTCollateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "expectedlLoanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)16814"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)16819"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)16814": {
            "label": "enum IEnums.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)16819": {
            "label": "enum IEnums.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)16892_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateralOfferList)"
          },
          "t_struct(NFTCollateralOfferList)16892_storage": {
            "label": "struct IPawnNFTBase.NFTCollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(NFTOffer)16912_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTOffer)16912_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTOffer)"
          },
          "t_struct(NFTOffer)16912_storage": {
            "label": "struct IPawnNFTBase.NFTOffer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)16824"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)16814"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)16814"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)16824": {
            "label": "enum IEnums.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTOriginalInformation)17045_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IPawnNFTBase.NFTOriginalInformation))"
          },
          "t_mapping(t_uint256,t_struct(NFTOriginalInformation)17045_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTOriginalInformation)"
          },
          "t_struct(NFTOriginalInformation)17045_storage": {
            "label": "struct IPawnNFTBase.NFTOriginalInformation",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8cf447f0a5a0290000ba24eaa34d8dd246c1d21169beedf6068d9e28a9045ab0": {
      "address": "0xF82a16DCfF28965047e2d950687d40f041a3f0FF",
      "txHash": "0x38b6d8cace9574976a6d2581e34a2b09cf5314402d36b69a6b10f22ccc3d24f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "LoanNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)16892_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanNFTContract.sol:20"
          },
          {
            "contract": "LoanNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanNFTContract.sol:24"
          },
          {
            "contract": "LoanNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(NFTLoanContract)16959_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanNFTContract.sol:27"
          },
          {
            "contract": "LoanNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(NFTPaymentRequest)16982_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanNFTContract.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)16892_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateralOfferList)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(NFTCollateralOfferList)16892_storage": {
            "label": "struct IPawnNFTBase.NFTCollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(NFTOffer)16912_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTOffer)16912_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTOffer)"
          },
          "t_struct(NFTOffer)16912_storage": {
            "label": "struct IPawnNFTBase.NFTOffer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)16824"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)16814"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)16814"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(OfferStatus)16824": {
            "label": "enum IEnums.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_enum(LoanDurationType)16814": {
            "label": "enum IEnums.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTLoanContract)16959_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTLoanContract)"
          },
          "t_struct(NFTLoanContract)16959_storage": {
            "label": "struct IPawnNFTBase.NFTLoanContract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(NFTLoanContractTerms)16946_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)16828"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(NFTLoanContractTerms)16946_storage": {
            "label": "struct IPawnNFTBase.NFTLoanContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)16814"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)16828": {
            "label": "enum IEnums.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(NFTPaymentRequest)16982_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTPaymentRequest[])"
          },
          "t_array(t_struct(NFTPaymentRequest)16982_storage)dyn_storage": {
            "label": "struct IPawnNFTBase.NFTPaymentRequest[]"
          },
          "t_struct(NFTPaymentRequest)16982_storage": {
            "label": "struct IPawnNFTBase.NFTPaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)16837"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)16833"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)16837": {
            "label": "enum IEnums.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)16833": {
            "label": "enum IEnums.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
