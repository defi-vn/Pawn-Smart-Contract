{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x64aa45f81ea1a9e6acde60b937ce980e0a2888ec2bc0fb0b5f3a9ffe4ed4c3aa",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x7459bf33fa32bd4fc6c84f77f23fe7e68b8d8f295be78eb2b363e5b93973b274",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x64aa45f81ea1a9e6acde60b937ce980e0a2888ec2bc0fb0b5f3a9ffe4ed4c3aa",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xd23fd0a231be8cb7b48251bdf08935f28df19be4e7b81905e304f7a3699783e6",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x1fecbbb2aac4fb6a4b78c1ce4203fec3f4d093efd29a39860e13f1fa608e0dfe",
      "kind": "uups"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x341d00f5e1039fcd84672bf951f8622adb95b15bd5005e34f359986c93e442d1",
      "kind": "uups"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xc54211c0286820369c89ebac08e7060b8064f20b0e9d5231de7d007c333847f4",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x516ecdeb97bf6a5db72f7f2491d83ce58d63663cc952c29f6f08663a0f1a4fa2",
      "kind": "uups"
    }
  ],
  "impls": {
    "3faf1477ab144b8bb7f9a4c3235bb1313364652caed31dfd50a2157ce87f275c": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x82eb02c8d4be82afc556ee03fe64f3a6dd21080c0d2994d1c28687579856a8ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/pawn/reputation/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)19347,t_int8)",
            "src": "contracts/pawn/reputation/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/pawn/reputation/Reputation.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)19347,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)19347": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1a4e5889e1405d2bb0dec35bf0e3841e4c25c50002f22dd33adc40be6bad3c75": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x9c16b8309479fbb0b16146ab3b75d3bf4552c492519f035015de02672509261a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1aa7d26d4b6e633fa35ba8891ad4917d930fa00b040291d2456ba95519546fb3": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xd6ba39057f12779ba83433a44bc42016e04bfbd26368ce35786796520dc36181",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19364",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15976",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15976": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19364": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66ee6eb58ef353467a62970ca4f9b7bdd5c514b1ba8f27c94a411df876190820": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x13f219bc99427f75d7f4e5fda1e1bfce83427c7d8dff84264bc09e74a3c6a226",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
