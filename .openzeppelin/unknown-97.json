{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x23D2e5625d2645dD43477690D5FfCE1aA3bD55B0",
      "txHash": "0x1aa39c85f421d9a1bb644238f2e78c79206fed9ec02939ca63da984175276e34",
      "kind": "uups"
    },
    {
      "address": "0xCC106105fe42444Fe3138a522e83222bbf723620",
      "txHash": "0x24940d81c66c8291eed70c86bec57720877414909373eb40fc7dca0f842b3022",
      "kind": "uups"
    },
    {
      "address": "0x79FBdf7E1729FcA4ce50DAd3B5aAD5c6Dcc5c826",
      "txHash": "0x4b96612d6975acdaa5a20357d1bf02c97ef50c5532c7ddfb49d4bb40663944c9",
      "kind": "uups"
    },
    {
      "address": "0x7e4aC9ddA57cDAcBf297e7c8a78565AB21d671E8",
      "txHash": "0x1f84ad696ad07a0c4887ada00accadefafc2f8a63fa3fbda2bc201a5a4e8aa28",
      "kind": "uups"
    },
    {
      "address": "0x4e0FB0e1538868D813a35F5bA632023032e4d774",
      "txHash": "0xdbbcb11abb2a7f776c2001ec582a29d7551fa8ffd5ed1dd406725169035f5d88",
      "kind": "uups"
    },
    {
      "address": "0xfa7275F9C16E66fCA27140e9A7B49eC955445CBB",
      "txHash": "0x6dab557c753c3913c0e1d111a9a382d5222a8475731b6a29457b2cfcd5c47d50",
      "kind": "uups"
    },
    {
      "address": "0x67a46aD12a816A8E0c300E6F15ae80D818461833",
      "txHash": "0xad03610825104b1f638c7c5c2279e91740e6badb228d3334954c7063a122ec3d",
      "kind": "uups"
    },
    {
      "address": "0x4579aa2dDc1d5c45272F7fe11D6c553F71CAC0A5",
      "txHash": "0x333462e4ddaf8286f0a065f6ffbc60f1d7155acbca1854cc0ddbf845636a1844",
      "kind": "uups"
    },
    {
      "address": "0xBa262A08b25aCBeCb30F260D08455ec5CE945248",
      "txHash": "0x4507b7303f8b10e9936a4c618df0abe9d5820f792fac7c3c25f7fbef05d8d294",
      "kind": "uups"
    },
    {
      "address": "0x9B29CDAa8E1543505Eeb22c81767f6edEeD24808",
      "txHash": "0x450fe896b5504b210c042e5cff1a0d76a4afffde3943e96392fd1de3894c2082",
      "kind": "uups"
    },
    {
      "address": "0xAF3D0d8734E322001eB44e72446ba875A89d169A",
      "txHash": "0x3ea684209aad1a7258eb19d8dde151c03f95cfce566aade68492c8afe043cec7",
      "kind": "uups"
    },
    {
      "address": "0x81F8102238f8603938c3b88c99502a1dA8F85d1d",
      "txHash": "0x655bfefe2a6a483f6b5905bf337c2ffbf0190dbd8d14cb728a597f886dad685d",
      "kind": "uups"
    },
    {
      "address": "0x19e85f01F0Cb9780a212C30E89820AF65B952B8C",
      "txHash": "0x31abdb096af7234fa3db953de055beca53aeff0bae5fe1aeb4eea1d883a07e10",
      "kind": "uups"
    },
    {
      "address": "0x047792c742e1fBb2619454B9e1969c249DB2C07d",
      "txHash": "0x23c31667e167b2fbc71f439f79a8f2f6cbe69bc6aacc1a8abb1ef25f89f5d795",
      "kind": "uups"
    },
    {
      "address": "0xE855A904D2Ef6c8036b9C964FeaF12736aB02E4F",
      "txHash": "0x84a621b3d5ea2b8c7e2ba287c697de2412ada7841bbedc3f5e861be612076494",
      "kind": "uups"
    },
    {
      "address": "0x14365d388A5463794150177715C91F69F5ACb19c",
      "txHash": "0x482d63fb5525b07af90864ef0124b9fb852392a9dc117174d3ab322cc7652f84",
      "kind": "uups"
    },
    {
      "address": "0xF5FDD3376A442ab362A952A84756C363bb4E7427",
      "txHash": "0x8fd6597506a0ba0d1005b58b457d00ecb5ed173b6a9121cd0f98ac4e830b1741",
      "kind": "uups"
    },
    {
      "address": "0x96ae982Fd939eAec285944F92d7674bD073E8b79",
      "txHash": "0x0bdb25b3aa71752091a72bdb953d34259546d2d8d0a70f82eae3b318a30139c2",
      "kind": "uups"
    },
    {
      "address": "0x4CE8A0029cA7156c00b846A4faC2D3b0c7042263",
      "txHash": "0x4185ac601c13bd412262025b35fb983ca97a59050bccf09c9373276cd2c07293",
      "kind": "uups"
    },
    {
      "address": "0x19a5FCDfE12D6485215500EcFff436bBF1dc0fa9",
      "txHash": "0xf8219fb8dac7f09fc8fe758a9398dff170d0c0d4e37c67ba6f9641391443cd67",
      "kind": "uups"
    },
    {
      "address": "0x71cC286d506e26B57113fddC9f23b266d4048b54",
      "txHash": "0x088a9c64f75317f075fa25719595e4109e1ae9c6b8a1ba8b3b003970af918951",
      "kind": "uups"
    },
    {
      "address": "0x3caD070C9e76c03F85515cE12B5A6778e02D5E76",
      "txHash": "0x612c2090d28475339c0a71f2b6ee7eeb9073b8b8ea6df2732e66bdf9a8d4f362",
      "kind": "uups"
    },
    {
      "address": "0x7B0bA7EeF5eb95666D85be01a0afDFE5b1Ba7406",
      "txHash": "0x5449813c03e77dadec6547d2753692c588b07fc20df907770a013f0e25aa4a34",
      "kind": "uups"
    },
    {
      "address": "0x6A3F586dDeC3401d5a9148D14694f95590efb3De",
      "txHash": "0x6e9715aa08268cc1857f842e1f62d24e9502780fba2d2943643d8e1a814ed9ee",
      "kind": "uups"
    },
    {
      "address": "0x631E6ac6152aC2D67a47C1A7bA87F4456B9d41eB",
      "txHash": "0x67056baa44ee6fedad681d7e133c0b735fd1c5e1a43a5e47a788b315099b3fff",
      "kind": "uups"
    },
    {
      "address": "0x8eAcB46b269300386bae03095c0Cd703048C1242",
      "txHash": "0xb0a0cb6b1f611edcbdde55f58703df6c16e35fe99b292364f76fca63dc217485",
      "kind": "uups"
    },
    {
      "address": "0xA164569b805Af2dC1008C76D1132866182535240",
      "txHash": "0x04d1296fb453daae871dff1ad89170bb9d528049658ced60b0ed3ef20088631c",
      "kind": "uups"
    },
    {
      "address": "0xB14A5704bD36841163862bFC5d8E3fE2Dc5D637f",
      "txHash": "0x3508a0aada76795778c05397354bee07d469a9d95827c1d8be3d375047b8384d",
      "kind": "uups"
    },
    {
      "address": "0xf94B560871180d971e95D393df5E1bD9BBb566F6",
      "txHash": "0x415b85c029d0e09fcdf8444ee430f15bf00ada062bcf8a9f9b02853daa884ea1",
      "kind": "uups"
    },
    {
      "address": "0xBf7d1C39baeF1E329830854eD8Bbe0BadcBA7A2C",
      "txHash": "0x31b68581f77e7203b7712cf157374c1533d569eed75b3d3c7249761794527723",
      "kind": "uups"
    },
    {
      "address": "0x4EC1B055aA52835ccFd1E57b02d34e6728B68BaB",
      "txHash": "0x8b3a569b62095cc3fdf27af8048be5bb7e7e9d4aa7f367373175673d1bd7bf96",
      "kind": "uups"
    },
    {
      "address": "0xa65615374A9765c9D105EDD9d8A001ceCC4a3b0f",
      "txHash": "0xd21e043948c9100e43a3ceeed244bbc5a47ade687ab41df5f1eebff4e3d30117",
      "kind": "uups"
    },
    {
      "address": "0xE74878dbcB13F2c376Bf264Cae46e02A4B4bBC8E",
      "txHash": "0xa3f4115bb9600687cb9af47c023602ae79af3a8e8fa9999530eb8df274884539",
      "kind": "uups"
    },
    {
      "address": "0x11E1d30fC66561576b1c227205dad3779a22c21b",
      "txHash": "0xcc6d6f1238ff8ca99864af3c0e30996d4d414a4823beee7a533d155c3ae93e09",
      "kind": "uups"
    },
    {
      "address": "0x9Fccbfa30635e7825537Cd74f307882Ef5904924",
      "txHash": "0x6aab7a5fe3c71f1d9431460604f3bd9b0e57b599e1aa246d4faf6240df59a634",
      "kind": "uups"
    },
    {
      "address": "0xe0C97c3A606B9A711Ad73002601bf8d3e11F5A5C",
      "txHash": "0x7acaa34e5db9ff22cc7ff3b4294ce55260c2e397b1c9803d946c1b74c6cec181",
      "kind": "uups"
    },
    {
      "address": "0x638AC20ff6B754cA5D6a0BDB388BF3d694C596d5",
      "txHash": "0x63dd6de71b88c037700d5cd2f50176f364f326c179367a0eb0feaae7dc100e87",
      "kind": "uups"
    },
    {
      "address": "0x9cbc3ee86Df38f89E25b72d580D342e03dC16eE8",
      "txHash": "0xffcdedcc85ece60d25b24261bffccbcee0b100a843cc2050f8b35c6ca68d506e",
      "kind": "uups"
    },
    {
      "address": "0x9E27257Af57B01a585F8a35d694a1e55E3af3bE8",
      "txHash": "0x3e13954292557c50b2ec82222e268ce46e000834cccc1721aeb9f53ceb5bdbc8",
      "kind": "uups"
    },
    {
      "address": "0xdcbB03C150c49b70f6081A16633784cEC4cFF26e",
      "txHash": "0x961fc96cb5f2c4e091f56cedf899953028ffaa91482dfd848e332788caaed613",
      "kind": "uups"
    },
    {
      "address": "0x0aB46d671B56570E00DcbF450Bd358B482D0E5d0",
      "txHash": "0x1518b2a2c2f15ee59adf5cf34839d614f3d722ac4ca4ab84e62c4057e54b6309",
      "kind": "uups"
    },
    {
      "address": "0x5A0DB1B99C6c8A1bFa17cb5085871FcE9097cfF4",
      "txHash": "0x6dd33d5ec532fffba7f0f9acb0371c3d002ace57cfdabf9a68a12b4dba53d20d",
      "kind": "uups"
    },
    {
      "address": "0x3F970Af0b40e8Bb8eE41a5B978F9A5f6b5FE5B28",
      "txHash": "0xdbe67bffe63095c2116642d7cfce010b5785acb6d8e335af2481d9e61ee04a8b",
      "kind": "uups"
    },
    {
      "address": "0xc2EA37a4440d17Ff7FB20fd2160A5e949aBF3D10",
      "txHash": "0x1896a24e530168a709b037c6b407e423a3a8e4db798e29b6713b96d61ee020bb",
      "kind": "uups"
    },
    {
      "address": "0xA4dCd2ccF01A9F056083BD910d215B2BE6A5DcEa",
      "txHash": "0x976df8bcab30c9a7ca6bbd1d1aa8e942805bf8f45bcfe29f3cf315e9930c56d8",
      "kind": "uups"
    },
    {
      "address": "0xdD2e8c25c1D47370b13A7eA69710b805939A5655",
      "txHash": "0xed1bbcd0e2abd919769a33a5e12b44416418dac59fd6709b1279da5c273363c9",
      "kind": "uups"
    },
    {
      "address": "0x26245CeD315379964134a46496B1b2E09e6a8B70",
      "txHash": "0xbd8735a86e9a0bdad2ffc5eb69f6a4d80c34c538f041d043b1283cbd9d395b4e",
      "kind": "uups"
    },
    {
      "address": "0x23568366d5Bd710aDE3dbF7958ec622D4a545D8b",
      "txHash": "0xfcf19e2f5f3108eee5605f03818fe5856dcc3b7c4b2553c2478a1d8a5429db91",
      "kind": "uups"
    },
    {
      "address": "0xF00c05E07E8cDaF61923d4ED7aBae3DfDb923693",
      "txHash": "0xebf965bdbe1251c18b150f8bf80b7fdf0ef84a10696780e99834aa4fd0ac6ac0",
      "kind": "uups"
    },
    {
      "address": "0x240d72CC9392f91433e2594E0848027d3BaAdC58",
      "txHash": "0x504be149f0d6462a80e0fba73371a07b0f7a26a5b62c1b7c5ab16e5dff281bfc",
      "kind": "uups"
    },
    {
      "address": "0x4420Ab4bE83021c1337F77F4e75826aB4Fe0E4C3",
      "txHash": "0x55f94bf6314c58b5ff32b830f2ca3cf10ef7892f9951603357bb05a0375ae9e8",
      "kind": "uups"
    },
    {
      "address": "0x6A46C953F7bE80f190Ccf4b91AFD904116423B0A",
      "txHash": "0xd4c612269faef51e3239396151607d36473ef9e0df1e49339c3ff0e5f451f27a",
      "kind": "uups"
    },
    {
      "address": "0x2172c0C6057aFD42060CEc212F10eF145b5E882e",
      "txHash": "0xc484bf27b5e2f51f6c702df0e1d136de70a6dc06c6a82d3fc923db82f1818bdc",
      "kind": "uups"
    },
    {
      "address": "0x53211aA9f19E73498549db4A42AB882a33F9Bb6a",
      "txHash": "0x093d427366cc9ab7810d62c514e4b414bac9e2d2f4970349ec8a9df1e0166f28",
      "kind": "uups"
    },
    {
      "address": "0x9e3E27C18303cc0f76f9f91976F0D8d08Db4F7FE",
      "txHash": "0xaec3a79ed8c5b220fcb6db12a0e7091bd7fc14fa3e2348b1648afde8a513d8f0",
      "kind": "uups"
    },
    {
      "address": "0x73fa2441feD49b45893038367A97703b4f422276",
      "txHash": "0x5e889f483174d601ba9082505ba6a1483acc78bcf13cb5e9b113ab35ab3d6bc0",
      "kind": "uups"
    },
    {
      "address": "0x0b4DAe1Fa77946C8B713A6F31A337Ff0221cdcB5",
      "txHash": "0xe153507e7bc9f86596f65048f856421ba97e1b41431314e33fcd2aa481c44bee",
      "kind": "uups"
    },
    {
      "address": "0x8692e5EaE143A71d0d5D45E6a47135d58dF1F592",
      "txHash": "0xc21b84c0baf94d2dc486c4b4dde006d3f1366e1d8c760b8008e2dc33d5e7758a",
      "kind": "uups"
    },
    {
      "address": "0xc14593f7B48D03B517118c9fE773B381c75Eeb21",
      "txHash": "0x03d779def00810a3d36e6256876f4a5b835b0834dec27fc4e9b9e737b487c327",
      "kind": "uups"
    },
    {
      "address": "0x3800eA7F67fE0c4d3D3AB2e147C3a38E55934835",
      "txHash": "0x2492a2dbce10c43a03215bfc42993125fbd8f9095de2bf332f982743c86c9041",
      "kind": "uups"
    },
    {
      "address": "0xAEF8413160C293e2f990db245822C5381EdA72D1",
      "txHash": "0x9adf1ac6db82cb03ccc49728b3e15d22a7ac51b2ccfa7df800d63508dc50b5da",
      "kind": "uups"
    },
    {
      "address": "0xf24a68C5528830E4c5F8Cb6fDcAE067e382200d3",
      "txHash": "0x77983a53ff728f4317f99e346f31f121bbcff53abd7101062b15bde35ea81c28",
      "kind": "uups"
    },
    {
      "address": "0xE7264Ba3661cc2449777813e80d1DC98994FDB7b",
      "txHash": "0x235c61b81099e45d01cc4760053620d7654900b1b3fb4291dfac583bf803c4ee",
      "kind": "uups"
    },
    {
      "address": "0xe1ac11563Bc205a0f529F808cd460989ad74CA2d",
      "txHash": "0xa40bcf2edcf81305a714acf9de84c0c749853f8ec2324ba9442dbafbcafc19ff",
      "kind": "uups"
    },
    {
      "address": "0x7f224AC90200c02410EE2E652b382FF9F226F0a2",
      "txHash": "0x81aa3170d00cfe2e4a2e783cb3db7fbe868763d91bf9c952d5ea1cd2e821a6fa",
      "kind": "uups"
    },
    {
      "address": "0x307B75237B61431C5d4d3e7F361f1eFF3Ee4ccd2",
      "txHash": "0x5c37838509113f4864dedebfe87e14c11e18f022ea5a1ec47ee980443420bae0",
      "kind": "uups"
    },
    {
      "address": "0x0FD4c874f28422d76F5410f2b22654cA5C99C4B8",
      "txHash": "0x79926382ebdb8d7473fc890a7ad2fd0ad9efeaccf462a97a5b3f4a502326829a",
      "kind": "uups"
    },
    {
      "address": "0x8e6eE309767347108553E0f5ADE71FDF4CaeDf86",
      "txHash": "0x1c6783bd0701ebd7f1e342058a41e8f559fbf65d962d07adda0b54330a2a46f6",
      "kind": "uups"
    },
    {
      "address": "0x07C04cE7ad98C90f168310E1995deB6272Ca4d42",
      "txHash": "0x5e353a259e4448859a7b6bb84b4c38cbc24159799e109111a8945638a04a38b3",
      "kind": "uups"
    },
    {
      "address": "0x90C3764c2998b57E215704938EDA227a8466b3aA",
      "txHash": "0x19b7184ef35333c030113b620684c3ff7cfbb4009707671c0e206c790100b273",
      "kind": "uups"
    },
    {
      "address": "0x2fb8d65a817f32E6334dAA25D8CFe5fdE2027e30",
      "txHash": "0xa348a57b0d727b0c280268671dc4ce5c2747e289ac62b0d181f07176b35b3055",
      "kind": "uups"
    },
    {
      "address": "0xc3aa443940Dc788592F6Cd9008998741F93f40E6",
      "txHash": "0x6e11833d21f8df0042a44d909d039d2ec4aa182e72a2193d806cc8028e900950",
      "kind": "uups"
    },
    {
      "address": "0xC6e746e15Ff62F40aF012196b92a50d7C5e30d17",
      "txHash": "0x53352ab54b2cd51526e1c8acc71279efb1761823b5117beccb9b1a2d41aa7452",
      "kind": "uups"
    },
    {
      "address": "0x628fC5827360AAc81C3DF8981b25b302c9FE2d25",
      "txHash": "0x866c8d93274d798344ef0de4bd276cf86def993b758141441878be65bdd57984",
      "kind": "uups"
    },
    {
      "address": "0x52735aBdF9Ac8D95507b72e3d69984eEBCbe0d18",
      "txHash": "0x4bc21d1c36f9fae7d24ea613c8a745228328122663c9b008209eb9ee08250b0c",
      "kind": "uups"
    },
    {
      "address": "0x5d4941cadF21Fb26D53A8988Bae634fB72D4F775",
      "txHash": "0x40b08efa0484137db7fb35e5d3418ab4c1d4d7375c8e0ef1a99f462b553edb77",
      "kind": "uups"
    },
    {
      "address": "0xdD5bFf506986C9aCa431Fe02fa1fC9e36BB2bD7e",
      "txHash": "0x04a1135c840a4a875befe10a584352a395544dad0766453614cd8ab45e0aaf36",
      "kind": "uups"
    },
    {
      "address": "0x1B6D9d69D60d766F4F605EA281634f8cd1975176",
      "txHash": "0x201faf03e12a65ab552234cc50738dc66f95f04ca8e152ad2687d37e255228d9",
      "kind": "uups"
    },
    {
      "address": "0x20BBac1545B9e2a94AC22f8132E27E422CF430cE",
      "txHash": "0x9b5e446f257e1bd75b513d9ca2f6fa0c88283fd0a1c92c19d98ce9a197b983e7",
      "kind": "uups"
    },
    {
      "address": "0xc2E9aE60311c342dcCab83aa48518577b28Aa5a8",
      "txHash": "0x906fb28fdd70ee66b7980f4475dfddbaaaf2fc36fb300c79c4b672ad942ecdab",
      "kind": "uups"
    },
    {
      "address": "0xBfe260DbFC644f5c4D687170d6cD30bc5397d13B",
      "txHash": "0xb1f71e8a180d7c605d6b60bebb1949e43c7b752b6a3a64db39d60d3f7e638df3",
      "kind": "uups"
    },
    {
      "address": "0x3ad63cD38900A1889deaDBaF4f600728b4513950",
      "txHash": "0x9df363e6d21535b548bad3273c7f34c0db1cc6ecb28a04ac970e7d5e5a802c75",
      "kind": "uups"
    },
    {
      "address": "0x362A166aC03f041Fd6340dE6e92EA1c20813a560",
      "txHash": "0xbadeb31b0f59595fd40aedf6c0457d9d16446f6190899b909004082f58d40f5c",
      "kind": "uups"
    },
    {
      "address": "0xDe9256017932255B1336B457Aea37637F8b54913",
      "txHash": "0xc139931df4f8e0de8003c76bf53acfe611e3522f1e8bc015e4587e85aac6a9f0",
      "kind": "uups"
    },
    {
      "address": "0x8f93769C940A042256D4FF413FC2c53e594993A4",
      "txHash": "0x042eb5271c57881c7247ee1b7bfceaac001f47cf3a23e99b480046e650676894",
      "kind": "uups"
    },
    {
      "address": "0x8b988f599466ea9314A5F2bE149fb2d09199F3e8",
      "txHash": "0xb285634c7ee8a9c7ff80d94f100cb94016462da571022785e5d0f4d0d26c1551",
      "kind": "uups"
    },
    {
      "address": "0xA15826c2f4176e79a423d4c10702A6aB130E3b8F",
      "txHash": "0x6889489468bdbd341839cb48b8dfb0d314ddac851b0aa562ff3300c32bac879d",
      "kind": "uups"
    },
    {
      "address": "0x444309130991810ec7967bdaB7A8Eb1Ad243e7Eb",
      "txHash": "0x5a12c9253e4bf9efb6a733d64746c8af8060a0f5db670ec44fe8c8261238ea49",
      "kind": "uups"
    },
    {
      "address": "0x5cAf035460581C92212107e5C8462c6B88E66C93",
      "txHash": "0x062ac8da7d42798ddf79a84d03f0eb8d01f26da5cac25fc0adfb2e385300d891",
      "kind": "uups"
    },
    {
      "address": "0x69A432fF2AeeFD03C2a1795174fd2806154EA246",
      "txHash": "0x87b4ea44f891e45659ba149e5e847a19399cae1b8623ead7f0395776f4a0326a",
      "kind": "uups"
    },
    {
      "address": "0x15A11557C7bE665D254438133cc336c387A5fCa1",
      "txHash": "0xc8716a929e0c7b0963e6e02c8d4d93c1dd9cfb36497597f873e3e25498d53cbe",
      "kind": "uups"
    },
    {
      "address": "0x120756aff7F985A9c9963024c8eeBfb758F9aF14",
      "txHash": "0xa1f625d62295ba9eab876374e3247b233aca40700cac869e1df6374454dd669a",
      "kind": "uups"
    },
    {
      "address": "0xb8f7e256580674C061120c6D0eA5D6e6527D4D3f",
      "txHash": "0x9c477fc831a5cc4d27c902d17baa12249f17164f14d31c9601d5f00e1b573340",
      "kind": "uups"
    },
    {
      "address": "0xd8d3BCE7C185AC1EA7b712C0697bBEBc5E4E8722",
      "txHash": "0xba7e1ab66946fb24fd482051e81db562704b727a9a36ce39dd260bb41d4ddde6",
      "kind": "uups"
    },
    {
      "address": "0x82Bfa6096E4C8c7727692d2429bCfC3730Fe83ff",
      "txHash": "0xaa4aeb43702209b5b66ab09b342c58aa95c7515e870b592e9af4213b7bc0b80f",
      "kind": "uups"
    },
    {
      "address": "0x74BfE1c72Aa9E03Bcd4c13545266247f0049c99E",
      "txHash": "0xd38d2f3df843fb117b113885854dfd2e4f4320c2eb61f273914a2f03cfb9f81e",
      "kind": "uups"
    },
    {
      "address": "0xCb977D866783670fE9F2C5474f4EAa02a82d07e5",
      "txHash": "0xd8285fedf3c05769fc9ceb54d209964d2df94aef696b1879d4b5e5273fae968c",
      "kind": "uups"
    },
    {
      "address": "0x7C8BAfa0CA8EfF673A35e872ff7023B3Abecae65",
      "txHash": "0xf3fad420d2525b5ebc83a7c2334d9f850096ad19fae250883cfa578d36bd949f",
      "kind": "uups"
    },
    {
      "address": "0xbAEf8911C1473B640B9e7fE46dBb676B3Af6Aa81",
      "txHash": "0x0ac6a7e09b98ce724d997d7b9c355e1f96e7307c9344ee521e73752ec211ed63",
      "kind": "uups"
    },
    {
      "address": "0x163B5aEc1849BE108BF6B90348c497E80a18753A",
      "txHash": "0xad59b082a2c2de693b3bfc4d6a4f04b9338722b3f89674c6ce44edeba70e314d",
      "kind": "uups"
    },
    {
      "address": "0x94C09760207A5039C5e6af0eF887A91d81457F74",
      "txHash": "0x0a892ebe30b562f699c748dd9ee35cec9c8a9c4f28dcd30dd7fdec1f3fa7ed4b",
      "kind": "uups"
    },
    {
      "address": "0xAe1de1474e5EbCc8daC60819329f909968148292",
      "txHash": "0x57ae510d6ef0b71b9e8eafe07ed2b8f717068cfdcab1115821c773be4400555b",
      "kind": "uups"
    },
    {
      "address": "0x1f72EE874Db252b8F90c130Be34Ee7F4b09B86D4",
      "txHash": "0x71f0b92df076893295684fc417bebaa996be4823515e2c088e70aa4259116e6d",
      "kind": "uups"
    },
    {
      "address": "0x9EA306dC1D314849Ed0899Eea6CC130eBcce8EF5",
      "txHash": "0xab17bdbd30ac41ab1e428830571ce553fa16ab61fb69f6ba25764dcd78a4bf77",
      "kind": "uups"
    },
    {
      "address": "0x257ba7f5092A10fB3a9D2289C061514D66425E38",
      "txHash": "0x4b28bd5f4a2ad2ad65ca2d3b4a2570582965277f462bfabcc8b4f9691789e665",
      "kind": "uups"
    },
    {
      "address": "0x828f4b1dcae29B54934107F69cEa9C69210c9060",
      "txHash": "0xdc891458b77798e086dcafdb9546c29236cef5e5ffffd224b30456e6770ba4ed",
      "kind": "uups"
    },
    {
      "address": "0x8F8401aEEFa7AB0e0c0fcD5aB05f6f7042A7Ea0E",
      "txHash": "0x2ff1f18182b3fb1b2622f376cdb31b1596cf2a7d62cf9baeb22afdba24d99c00",
      "kind": "uups"
    },
    {
      "address": "0x3690c9D3A8620EB580fE6656C2a9ecE171A0d51A",
      "txHash": "0x1564a80c0226fdc9700cf9ab157ae74aa7c974899298e6788bf619db3c6886bb",
      "kind": "uups"
    },
    {
      "address": "0x2c8F19A846cfb9f739467A8B17E62B128b90E8A4",
      "txHash": "0xdf40e7d68eb1f5bbaba5777b46c52569284cd02f46f6fd42fc72ebb9f6ce07fe",
      "kind": "uups"
    },
    {
      "address": "0x7Bf9B188c7A43FABAFA27ccA30fE68819DD5f847",
      "txHash": "0x7d142688a98a62a9aed7360dc844edb592a623900f489b24957af8393c1349cc",
      "kind": "uups"
    },
    {
      "address": "0xe088aF9b20876aAe459308958E579462Af616c8c",
      "txHash": "0x56e2ae248f94f86ae60c33d47becaa016d135dcb0b7f5ff9d01f3dac0dcb17c4",
      "kind": "uups"
    },
    {
      "address": "0xE4cbdfbb6852289DE6df7C83020bf9310ce75979",
      "txHash": "0xd883fc94d12a43fd5054185a076dfe80708ec1908ad77e64e66eff69f2b497a7",
      "kind": "uups"
    },
    {
      "address": "0x97A1543CC9266EC7450Eb36AB2dB8834C92Bb63e",
      "txHash": "0xf9b50c691cc8ec6c40b04d4ae1887819deb278f9ffd069e224af8eb472ebb38c",
      "kind": "uups"
    },
    {
      "address": "0x192a4cDb247e012e5EF0361226704Dc27CA98036",
      "txHash": "0xf6f21a5965f41ffcac3f3fd40f18d73bd743d882d7cf3a470f1a5c9403f9f2aa",
      "kind": "uups"
    },
    {
      "address": "0x368811fE860dc30a1a7Caf99025Eaa63152083d0",
      "txHash": "0x1d562eafccdaab6098e9b19c49884f3a3ac45fd530618f41c2ae4c0acf57fc2f",
      "kind": "uups"
    },
    {
      "address": "0xf5b3388e4044D76DE5325C9f4a911F9fCaEC93f6",
      "txHash": "0x40cbf7c2addb31edba8917d1063a1256ab81999a0a5313ecb3f68e1b8d2913d4",
      "kind": "uups"
    },
    {
      "address": "0xC2bDF4Dd8d4d87a788868Fa3Cf60ADc828bde90f",
      "txHash": "0x9e2cca0741fd7dccb4e37372b79334d483d05ef4bf17779919a228e35a03a922",
      "kind": "uups"
    },
    {
      "address": "0x1C869BAaB46AAf44EcFdFb790886bBf39a3CEe86",
      "txHash": "0x20678fd736539a4ebe5f534f38361fb52a985a25cc4d766f737b1e4dd347a534",
      "kind": "uups"
    },
    {
      "address": "0x714EfBa55CEDc0cCD5D84A3a8103c13EA7553FfE",
      "txHash": "0x43cf3578ce49680b032fe9013c396a16523f82d2f79538a93fbf689ae6c234f7",
      "kind": "uups"
    },
    {
      "address": "0x7099F7bb9cC0354bd11aBa756C45411B6039F73a",
      "txHash": "0x370a19f538a2ed8fe339cda1900a72b8c606cebafe6d6603757bc223184d633e",
      "kind": "uups"
    },
    {
      "address": "0x82E2123DB053AFFaDcAeCFe2cAAd49596708069b",
      "txHash": "0x51b8c15df5a819d008085650c08ccb031576103b7a211a41a57aa86ebb188fb0",
      "kind": "uups"
    },
    {
      "address": "0x99E88BA3D6d0f0Ec14D876cF3f828D5D7B98919d",
      "txHash": "0x977704a78e13268b8c7657f730529c636ab599d5424b7ac6044fe590207e83a8",
      "kind": "uups"
    },
    {
      "address": "0x83A1688D28992c4c3c82B73b23aC74Cc397ee71F",
      "txHash": "0xe98ef8f20859a90d75d7968b108a3790ef7b18679a7b31f3be63bacd305b0892",
      "kind": "uups"
    },
    {
      "address": "0xedE78E482b6C1121aCBD71a474aC823423105666",
      "txHash": "0x244963eb8f523cae0f03c2ff634f44cf28d6892e18221d13d14c9faf0e0c13fe",
      "kind": "uups"
    },
    {
      "address": "0x26eb2bC16276Fd05C1784fD31279dbf99eF61769",
      "txHash": "0x26a903f8a8e1a887029717600be124ab3702c60cf2e5bebe2fd1eba64022fbab",
      "kind": "uups"
    },
    {
      "address": "0xd247F1f6455E747d9854282115bd6D1CB9b39206",
      "txHash": "0xe3caf8b1d818f7170b1ae0d9da319d72762080be3342dd73f28ca95864f6fdb1",
      "kind": "uups"
    },
    {
      "address": "0x8193D4016bEEb2B8069996Cf09e2c38D6e16bE7C",
      "txHash": "0x6618e2bf7e19f526550a3b9f1d39895a5e00b42082840fb4ef52c2c3f9a9bfdd",
      "kind": "uups"
    },
    {
      "address": "0x885E59AB19140C50417f761A75ab0E6b776e69C8",
      "txHash": "0x3cf6a6cf590bb9130b3ade563c90028d3c20cb7188aec612893871dd71e778da",
      "kind": "uups"
    },
    {
      "address": "0x9d3A2c2D15B71268b20030e50340bbBe2a25d508",
      "txHash": "0x0ef20dce4ed4e836adb409357a0ad27f0f3c72aa287b6c76a120deb4103e2194",
      "kind": "uups"
    },
    {
      "address": "0x78A3c701dE6C7Bd93BE2Dd673F7D8F091e5a7a6C",
      "txHash": "0xa839e296cc7b61763d0ef9a8f0b8bf6e5e04a5f5029a744ef050b39a7fa8130c",
      "kind": "uups"
    },
    {
      "address": "0x104B4259742913297CB630E75cE03EaAACb5Cb2F",
      "txHash": "0x7ee0fbdd5fb8bcaf6cb80a3dfb0db3db0a067d61798b94261650a2202925ab3c",
      "kind": "uups"
    },
    {
      "address": "0x73de21E988497B97F3CA82c5Fce316468db0bd8D",
      "txHash": "0xfb824cb039ce18b1c9f8cbc74b675017ae49c9bdbf7151e28c203aa35df5f554",
      "kind": "uups"
    },
    {
      "address": "0x3dc34b42d7633E53FE7eC2703309D05dA4f2eF86",
      "txHash": "0x7c92a30120875d5ac7b56962014cea3ad1bb80ab5afdd411252c9d7f152eb855",
      "kind": "uups"
    },
    {
      "address": "0x703204148eEa1a70b28BAAFa99f4d14bB7FA8Ea9",
      "txHash": "0x6dea1d6e120bbf432578544dab537c5f09750a5cec5ce9a562106964c15b2e34",
      "kind": "uups"
    },
    {
      "address": "0xF124Ac6EAe6a1CD22a5D4cab44C0D4A428334520",
      "txHash": "0xf2cbe7a4706a6e950545ae24af18aa6d5fe1d8f1158b5299fcc93c1f8f7efbb1",
      "kind": "uups"
    },
    {
      "address": "0x92E1cA6a6f3aF38cE28fd49E817a1fC7b6E2Ae43",
      "txHash": "0x9bcb8b2b03e92352c35497f1d15a821c20db435f4648fd0053400005dba4d457",
      "kind": "uups"
    },
    {
      "address": "0xe6AA019a969D90B17c1aD9a1b56BE7ac835a2b71",
      "txHash": "0x4ac10428e2866624c20dea62c0a85cccb27060ca849a3fc03d94a673a00d476f",
      "kind": "uups"
    },
    {
      "address": "0xcfe375747B787F768F763C13Df60Be4F0199061F",
      "txHash": "0x283cdbbfe9c154a3184e68eef920ed210f8765361d571e8327d40f5d5d60026d",
      "kind": "uups"
    },
    {
      "address": "0xa37c54c4b2fb15AFCc8F95071B5c47329FEdfF02",
      "txHash": "0xeb287aac10474384ace8b74be75255afd19ee9ab5ba9284f3114e89260b07bd5",
      "kind": "uups"
    },
    {
      "address": "0xf86BEC1968F5d4a2e51640143B52C65F788795Fd",
      "txHash": "0x99b39302b219983f2ff4487bbb47a6f07dfead40bdec53a82646ea68c4746232",
      "kind": "uups"
    },
    {
      "address": "0x43474a918bCAE34E0c1f5969b062330c2051D900",
      "txHash": "0xc5f93134ee7f95e6bd066e50391671fc44209edcd63001488bd3dd7f9345fd2d",
      "kind": "uups"
    },
    {
      "address": "0x5c42Ec0414C78C7c13899b4F452f315CE22A8F44",
      "txHash": "0x48b0da3d07e9af12a9177d3c39c6e3ea978cb40871d42df8767010ae3e3f4618",
      "kind": "uups"
    },
    {
      "address": "0x4638e02E0d7a545e3b3Fde1404ae5Dd8090025Da",
      "txHash": "0x9edd5887ed11291c78ac20a8ae9e767f4e97b4f691705c35b1f02e19cb47797a",
      "kind": "uups"
    },
    {
      "address": "0x5C41978001FCDf630f6a66d4f8F3f491D5aA8F7F",
      "txHash": "0x99428d1dba2e9545cedc0b6823b39c9d493d2b3cd485d89a9752cda4f1134f74",
      "kind": "uups"
    },
    {
      "address": "0x0f1Bf7F0A0A0Ab443fA7a4a5D89d8f2fB3772b8E",
      "txHash": "0xc0535c988997dfd014d43b8db2e63ee16fea5cdf7fff953aa269032b09061d00",
      "kind": "uups"
    },
    {
      "address": "0xA23881EA2A75f419f02358B432379E8a63D466F6",
      "txHash": "0xb2685038db616920a62c00585773459e0c32c454e9b9818a00314351b6edb857",
      "kind": "uups"
    },
    {
      "address": "0x14f0714b8CcA57895F29911B5751acbBA2b0b1F9",
      "txHash": "0xff2b46b793ff78581c07247044c832790698f167e028be6126731955e0096207",
      "kind": "uups"
    },
    {
      "address": "0x5a8F734169901730c4C19A5Dc5022983A10D3d84",
      "txHash": "0xe79500c5a3da9b464ff627b88ec5c0417408e0d7e31ea208d2b3c62ab4b6a04d",
      "kind": "uups"
    },
    {
      "address": "0xe61E5b37C3583feC88d047801a80F6c3E05c66eE",
      "txHash": "0xf08d3996ef2fe36db57932309d655155bcf2e07afd27ac00271841fa24858657",
      "kind": "uups"
    },
    {
      "address": "0x3cc8599de39429996F6aBC5BA80aC60D96bdf6E3",
      "txHash": "0x71d67aa309c361372cbeae2d21492a752212e6f2eb04968854589cdaa499ea37",
      "kind": "uups"
    },
    {
      "address": "0x4Bc5ae82B1BB72ca0f2141Ea41066464C6BBe963",
      "txHash": "0x29bd1f4dfe416ac66d9b185b0e3e1c91cb44c0a01c90b28af20682f239f2c84f",
      "kind": "uups"
    },
    {
      "address": "0x1d6F0bA220265A0CBe9aaf542A7B0E63f05f9eb3",
      "txHash": "0x832dd18a4002cb01666f1a397d5fe2396394713333bcccb5659fb811f0a65493",
      "kind": "uups"
    },
    {
      "address": "0x10a9e5aED3165a1C419917eA1A401c2DF9c8255b",
      "txHash": "0xc6e49d35634461bbda9d15e5239d641e26e2533ede2c7f35dbd5985f94443f51",
      "kind": "uups"
    },
    {
      "address": "0xAbAf73711834FAE3eC40a594400D53E44B9A0018",
      "txHash": "0x6c3932c03983c579acd259c1122fdd003ee72e84d658a34a45d13c1015fdb972",
      "kind": "uups"
    },
    {
      "address": "0xfE4b55e82F743fcd042fbe1d264297d2D2422713",
      "txHash": "0x51d82b1812dbf4aee5a7e800d8470e849b7ce76c5d43582cbff447308a327681",
      "kind": "uups"
    },
    {
      "address": "0xDcB19172AF29A944cb36b8a1A9B55Bd9d492Ba92",
      "txHash": "0x3117163013841a70b851b2ab528b60a22646e2245aaadb2a32e78151cd8a1452",
      "kind": "uups"
    },
    {
      "address": "0xF44dC07d43B40D188d30B5ee0CCB9178E079b01E",
      "txHash": "0x30c1c9cf8a31c3b985e2f1a1d375a0f73bed1abe93748af50823f4ce7f6b0b59",
      "kind": "uups"
    },
    {
      "address": "0x15F6716bFEd8A9b5F6e79bc754d1b66090C71995",
      "txHash": "0x408d0e544c77e400ab4bb0ccb21d07635342fefbbea4833179d7181cf490d2b6",
      "kind": "uups"
    },
    {
      "address": "0xD76ba7bECE14A71656Cf948CD4B1e79d1fcfd527",
      "txHash": "0x45bd4f336160e713c495e27520fa11311a5c953b5e5f20ce9f1abb13bb1d9283",
      "kind": "uups"
    },
    {
      "address": "0xB1402CeEE2909b74E78ea737C1906BeE9aa49F15",
      "txHash": "0x51d711d4a1a148cff27606f9b1f235660fb9fb35c88339bf0ba84a3d55744658",
      "kind": "uups"
    },
    {
      "address": "0x4183f62328d2B0E28c6117CD63748d0Fd1671eB6",
      "txHash": "0x6a58fbe89740d43718684c40a3e848375957ab34aeec1d2320541b8d054484c1",
      "kind": "uups"
    },
    {
      "address": "0x989E5d67A88Fae41b5C79B634E77fF898a7e6bF5",
      "txHash": "0xbab845182ffdbb38674dc2b9a9980e6b7db3d718549db4dd091b88bd37f27951",
      "kind": "uups"
    },
    {
      "address": "0x66e67a6832b10Ba6380510ed86e5D1013b9793d3",
      "txHash": "0x2faeaa569e3c67a1fd93d6df8fd86a0b9fd0b0f02df50c747ca4dcb5194bc6d4",
      "kind": "uups"
    },
    {
      "address": "0x19cA348097F86e7c64928fddBea05c972dFe1C70",
      "txHash": "0xe85b9c1057a98273803225e20333e4a7dd019b572317aba1f9cc624ef31199da",
      "kind": "uups"
    },
    {
      "address": "0x3D1aa33EEFDB3b339B12c5C5cb098936dd43348e",
      "txHash": "0x28ecc24a371513fce1b3fdbcc595c7041441b5c0063b9bf683a27cc2d77bc9df",
      "kind": "uups"
    },
    {
      "address": "0x86aaB79572d772C9Baed116988F91345A949Afd7",
      "txHash": "0x0264b18de1ae636beb0bee524f96494f3cf1521fed695cf51af1c78e1572ef0a",
      "kind": "uups"
    },
    {
      "address": "0x955733feE3e69F64a34A382aDA329b104579f0e3",
      "txHash": "0xaad39e3622b0b124cca97447b373a3c02f4824307eee9af6c92f6a03bddd4c61",
      "kind": "uups"
    },
    {
      "address": "0xbF9994Ee42e5c91cDeDE96B8fa07F971B8E652dc",
      "txHash": "0x8bd6b8e257330bf4cf41e248e713fe0c80f2a86a4f82c10f8e7d9b5e62e42b19",
      "kind": "uups"
    },
    {
      "address": "0x7025C5f67E6871a821e846C8dFbAd568A4D1f839",
      "txHash": "0xc0fe8ea535771f2a1595778c90feefbb049d9a37e744789b4a61212527135792",
      "kind": "uups"
    },
    {
      "address": "0x2aaD932ffDfdD59F72b3C74B9bFbAd91c1455ca3",
      "txHash": "0x053ed619dbc53199b7e09c923eaf5b6e8a96dcf1b0c393191183d29992de68d9",
      "kind": "uups"
    },
    {
      "address": "0x962348bc86254C9EA3D2d02B36Fa8E467C2e1b5B",
      "txHash": "0x98812ed2cc1e6fbe2b03d4108490d432857f4ce06e4c6d95ecae28ba9e1bab51",
      "kind": "uups"
    },
    {
      "address": "0x1dBa44d2F5d4d32cD7D371f6cFB6FD5b47FB4F49",
      "txHash": "0x07dd4edefbbb8f78d0eafd6fab7c6af9aba1481e9998a97b33512b063172c881",
      "kind": "uups"
    },
    {
      "address": "0x6760bE36c4E2a5D5AE73221957eCC462Abd28558",
      "txHash": "0xd92b9dd4cfcd2e11db5823ea7c62eca231563782b46c930cdad8dcf4e0e2d3ea",
      "kind": "uups"
    },
    {
      "address": "0x935679db0597192D7294Fb128275D5b2Fb412B73",
      "txHash": "0xd8f119d98aa1a247f8020baf8cdefe797558f8c060cc59c69d2fbcba3526e98d",
      "kind": "uups"
    },
    {
      "address": "0x1d0D4F7ecA287844543E0fb9f722cf0256d36868",
      "txHash": "0xe4856024ba878de9df2d544c2278a8a71d1177c277df479f8f0a64772db42b0e",
      "kind": "uups"
    },
    {
      "address": "0xB17cbc8967715aE90507E3E231Af741a29361114",
      "txHash": "0x16fbed5dde403529b488790e3a296fe91c07eb115415ec77ef8879a63c56edbf",
      "kind": "uups"
    },
    {
      "address": "0x107BaEE99F33bFbeA13aE9e97e036D8A95f12F09",
      "txHash": "0x5d5e1dcf4c203d65990c7a7689e6868128580c35629202880ad55b83dc5bdec6",
      "kind": "uups"
    },
    {
      "address": "0xc584DC18ec1054b587AD026cF17a725BC71Da19f",
      "txHash": "0xc6f1205ca3b40a8d12c509b61960e6bbbb782d223829b2a844f3959949986a5d",
      "kind": "uups"
    },
    {
      "address": "0xa97be7d4A5026c90A1Af5c84BFEd857fF3E6ee88",
      "txHash": "0x52c599c79bcc864039bf536ad927920df412ded6a39a03833c3686a3703743e3",
      "kind": "uups"
    },
    {
      "address": "0xce4121D4a8eeD1fEe412De2297e520Ed2D566517",
      "txHash": "0xfaefe508e39fcb8caa7687ff1e5480d3ec58e879faf6cbfb7fd77cc29c1c7b50",
      "kind": "uups"
    },
    {
      "address": "0x957473344B7687A753595c3EdbC705ca472164BD",
      "txHash": "0x1f2609d5eb87d9c4218be5bdcf38e6737d216361ab4980e4d3f57f4cbb8f3cca",
      "kind": "uups"
    },
    {
      "address": "0xA3180FD2896535146A553A3483AB104A25453805",
      "txHash": "0xfd2652817215c9f8eccef1c124219beab6c074efe31a569406a65795a6b37190",
      "kind": "uups"
    },
    {
      "address": "0xa287Dd75Abd175b99341a070A84F2C732420f6df",
      "txHash": "0x205247d7468b6a2c76257a6a862ada11f689e7d01d58829c4c098b0304aca2d1",
      "kind": "uups"
    },
    {
      "address": "0x39E04427FCDD9C0bc1d45D4173d65Ffdd8687FA2",
      "txHash": "0x7dceee767ca2a0f60c96cc71956205b1817e86da8a536cf4dcf888b021c80d2a",
      "kind": "uups"
    },
    {
      "address": "0x416F6A10BcCae68aF6c01DEE9B297fB4140E9431",
      "txHash": "0x1c3dcf95e1c2a97314f60627be90f69b6b1afcc8c14b9d8ec2a299ff477441d1",
      "kind": "uups"
    },
    {
      "address": "0x75EE9CF1De37D962dFD1CDE3B5F3d13947Fa7a7A",
      "txHash": "0xeca12a0d558ffcf11f5348571ad19ae55b2204abf9af3c5c03faa093589f5db2",
      "kind": "uups"
    },
    {
      "address": "0x301Fedb9B1805FaDe3b95A92cEa1Ee88A9b137ab",
      "txHash": "0x80a7eba6e73a7eafdc59e27bda57326e06b9b4dec051a6e391a3f75ee7ac0d48",
      "kind": "uups"
    },
    {
      "address": "0xD022739eC211A61AE9eaA6ff2432Fd4ED364767E",
      "txHash": "0x6498d84f8d85cbf0349017d4c995ffaaa56a14619e94d015963762c3994c81d9",
      "kind": "uups"
    },
    {
      "address": "0x2F7f1046E46720506086AB9011e1b1e023A9B46B",
      "txHash": "0x9f48a4cc93196874727c5bd4ad5d56f4d4ce798a27a8cbd8d3786578a17d953d",
      "kind": "uups"
    },
    {
      "address": "0xC0D9eAAC9C242C21bD87aF98dbe52E6Dd13FbcDE",
      "txHash": "0xa1f4ef2c27388518b52786a2a1e6024df71e3432694c2143885877d849777bc3",
      "kind": "uups"
    },
    {
      "address": "0xEbD29a5cf36A7763acc365455C9dCa1fcC039C49",
      "txHash": "0x68c96977c8e9f0d4c81c74272506c5e00de664423b03f9157f5c8701963e10ed",
      "kind": "uups"
    },
    {
      "address": "0xb215eeC8233d586aFd039B9D76A55A4B71aE2B18",
      "txHash": "0x03c5ee076d0d23eac56444d7176e2bfdc556af67d836711237ab306ac37647ac",
      "kind": "uups"
    },
    {
      "address": "0x13b5884A29b21fFd67a4112C95aCB51953E28c21",
      "txHash": "0xba4f1d1e78564944b8f7d0c3b3806cee4db68731edabd2c0561d842be58cf926",
      "kind": "uups"
    },
    {
      "address": "0x7D2582c8F4B47178D8Bb5598da65A3FfEA71Ec12",
      "txHash": "0x9d2607c441763ee4233da47c04f99b181583ae4706a1f32954d3817de325cecf",
      "kind": "uups"
    },
    {
      "address": "0x9205b60377a8119f9620aec23C1f3A19361DEe70",
      "txHash": "0x0230ded811657be79effe20c63498ce92caa5299a3af35028dd08470385a120d",
      "kind": "uups"
    },
    {
      "address": "0xDAAeB24A110c81D8858Bf1e4fD86Ac6467978303",
      "txHash": "0xdd4a9e25bf5f087b1673a28b448c3471262b5fae8cf7dccf70fe5fbdb905e3c3",
      "kind": "uups"
    },
    {
      "address": "0xb2b37f30A36A0B1fD0f36ACA7Ee0184f43BB922F",
      "txHash": "0xb2d5c606313e04e11677bb1a76c855972198fa0ad57ef64b7dbca0d066652692",
      "kind": "uups"
    },
    {
      "address": "0xB3aC42105530A9D06c6489DBdce1f6254e522EDb",
      "txHash": "0x4c67d3d1a2373da18bae714b18fd1386e9b6192c47e5eade165b2918be03a2e6",
      "kind": "uups"
    },
    {
      "address": "0xC88D5Dc4B514B33a1559132c1ce08233e9FA95e5",
      "txHash": "0x20c83f9498a9d303f9a7f8609da80e6c94a8c045e358448c126b8d649c94a0fc",
      "kind": "uups"
    },
    {
      "address": "0x0e2559Ec114914247BB73a5516572B180d51a467",
      "txHash": "0x5dc468b9cd75d4c235105b430e90abb5f4b2ad9ecd895d9ea1a78b6531646f6b",
      "kind": "uups"
    },
    {
      "address": "0xaBC387a61d7A38676146BcF12474DCb62BAA5a9d",
      "txHash": "0x2a3a98ef2f1aaa669cc5ef5ea5c76789f26383cc696f37e0651a669898006266",
      "kind": "uups"
    },
    {
      "address": "0x1a9c497B93943606bC1080f93a33B931Fd768653",
      "txHash": "0x68510857a4594b5889f0e088a4c44226de51ddb4cd98d1dd1594e99cfa427454",
      "kind": "uups"
    },
    {
      "address": "0xef3D7526ADafc8c7097BCdaaFF002e42a2e31f49",
      "txHash": "0x6609f854b5f6806e63ee3336e66d60217d596fb2a17a7cdb910603fe2192d072",
      "kind": "uups"
    }
  ],
  "impls": {
    "1d462498d6af758972d447d1306c4937257797a5714afe503d5165e52f7e8cc3": {
      "address": "0x6e158f463469924b75d467bCBe7b2E5521c0cfCf",
      "txHash": "0x59c11efe7c993ecf3e45797fae0f9f983cf8f42b6b84aa61cdb261b4aae6f681",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)7839_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)7839_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)7839_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "016923643fddd6954a1ee46b66c323f450e92361b726a805c3edaa4fcc946f0f": {
      "address": "0x94A4E1bC8799da086b41Eb1800f137F87958F413",
      "txHash": "0xbd13fa6e210eafbe4cb6916ed60b36a238f3540c0c95db50c3092d1e32a7bf82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)7832",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)7866",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)6801_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)6822_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)6801_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)6822_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)7832": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)7866": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)6801_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)6801_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)6793"
              }
            ]
          },
          "t_enum(AssetStatus)6793": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)6822_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)6822_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)6806"
              }
            ]
          },
          "t_enum(EvaluationStatus)6806": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dc8e77296cc7b26768b3bf9f49721b92229bc9456b137ecfb8eeae29d4c6a853": {
      "address": "0xB9754CaC928a7D91ABEDf6484A47418c7F86C287",
      "txHash": "0xce4a81db3518aa924d87c79e1e40363de7cac58b45410e6353fa12c5019e9717",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)7731",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:37"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:39"
          },
          {
            "contract": "PawnNFTContract",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:47"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:190"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)12023_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:193"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:196"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)12063_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:199"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:202"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12172_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:205"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12204_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:208"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)7731": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)12023_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)12023_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)11980"
              }
            ]
          },
          "t_enum(LoanDurationType)11975": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)11980": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)12063_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)12063_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)12087_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12087_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)12087_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)11985"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)11985": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)12172_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)12172_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12159_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11989"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)12159_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11975"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11989": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12204_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12204_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12204_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11998"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11994"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11998": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)11994": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "152e44297b05a20c90a5aa2d1cf67fbb7fd971d38775786a305701f76486ee9b": {
      "address": "0xa56879A77076D460666826df60f60f56D0F93a07",
      "txHash": "0x4b15144dfa3db27d565175047b0d0ef5f4f1684bf3f5767a207baa66a644aaae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)19142,t_int8)",
            "src": "contracts/reputation/Reputation.sol:55"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)19142,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)19142": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f533ac640ae03822e27e8583561a94b376b60548639ac009b85393a25bba387d": {
      "address": "0xb2aEa415F5cA552189aD477a8BEC890D239Fb20D",
      "txHash": "0x2ea4cf8556150d5044b0c1e76cb431cd8a824812f2fd85898bdcfb07746c9b7c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v101/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/v101/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)23376,t_int8)",
            "src": "contracts/reputation/v101/Reputation.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)23376,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)23376": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5217c213bcfb167cc1582cbc9723a741e2f04a4ac640701d3d904056011d4311": {
      "address": "0xcD32237b1AcE37fA3c72F2499AE546Bb2743943a",
      "txHash": "0xfaef5def432acacc3012ad882d3386174a98c0e657430320a9314d67fbb3c0e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v102/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_contractCaller",
            "type": "t_address",
            "src": "contracts/reputation/v102/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)23905,t_int8)",
            "src": "contracts/reputation/v102/Reputation.sol:37"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reputation/v102/Reputation.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)23905,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)23905": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f528f52f46535216e4f126eb227b16a7bf3c66e8454d339162f2cd7d2fbe6578": {
      "address": "0x9d7dD52c2dC53c1EA45030bA058f1d4f6Db225Ac",
      "txHash": "0xb2a08202c93dc41c0137436dda1c3c45ee1ba4648044d041c7db93e9e8f2283f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)7731",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:47"
          },
          {
            "contract": "PawnNFTContract",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:48"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)14966_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)15006_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)15115_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15147_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:209"
          },
          {
            "contract": "PawnNFTContract",
            "label": "_reputation",
            "type": "t_contract(IReputation)22290",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:911"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)7731": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)14966_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)14966_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)14923"
              }
            ]
          },
          "t_enum(LoanDurationType)14918": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)14923": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)15006_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)15006_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)15030_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)15030_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)15030_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)14928"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)14928": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)15115_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)15115_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)15102_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)14932"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)15102_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)14918"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)14932": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15147_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)15147_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)15147_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)14941"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)14937"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)14941": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)14937": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)22290": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14ca8ddd259f5df90a6e7597a9a30ebe80b6d7a8e00f834e7d3288d5bfd359f7": {
      "address": "0xd362cB0f8E20F387310d739e6Dd4592aD64C2960",
      "txHash": "0x4db0358f3429d2de1c41e5ddb5ff022dda39d3bcfc6bba92b5227b20684a029c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "totalToken",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:28"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "evaluationContract",
            "type": "t_address",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:31"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListToCID",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:35"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdOfEvaluation",
            "type": "t_mapping(t_uint256,t_struct(NFTEvaluation)8470_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:39"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "tokenIdListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:43"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:52"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:55"
          },
          {
            "contract": "DFY_Physical_NFTs",
            "label": "_tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/DFY_Physical_NFTs.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NFTEvaluation)8470_storage)": {
            "label": "mapping(uint256 => struct IDFY_Physical_NFTs.NFTEvaluation)"
          },
          "t_struct(NFTEvaluation)8470_storage": {
            "label": "struct IDFY_Physical_NFTs.NFTEvaluation",
            "members": [
              {
                "label": "evaluationContract",
                "type": "t_address"
              },
              {
                "label": "evaluationId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "a9bb09cc782b7af748108c5f8fdcc8ff76c128368f7786b82ef2ca96375a53bd": {
      "address": "0xf70516F07f668Cb5B53531555581223193C6aB4c",
      "txHash": "0x0cef01556a1b2e64ac93da0eab6d3a67779b676011408812e9460e85416eaa87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)1617_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)3642",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)3676",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)2590_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)1617_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)2590_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)1617_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)3642": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)3676": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)2590_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)2590_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)2582"
              }
            ]
          },
          "t_enum(AssetStatus)2582": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)2611_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)2611_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)2595"
              }
            ]
          },
          "t_enum(EvaluationStatus)2595": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efaccc2ce1e4ca88a9764f8e300fbc7ae373d92d477e9b43a03007b2c50b0242": {
      "address": "0xe40f3258fFc462fF58F1108d236DAe39ED3Bb02D",
      "txHash": "0x4acb34914688cf342ec5a02f5f7dc1a913470eb53e46e478e7e1786f396a6f75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)8362",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)15597_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)15637_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)15746_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15778_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)22906",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)8362": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)15597_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)15597_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)15554"
              }
            ]
          },
          "t_enum(LoanDurationType)15549": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)15554": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)15637_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)15637_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)15661_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)15661_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)15661_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)15559"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)15559": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)15746_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)15746_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)15733_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)15563"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)15733_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15549"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)15563": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)15778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)15778_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)15778_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)15572"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)15568"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)15572": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)15568": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)22906": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3faf1477ab144b8bb7f9a4c3235bb1313364652caed31dfd50a2157ce87f275c": {
      "address": "0x26421289D13B92794a2DD985E0643f768Ce51fFA",
      "txHash": "0x7a346db388591da0dbde59bb81a3bcb2ab6361bcfc8c2811ed10d58349c40de2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/reputation/v102/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)24467,t_int8)",
            "src": "contracts/reputation/v102/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/reputation/v102/Reputation.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)24467,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)24467": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4794a87a39213e83cedd8265d97a9251a182c6b509fd9b1620f8181c7b852900": {
      "address": "0x38b4eACeBAB24adD3Ba1202e9B1EE4E28307e13A",
      "txHash": "0x7e0d9fdc871f29d68bbf988b2a94a5ff05b27a948a1d8a6059d55eb2a285a8bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:32"
          },
          {
            "contract": "AssetEvaluation",
            "label": "ibepDFY",
            "type": "t_contract(IBEP20)8471",
            "src": "contracts/evaluation/EvaluationContract.sol:35"
          },
          {
            "contract": "AssetEvaluation",
            "label": "dfy_physical_nfts",
            "type": "t_contract(IDFY_Physical_NFTs)8505",
            "src": "contracts/evaluation/EvaluationContract.sol:38"
          },
          {
            "contract": "AssetEvaluation",
            "label": "addressAdmin",
            "type": "t_address",
            "src": "contracts/evaluation/EvaluationContract.sol:41"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetBaseUri",
            "type": "t_string_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:44"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:48"
          },
          {
            "contract": "AssetEvaluation",
            "label": "assetListByCreator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:52"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_assetsOfCreator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/evaluation/EvaluationContract.sol:56"
          },
          {
            "contract": "AssetEvaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)3261_storage",
            "src": "contracts/evaluation/EvaluationContract.sol:59"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:63"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationByAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:67"
          },
          {
            "contract": "AssetEvaluation",
            "label": "evaluationListByEvaluator",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:71"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByAsset",
            "type": "t_mapping(t_uint256,t_struct(Asset)7411_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:75"
          },
          {
            "contract": "AssetEvaluation",
            "label": "tokenIdByEvaluation",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)",
            "src": "contracts/evaluation/EvaluationContract.sol:79"
          },
          {
            "contract": "AssetEvaluation",
            "label": "_mintingNFTFee",
            "type": "t_uint256",
            "src": "contracts/evaluation/EvaluationContract.sol:82"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IBEP20)8471": {
            "label": "contract IBEP20"
          },
          "t_contract(IDFY_Physical_NFTs)8505": {
            "label": "contract IDFY_Physical_NFTs"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Asset)7411_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Asset)"
          },
          "t_struct(Asset)7411_storage": {
            "label": "struct AssetEvaluation.Asset",
            "members": [
              {
                "label": "assetDataCID",
                "type": "t_string_storage"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)7403"
              }
            ]
          },
          "t_enum(AssetStatus)7403": {
            "label": "enum AssetEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)7432_storage)": {
            "label": "mapping(uint256 => struct AssetEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)7432_storage": {
            "label": "struct AssetEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)7416"
              }
            ]
          },
          "t_enum(EvaluationStatus)7416": {
            "label": "enum AssetEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b9e12a13827ee14fd8e91b25d2bad1637e907dc0ca09b4e4ecff01fdb3176670": {
      "address": "0xd773FD44d550e9050FAd0D87cf5fF6264bBCf010",
      "txHash": "0x47940cd3619e9c9b8e139d5b5eefae32759a65b58ce1c24b0b2f42353aba322f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListcryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "63d6cd3a8af6979a0f5b58c7e98d0e6e66463ea6c4bb0dbdd931128bf9f537be": {
      "address": "0x9154D0Beb863C1654bc01c983dc93b98F60FBD1c",
      "txHash": "0xd2fb25bd3d2d9f00045558060aa8743ffc70b4efd506cf04a54ca38e92b65354",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)6489",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)3307_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)7867_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)3307_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)7907_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)8016_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8048_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)18069",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)6489": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3307_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)7867_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)7867_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)7824"
              }
            ]
          },
          "t_enum(LoanDurationType)7819": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)7824": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)7907_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)7907_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)7931_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)7931_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)7931_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)7829"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)7829": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)8016_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)8016_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)8003_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)7833"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)8003_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)7819"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)7833": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8048_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)8048_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)8048_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)7842"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)7838"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)7842": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)7838": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)18069": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c7f2120bfa12cdac1f7189e985a5c1bd72b10203eb4dbc11f26fdb274c1f447d": {
      "address": "0xb712C506E1cA6B11C0555066f0A32c32e30fb2b4",
      "txHash": "0x6b3d6f2c050bec8648efe51a0504a599ddb83830de7f82025d50ec0a6fd034b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListcryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23aac7ce15950f0627f911de10b3917555e54ad9f670f7b163806b96ba25ed91": {
      "address": "0xbB2F32E79FA15534e364e94A3Da71710d8d80479",
      "txHash": "0xe77de91909b71f3c78709e8730a49f8779eb8e431e905410d33404518e852740",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)17728",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)6818",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)14335",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11200_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11232_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11147_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)14335": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11200_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11200_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11185_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11151"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11185_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11018"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11151": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11018": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11232_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11232_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11232_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11209"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11205"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11209": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11205": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11147_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11147_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11136_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11136_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11136_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11130"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11130": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)17728": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)6818": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b3eac9b575e077711ccdbfa975ea5a6d9f6dc872cd6cd0a9d3c82f019736d112": {
      "address": "0x650D243f81387Fb847E1457eea9801A273315eF2",
      "txHash": "0x13f077173c70f52a579b205666e521f0a37e09c82bc22124255e1eeecff4c53a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:14"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c9d6df1a8327df6f11e9246e31d4c31159b141ee1f0809b12ce77baf17c13c72": {
      "address": "0xa926035A62B1d44189a123B79F64ED1F96D986d4",
      "txHash": "0x9e22ec104fa5d179ffdd5e1665132488dec4e85a9ab9b422e25ea140fa1af6bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "42d8211901ada6d2ea3b50f5b632318caa9a332a8c931e89c31d6bcc42e9be77": {
      "address": "0x31cE2b5a86a4B9C4152835D3b38304873333FBAf",
      "txHash": "0x69e990a00181520cbeb9c46f3ceba3f735d76dc910a9481ed708fa106e475dff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)17932",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)7604",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)14530",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11390_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11422_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11337_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)14530": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11390_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11390_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11375_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11341"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11375_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11208"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11341": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11208": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11422_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11422_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11422_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11399"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11395"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11399": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11395": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11337_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11337_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11326_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11326_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11326_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11320"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11320": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)17932": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)7604": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e21e3f348ce22c0ccc598781d8c027c52391a32ee549c687fc6c796a3be05304": {
      "address": "0x60E31EA3F4C5579426E40eF93fdfef5B8D910221",
      "txHash": "0x647b59efefb51d4c9bb0c621a656934d4ae782b020c75f6e9651f854dec47cf5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "98785bbad42cda05d6da2f6dae4c098125a19d765d0280d40dc62f2096a80dba": {
      "address": "0xa56F6a38EF6A0393c047c6b7b36f22bfb2914Ac7",
      "txHash": "0xc55e5c16ca923a2e46cf26aa35880ee3e1e337636eda37cd7d6169a7074bf8d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)11109",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4083",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7716",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4572_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4604_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4519_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7716": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4572_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4572_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4557_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4523"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4557_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4390"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4523": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4390": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4604_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4604_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4604_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4581"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4577"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4581": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4577": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4519_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4519_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4508_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4508_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4508_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4502"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4502": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)11109": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4083": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5882a881ee0238db47a47f1a1186fed94c0f4ae5d7217c95468f07335962ee4": {
      "address": "0xcB812255ac928c58fd49005B0F957b00648186e2",
      "txHash": "0x38517b137648b9751c164e801be08dc57f168d98cfa984dce339c78685317aee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19341",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15955",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15955": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19341": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8556dc46c42b02bb02fed804ac96be5a6a7ac26c4a36e4fd4460618a71ea1b72": {
      "address": "0xE76BDbd24D26AA9F24572C47Ea8C5aeEb97749BC",
      "txHash": "0xda24b7b67137033e5f99c2704d8b2e698909cb7282e539979ee9e77ac59337cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14a06291f135b096f4ddab74f156eca47ac824817fedbb36a1357fd62a8c15c0": {
      "address": "0x11f11BA432F33709a6143a326e841fAeBe3f29B6",
      "txHash": "0x68abf39239e376313a86e8b933cc6562ce3cf856b9a2ab0b7e830bc1854159ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7514",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7468",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7468": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7514": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d948cd7e322f4204ce7765be5cbfc98289ccf736a150b4570e72a813c4b4f550": {
      "address": "0x79C6209BbE5e96602058C05EC85433f709Dc89Fa",
      "txHash": "0xc0677e484e1c02defabafb8a554e61f0bbef8ea181cbea6dd923d66598488538",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19363",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15975",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15975": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19363": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7f161fad228ea8be4a69e81ca2da509c09dce4f53360233a479df9a059055315": {
      "address": "0xB1887cEA6e0e5972746f50D69b33783FAF3ad6Bc",
      "txHash": "0xb85b5747facc68d9d80c54e5313ed777550a21bb59f481262185324ce1287e27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint8",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7536",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7490",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7490": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7536": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2468322961426c4582eb13e181d4ecc19f2a29d016f118541b6766cc29506dad": {
      "address": "0x55c79c62512FcE8605f8B147B9312C14d84a33bF",
      "txHash": "0x838cb9d628f0ec4437d61dae4d830a35e198e3f0df4c14db87056ac179c13d6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7518",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7472",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7472": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7518": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0adf9caca0cb9d795b879dc6360e58508455b8c8e6817fd29725e44c10ad53f": {
      "address": "0x95d9Ca5349eB9612e532be62194B6dd7b0Cea73F",
      "txHash": "0x4cce678de271f81f732364b28b27ab96e49f4d42a676e511f2c318e90b2d244b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7518",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3830",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7472",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4319_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7472": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4319_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4319_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4304_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4270"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4304_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4137"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4270": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4137": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4351_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4351_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4351_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4328"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4324"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4328": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4324": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4266_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4266_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4255_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4255_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4249"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4249": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)7518": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3830": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a5c997e7b7e3af91cd7e2dd80255f6c4da2a6a215e91b1042de01901a7542a61": {
      "address": "0x4f48A33CEB732DBe0cf026F8490711cEE3CDfC45",
      "txHash": "0x386dec02b67338e56375d6fb79414a8640adfd93d1b4d992c4c65b2d02b86851",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint32",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19347",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8006",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15959",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12806_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)15959": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12806_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12806_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12791_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12757"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12791_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12624"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12757": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12624": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12838_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12838_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12838_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12815"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12811"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12815": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12811": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12753_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12753_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12742_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12742_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12736"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12736": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(IReputation)19347": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8006": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b95f36b1d7d6cea7476b6417096dcac31208fc6b9c33d59ed712a2c57770213d": {
      "address": "0xbE4B2b309b408E9839560ab9aF60C5680549ed76",
      "txHash": "0x9282e3d07fe446428494ecb5f19ba8cd414e2fe5030385cef6a430975d3a7e06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d3e3a3c5b81efa5b3979fe86b424e3fc88e19620548e37aa5f27be29056573c": {
      "address": "0x0DD93e267b3eeE4Bc818F19aEb382a418831371d",
      "txHash": "0x9c51ba33fa39ccd77c225fd8328f55281969b04768a2d344e863e2ea4dfc0f51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bde432e81efc69fb59cf4dabe6f324941e2417ce751122f7c137847f833d4419": {
      "address": "0xCc906C9E82954108cdee01454998b2397172cfE1",
      "txHash": "0x579d1e5b4ff0acc030ed7af78630965367ef6e0f7d63cad0011bf0a02496abd9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c55715396e3e99fc42b0cda8fbecd4f8dadae55dc540b9493316c521ad43cc5": {
      "address": "0x8eAFa2FD0F598CD7a9c3F2A911dF60484def18B5",
      "txHash": "0x79e1c6437f7dd4c57db870f1fcfd6044f1a38bc3f33e789ee3afe65544528d2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e66fda85f285e69c440e26ad1fe88932395a4d95918f0968821fabe83702f85d": {
      "address": "0xb53D998F60CBE482416ad1d8f8E58c32D252c6b3",
      "txHash": "0x6eedb8133d2282baee451051fd2e4d6b153299ed80d76a2d1cb487c4ce33ef64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74421226b39ab28ee4644b353644a670731d55e6cfac3b53119d3f7a3a9cf0e6": {
      "address": "0x5f23b90F930AA96B5039122EA43B27C95f6CAF82",
      "txHash": "0xd2b8edca681217f466e64ceec9823404065d69b23e416e203164a3c293122d7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc6a49aa2ae177d4965bd314d1ddc77160ec49d4c06c77b91cb1d11c0003d5f6": {
      "address": "0x1FD7C91611358270eb1b08D95b9d5EB8D4aa0Be7",
      "txHash": "0x2322c95e08c425c792fee1b430d3a56ec8221f4b1f50bccbca6a54643fefcb60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a0cd958de861fef4747351fccca834479933422597bc06e168187061c8f26146": {
      "address": "0x3CfE085b2beeAe4fb30D590D8B824ad2303B96A4",
      "txHash": "0xb25d8570d44aff97198f1fa5860f54763b64e3e4c4cb88655dea7e46db6f3ae1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "41e2b9cf05af4f9b574c509a36e02fb1ccece338a783ff82addc944b7fb5ac83": {
      "address": "0x1270e763c41D3ed84B8008993Cf0fcad2239246A",
      "txHash": "0x047bcef0edc0b4d21856b0757ec4d24d8d1ab35f1c2f32ef45ac7e8249a76858",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8a641715d8d5667aa485d4ee8fcdcb528172046479c7c410aa7b4f7e6386fc3": {
      "address": "0x448fAc17eccEa1466764d57F0db554a0355B0541",
      "txHash": "0x32220d33db08424857d8807929531e93cf58d65bfa40ac2d6fe2cee8f4cee641",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "de84d73c77811d10e0a3692d026a91661a1b92e65fe057c8eeca4d053514f38c": {
      "address": "0xc5d5c5931C4E422BE92aDdFEB4bEB40571ec00E9",
      "txHash": "0x2121c3c95d0df0f9113ca6889bb80d5561aa79e8ab11e2c631df797cf375c148",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "39e7293ef931903a5391bbbaf7a9fbce58266fc0ee0f83e0a5da0458d508d026": {
      "address": "0x3Eef11fb1d5C5Baaf628FB061a07ee795A4Db43c",
      "txHash": "0x3eb4bdf1f2ba0e6dbaf57e1e04c001fd1c0b9dc1e7f3f04f90957ad4d54410db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90ef5eb5958a95d6a610737ebe845716046d6ef42ee62ccbcdb2f8ea062686a5": {
      "address": "0x1F7460f96B69fe90cc0A26d37577Cb0c0B57079A",
      "txHash": "0xf2ada90ef5458041bb177b2012240ed6eeaeecaf5a19f016301ed4065fb01fc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ee864cbdd47e3a92f42ddc8a4a4cd7e9f6382dbd694f67e6eb73a2ea0c44f443": {
      "address": "0xDb527f6e3b10C58c00b6eedE1c3231eE96ab06E0",
      "txHash": "0xb68471485f677752ca96df78b4a034ff629fbb1466e3428b72a04b36a94ab199",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ebcfae9e987aed18a403da5ac1366be3cb0ff1354a62a01752b901402e5f1d": {
      "address": "0x4D0E9b06E5CD4BE40F10889cC89918Ae452C18A1",
      "txHash": "0x0e68d9d14a4dd81339cb175b076e25c6b9db9b0d9c93985ab04c6474d0cf32fb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d9e013d90cd95e0df352c4f0292f4f67e4e0107800fec003a427631d7c46de7": {
      "address": "0x70895B579aFfa76C875a4c8444EAdef5225700B0",
      "txHash": "0x25812b68a18384d982eca087acbfc8c0b5a959aae92444bbe7c1ffd7175a0ff7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7768",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4133",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:166"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7722",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4622_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7722": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4622_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4622_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4607_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4573"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4607_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4440"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4573": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4440": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4654_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4654_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4631"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4627"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4631": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4627": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4569_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4558_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4552"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4552": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7768": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4133": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "13c4ebabd8dd4ccf337caffe543f8337ae44e1b1db18a5e1f7ff254c2c0a2d59": {
      "address": "0x6dB623564ebf9f57a466CA3FFF6D529AaE4bafce",
      "txHash": "0x6f17f00269a304493164c214e32f35fbc98d3b7ee2395e3ad956e8cc76969587",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7781",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4133",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:160"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7735",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:16"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:19"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4622_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:22"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:24"
          }
        ],
        "types": {
          "t_contract(IPawn)7735": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4622_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4622_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4607_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4573"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4607_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4440"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4573": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4440": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4654_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4654_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4654_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4631"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4627"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4631": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4627": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4569_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4569_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4558_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4558_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4552"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4552": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7781": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4133": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9d7cf8b884dbbcde81ce077ae6f9d0559164f3084aa097159c36441fe4d5ceb1": {
      "address": "0xba4e62Bd3F595b898621EE4bfB867B29c11fdBE9",
      "txHash": "0x9c1c6a5eb682a121c1974412777891f80f57a093c5e37970c0ca2069036b2af8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19699",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8401",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16234",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13226_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13258_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13173_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16234": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13226_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13226_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13211_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13177"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13211_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13044"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13177": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13044": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13258_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13258_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13258_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13235"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13231"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13235": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13231": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13173_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13173_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13162_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13162_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13162_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13156"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13156": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19699": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8401": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "346e94fab5205ce14a81099e41878f9f2d4bcb72d34c88e3000b332a6087c097": {
      "address": "0x4DE27A8aB9D3168dD8321F6Cba18939c951982C6",
      "txHash": "0x99ce4f306358313b91fd79cdd13ed082f6e937d3e5a01d1399c95d22bb9370f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6cb8bc24877a4b2564dc3e6cb489cf6618e27fb72dcb3de214ccabd88535e2cf": {
      "address": "0xD1cBc985f569A1bFf443d2D614aF9F573D59A953",
      "txHash": "0x8f3a804756308d490daba2c2d0c305f8c1aea7ed62d3f1789666662ac767fb83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "490c36bacbdb56ac3d2196208b209a6dd43abaa8e98d4465f1902b9421e2c972": {
      "address": "0x025a4365d4E3eC9926C1CC3838677d2a0A9eA0A4",
      "txHash": "0xc8637afb3fb67d646f3347969f8c913dbedcddc1c858216f025edfc419280465",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19837",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8411",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16361",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13253_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13285_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13200_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16361": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13253_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13253_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13238_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13204"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13238_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13071"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13204": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13071": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13285_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13285_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13285_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13262"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13258"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13262": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13258": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13200_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13200_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13189_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13189_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13189_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13183"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13183": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19837": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8411": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c859404cbd75e987fc5d8927cefecb22c0ba680e422deea69eb341ef164482be": {
      "address": "0xEB1E65D01F21DdF773929d38EF42dB26557CA1aC",
      "txHash": "0x3032dc82e39b0dbeea8afd43f6b4d70e1c6c86611fab463e7dcb3d6a071df843",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0f3f9156f460f498f170a62afc82f8d9dfb40ed8bb81b985c7f735c2ef8033d": {
      "address": "0x6B6c54ED161be3210Daa3a55625250Ab1f550b8B",
      "txHash": "0xb47f0e75ce079d78c31f949d6391de904e9208ff52a35b890468c726aababbd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7932",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4223",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7886",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4754_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4786_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4701_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7886": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4754_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4754_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4739_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4705"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4739_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4572"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4705": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4572": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4786_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4786_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4786_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4763"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4759"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4763": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4759": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4701_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4701_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4690_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4690_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4690_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4684"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4684": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7932": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4223": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23770026afb854176d8af63cc605f098c7e93c4fd0add8b4bec14dc86a68a5d6": {
      "address": "0xA84EDF304eF7822c5195Deac20F08b1C560C7401",
      "txHash": "0x9f32f262a3f2571ac0623834f6967365c9c907318523a74968d4e0b19260c5f0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19843",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8399",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16380",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13241_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13273_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13188_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16380": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13241_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13241_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13226_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13192"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13226_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13059"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13192": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13059": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13273_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13273_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13273_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13250"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13246"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13250": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13246": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13188_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13188_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13177_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13177_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13177_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13171"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13171": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19843": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8399": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea91afff7d3ff9a039edb8541fc2244cd6b8f86e26151b7e91e601d94803f2bf": {
      "address": "0x4e05F7F381ddb0176427E698231ea7Ae0F3bB8A5",
      "txHash": "0x961fcd45d2726d673bc569eff23ec12884650e79c06990e8956bf5ceb6fc109d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90db14b704d6ffa26899b1bd86a38af8534c708aeeabccd9269c51683853c1a6": {
      "address": "0xEe5360E0Ed2F74Ed5C3f899b1b05Fbd655c85fd1",
      "txHash": "0xf180bdd73623273f371f8ce20be092f54fdf4c07ff195780f88f48e15068b0b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19965",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8549",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16502",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13391_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13423_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13338_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16502": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13391_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13391_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13376_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13342"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13376_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13209"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13342": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13209": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13423_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13423_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13423_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13400"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13396"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13400": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13396": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13338_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13338_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13327_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13327_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13327_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13321"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13321": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19965": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8549": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2daf46f55e1c8f7df25eca0bdeef845a4fb5f7de2ba8a6bfefd76253155011a": {
      "address": "0xfC9390C6a8Ee9D0B125Df4795C685F41C191816A",
      "txHash": "0xb337adac31a085d9aa2bb447d67d91ab4e4c3b207c52e54d8c5f0cf23321e6e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "da8712ab38475f6899b76036e63b1813da9653abb5d5988b6946722385f218f2": {
      "address": "0xBfaCa2720F54a0E052bB14290f50484Bd1ca08f5",
      "txHash": "0x8bd6f7ad0d5f1d3f74c5df5fea6246653bfd90aca94657ca4a53c4eab655ccf0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)20036",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8600",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16569",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13446_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13478_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13393_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16569": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13446_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13446_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13431_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13397"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13431_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13397": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13264": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13478_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13478_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13478_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13455"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13451"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13455": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13451": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13393_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13393_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13382_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13382_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13382_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13376"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13376": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)20036": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8600": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ca9aed79634271bff942094d04f0616680e2a481787639c9900c5bf5f2f19c9": {
      "address": "0x09D825531483Fa94476BB359caBDb1D7FF77DCe2",
      "txHash": "0x57826e6eaf3eaa1d5bbea9326b3b1f6804c3cbb39a4dba585f64aafecb5bb861",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1a6d056befcf6be61b395e1167edffc1f792475330e00feda7368eaac07fcfa": {
      "address": "0xeFAd5614767f599bd4979D317DC205F4B433b8Ba",
      "txHash": "0x1c634837ceb8aa9dc23a80e520d6a28a186725e870739086d11f08dfdd147900",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ffe690ef9f3acb41357e4c9d219f6ed6f7f70f2814622bb462b778963fe3cd2": {
      "address": "0x091d226D048a978AeFB4D7448b2560d397Ba000B",
      "txHash": "0xc71256fdce2cada3328aa906b7f53ceb66776e551e483409b49967b72599f191",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "be326522c4b0aafbe4ecdd37dac46a8aa678c528db4a2018888c8c6cd224dba3": {
      "address": "0x2e143b2d1C2617d81a3872071577856364d5FfaB",
      "txHash": "0x94a42f09772b8124b695ce57ea24b4c2b2a2a0ae6e1d17abc348eb66e1403bf8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8132",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4416",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8086",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4951_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4983_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4898_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8086": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4951_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4951_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4936_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4902"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4936_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4769"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4902": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4769": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4983_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4983_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4983_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4960"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4956"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4960": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4956": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4898_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4898_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4887_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4887_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4887_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4881"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4881": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8132": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4416": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66ee6eb58ef353467a62970ca4f9b7bdd5c514b1ba8f27c94a411df876190820": {
      "address": "0x9727785482e3745f9E65aAA9249f44C8680e3BF2",
      "txHash": "0x22eddcf99eddd8dddfa8ccecb7089a6387fea99b7eb0c62d6b9e68c6c05c0fd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "19b73cee8aced08fb9a74934fc65cc7ecfaf3c965077999a5f3890691a00287e": {
      "address": "0xE637D604b589A706007f1a4e7A7e0268a5E5a9FF",
      "txHash": "0x3136275dbd26db3bfd5be4fcac6df5d0a5b54ba7fa8c905bd0a1aa3180aada59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8153",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4418",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8107",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4953_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8107": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4953_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4953_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4938_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4904"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4938_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4771"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4904": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4771": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4985_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4985_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4962"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4958"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4962": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4958": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4900_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4889_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4883"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4883": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8153": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4418": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "399db0428080d343f11fd215ae07f175dca67f54c8ba0a35b5a7a82db4ec6cc5": {
      "address": "0x05D78cC2eA21324403c6811bEB311FA31630CD89",
      "txHash": "0x6ad22c520b17f90ae7f27080a27e14491c464cf8fb89835c8311e6670ef5b4bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8149",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4418",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8103",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4953_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8103": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4953_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4953_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4938_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4904"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4938_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4771"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4904": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4771": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4985_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4985_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4962"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4958"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4962": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4958": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4900_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4889_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4883"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4883": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8149": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4418": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dac1b1f98f2cf6986c7881bc1fae7d73bcb20a8009000f6f7d9f04e2c682886a": {
      "address": "0x3c6f370DD6c5CB67C84f6545992204443c7A1124",
      "txHash": "0xc03383f022b72234d805d571d22f311045147df0fb870094af883b3e1526937e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8158",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4418",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8112",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4953_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8112": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4953_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4953_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4938_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4904"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4938_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4771"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4904": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4771": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4985_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4985_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4962"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4958"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4962": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4958": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4900_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4889_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4883"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4883": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8158": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4418": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18e467e2cee1d5ca517b34a36cdc4a6cd027a7cdcc79db806460c735d966f689": {
      "address": "0x61c3b92097642Bbb1b08075759138021586585e6",
      "txHash": "0xed3ff8e32d7133e860ad3111e1f395d463b4ce381510f716a479a78f8e969dbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)2429,t_int8)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)2429,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)2429": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "052239bc5ad8f1af704f8bf38ec400b6a32920065a9bf8f87b67f6cb26aaae3a": {
      "address": "0x6D6b8f829CB7D75d7F425415d8192f130a636743",
      "txHash": "0x0329dfd34bb9dc930cfec8bab099ee89b9818f6865fee74abfd292a13c633b2d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)19444,t_int8)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)19444,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)19444": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "011ec5e8b2599ea2c28fbe95e7da46b36f012b3ac7e4a833ef3cc8416b30531e": {
      "address": "0xEdc50D7c1340B3365f853e66B4C624a5CBdA03C6",
      "txHash": "0x73a9ee07b88a238118a870b4715be881d5da7320e25dfe81d706f7d0112d80a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8169",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4418",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8123",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4953_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8123": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4953_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4953_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4938_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4904"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4938_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4771"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4904": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4771": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4985_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4985_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4985_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4962"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4958"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4962": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4958": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4900_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4900_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4889_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4889_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4883"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4883": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8169": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4418": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c5bdc11b1fae60cef77209d6a036387816410bd241aa98bdda698dabb18ee37": {
      "address": "0xBE6c7E6705af5FBD136a35DA66A2f659D739C3f6",
      "txHash": "0x6e86c4fb16151407302135be8ea47024a383bf356bd4181ada1e9db6e2933477",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)20086",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8584",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16619",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13430_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13462_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13377_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16619": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13430_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13430_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13415_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)13381"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13415_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)13248"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)13381": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)13248": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13462_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13462_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13462_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13439"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13435"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13439": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13435": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)13377_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)13377_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13366_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)13366_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)13366_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)13360"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)13360": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)20086": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8584": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "995a0dc3324aaa54519e0ada50e240cbdc8881aa27349045c146121127cab8ee": {
      "address": "0x3Ff36953f66fB67B21555C2815D23cF667346aFd",
      "txHash": "0x280e49068c72c4ae80fb764c51e03a79cdfcad6674092d500be32e7434aa045f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/pawn/exchange/Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d3e577e88ac27ecbc3667f1f97dd3f40285c997f7c372756d0e81c3f48181fba": {
      "address": "0xf2A88F050341e1f1d07aa6A9fe3137832263154E",
      "txHash": "0xf13e3cd2726c00dd8f50fa3938812da5adfe1768c37c82fbbb0ef59e5abaad6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)8184",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)4408",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)8138",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4943_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4975_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4890_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)8138": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4943_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4943_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4928_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4894"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4928_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4761"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4894": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4761": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4975_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4975_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4975_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4952"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4948"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4952": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4948": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4890_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4890_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4879_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4879_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4879_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4873"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4873": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)8184": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)4408": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "47b0fa2d1565710da7e735bb0a4192e1b8e493d5ff239d08b218d519167e2b12": {
      "address": "0xF6846dDdB4cE0169bB9208a59Bb523B0FDc16344",
      "txHash": "0x668cd764629d6af0b9ba73a6bddb90f86efb876da0555ecfd4ce2146942310a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19707",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8132",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)16240",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)13025_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13057_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12972_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)16240": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)13025_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)13025_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)13010_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12976"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)13010_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12843"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12976": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12843": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)13057_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)13057_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)13057_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)13034"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)13030"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)13034": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)13030": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12972_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12972_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12961_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12961_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12961_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12955"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12955": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19707": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8132": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a434379b3f57ae9d0d4429c97b7ca5834b3f7c0dc228359d149a41912b821983": {
      "address": "0x3eD7003FB167206fDb12B2c13c92267F00132b17",
      "txHash": "0xd4d6fd1d208cf74f31c503b7ee73d294a6f9880e3dce20276560f3293176f7e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c65baef08eae7fd9b450ed7656502f0646cb88c48e1495bc9c2c1529591bcdd6": {
      "address": "0xc020bEFD4024504b4F6Df29e61302a5D16344AfF",
      "txHash": "0xba6d6de7fa1439228dc93c05ef6dc5a111037a36c05bc51daa63d0d2723f2aa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7750",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3956",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7704",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4491_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4523_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4438_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7704": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4491_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4491_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4476_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4442"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4476_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4309"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4442": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4309": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4523_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4523_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4523_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4500"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4496"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4500": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4496": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4438_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4438_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4427_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4427_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4427_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4421"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4421": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7750": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3956": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cd877dc7efc8b80534fa7c2395969fd36ee548b0a4144ad2209af44c2853bdcc": {
      "address": "0xaF7b3171a00ECfcb6D501F1BC0bc8bD0F969Ee23",
      "txHash": "0xda486014d37794b0c279a8e4779a5f8af7d46843db2521e4a990d47586efa483",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7757",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3956",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7711",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4486_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4518_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4433_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7711": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4486_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4486_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4471_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4437"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4471_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4304"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4437": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4304": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4518_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4518_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4518_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4495"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4491"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4495": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4491": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4433_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4433_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4422_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4422_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4422_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4416"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4416": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7757": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3956": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4224710276d95caa190a4046ded0e3fd410e7187f1a7cf16d36d01e65c84455": {
      "address": "0x2278B8F03b174a486bD501971ABAb0c5e0ACDe42",
      "txHash": "0x5960f21a6a64404a459966c069a47e9b4b42a9e44de88e2e51d9fb798386000c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)6672",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:38"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:46"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)4030_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:188"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)8685_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:191"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)4030_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:194"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)8725_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:197"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:200"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)8834_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:203"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8866_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:206"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)19240",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:908"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)6672": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)4030_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)8685_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)8685_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)8642"
              }
            ]
          },
          "t_enum(LoanDurationType)8637": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)8642": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)8725_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)8725_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)8749_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)8749_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)8749_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)8647"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)8647": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)8834_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)8834_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)8821_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)8651"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)8821_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)8651": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8866_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)8866_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)8866_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)8660"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)8656"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)8660": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)8656": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)19240": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "50eddd584cd84886f82bc3165975bb49c536f25eeaef7e9883d958e19a29b108": {
      "address": "0x20Ec0cc127e800879cbAc684B313c3Ad8b03199e",
      "txHash": "0x552ddc8877cd7e5a7cc96b23305d0fa9354800ba82c67b5894f9c630ee7670df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19379",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8132",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15863",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12553_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12585_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12500_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)15863": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12553_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12553_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12538_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12504"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12538_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12371"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12504": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12371": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12585_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12585_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12585_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12562"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12558"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12562": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12558": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12500_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12500_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12489_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12489_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12489_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12483"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12483": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19379": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8132": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8db0d19f627f7c4e15cb7fffccf3ab01a9c3e36752a0e3bc02016aae9505eab4": {
      "address": "0x195D8e30ADe59375703A1C3cC9612897e97599B2",
      "txHash": "0xc16cf0c3533c6b2ddd994c193d3220508cc8f3ea6bff796e79261b5f6a234e20",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)19389",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)8132",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15873",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)12553_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12585_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12500_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)15873": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)12553_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)12553_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)12538_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)12504"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)12538_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)12371"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)12504": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)12371": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)12585_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)12585_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)12585_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)12562"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)12558"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)12562": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)12558": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)12500_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)12500_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12489_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)12489_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)12489_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)12483"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)12483": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)19389": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)8132": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bfc829750739eed619962641af6e21fffeffc8b612fa40f38b2218d70be0bd2e": {
      "address": "0x6D653629900fA7641fe422D7FcB7780e3E6E5484",
      "txHash": "0xea20aa4392828d028eebcdbdaa1cf89d954aaf2462a815c96de7fe9f2f664376",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7852",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3956",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7806",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4486_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4518_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4433_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7806": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4486_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4486_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4471_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4437"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4471_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4304"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4437": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4304": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4518_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4518_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4518_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4495"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4491"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4495": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4491": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4433_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4433_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4422_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4422_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4422_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4416"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4416": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7852": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3956": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2450a475d1f7ff41db772059581ca068a63d761e6712e4d679bf556aba0c1d7d": {
      "address": "0xbd082575f82388CA1559eb5bE2A2e76D3575aD9e",
      "txHash": "0xa4f56b28a2c12f7d8158b418c1efd2f56f7a2ce6b7e44501d6456fc272a12f2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)18695",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)7854",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)15120",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)11742_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11774_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11689_storage)",
            "src": "contracts\\pawn\\pawn-p2p-v2\\PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)15120": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)11742_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)11742_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)11727_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)11693"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)11727_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)11560"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)11693": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)11560": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)11774_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)11774_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)11774_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)11751"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)11747"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)11751": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)11747": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)11689_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)11689_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11678_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)11678_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)11678_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)11672"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)11672": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)18695": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)7854": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5586b71c7b8908e07d3c4006306297af24899d67def53e1a08bf15c3d79f9f9d": {
      "address": "0x3BA018ddcf232D4b42177BCaaa329b7628c1f0F0",
      "txHash": "0xc92344fd91ea9728eba614956287c4314a0ac837596778c6c4ddaa056d5a57b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)3270",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)3270": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)3325_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)3325_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)3253)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)3253": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ebb6dcb7ff9e79d4cbe3750d15a48f3a07bfa9d92bf4bebd8ae2b2077aeb38a9": {
      "address": "0x04f2685E0599d6ee3Ee85e8DbFDFa948181b0013",
      "txHash": "0x51f4b47e93a33e8a69fbe3921db2538b5d9eabe5db9d4d2946196e599b25aa2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)19569",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)20195_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)19552)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)19552)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)19569": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)20195_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)20195_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)20195_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)19552)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)19552": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d839db0923193ee2ea44d8b20e05f3952fd0bb2e2958bb9935f8d42b7c35c1d": {
      "address": "0xb1f454167A1579FEB9cd6Dbd556F092640afCC0C",
      "txHash": "0x9cf8e0a01e1e6463ccb12d286eecc886e99806b89fb022bdb5cc22307dbd255c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)3270",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)3270": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)3325_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)3325_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)3253)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)3253": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f50df06bff13ce66bdb0180d8ab6033c63638550625c617a7a6d4abdd94339fc": {
      "address": "0x1082e8bb1573A6777C60181A4aBEEd7b0a8879D5",
      "txHash": "0x7e924ec5ce09b8c0c040c6fe6c2248ca7aa1cc55aa4459511979ff0e23a47f9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)19569",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)20195_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)19552)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)19552)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)19569": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)20195_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)20195_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)20195_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)19552)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)19552": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22ca6f27ded09670c7b623c0dfe8148084ec9594a98b22e3c2bb1474aaf2d69d": {
      "address": "0x2206a822fDfFA8365917a8A3e2dFd22CE2a9ab2A",
      "txHash": "0x6c7534677e69371135185fdbb03efc16b35a3e572b750195c19a604eb26d6faf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)3270",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)3270": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)3325_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)3325_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)3253)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)3253": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2a9a590b8ab417d68a7bf97438183a5f1a8e904fae1c6c6502e6d4537ea028c3": {
      "address": "0x39C559797E4EC915090f5182976E88f6929d84c1",
      "txHash": "0xba8d87cf4e98fbe0c4b19f0ccb8f3bcb2c08b09d9d5b5bebd21f89f850408ac3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)3270",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)3270": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)3325_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)3325_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)3253)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)3253": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8d4ef431564e3ab5ba3425f5537911a891b4d9243eddb87a8cc7d2a4a5e2dba5": {
      "address": "0xF413399fAB335d8D2AAc99C7786c1B7Ce91Ae93D",
      "txHash": "0xa68aaf7f8214e46e8358c82fafb10c0e87b8a226c373da42f6bafad3640cffdf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)3270",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)3270": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)3325_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)3325_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)3253)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)3253": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6a26e9e6b9eec6f368e51d25e7a1ec5c9aeaf3b4644e917eff4e49ff2be66f8e": {
      "address": "0x6ae1fD7A209f7360fFD389674E43635caB874451",
      "txHash": "0xc28f3ad5e4cac7d779d7c08e31b2205f6211e85cc6c00895325e3637631c5878",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)3270",
            "src": "contracts/pawn/reputation/UserReview.sol:19"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:21"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:25"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:27"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:29"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)3253)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          }
        ],
        "types": {
          "t_contract(IReputation)3270": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)3325_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)3325_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)3325_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)3253)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)3253": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8bbbe013a43090b1d9f3c5fdb02cf300a568f548d1fb2b2973a3f2e570078dfe": {
      "address": "0x151e926627262B9341359235422aafCC4368CE0D",
      "txHash": "0xfc88a3c3e43fcde659970ee2ebcfccf774bba950ea6660da628b75b0c5a30a81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "UserReview",
            "label": "reputation",
            "type": "t_contract(IReputation)19620",
            "src": "contracts/pawn/reputation/UserReview.sol:20"
          },
          {
            "contract": "UserReview",
            "label": "pawnContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:22"
          },
          {
            "contract": "UserReview",
            "label": "loanContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:23"
          },
          {
            "contract": "UserReview",
            "label": "_listOfContractReviewedByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/pawn/reputation/UserReview.sol:26"
          },
          {
            "contract": "UserReview",
            "label": "_listOfReviewByUser",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)20249_storage))",
            "src": "contracts/pawn/reputation/UserReview.sol:28"
          },
          {
            "contract": "UserReview",
            "label": "_lenderReviewedByBorrower",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)19603)",
            "src": "contracts/pawn/reputation/UserReview.sol:30"
          },
          {
            "contract": "UserReview",
            "label": "_borrowerReviewedByLender",
            "type": "t_mapping(t_uint8,t_enum(ReasonType)19603)",
            "src": "contracts/pawn/reputation/UserReview.sol:31"
          },
          {
            "contract": "UserReview",
            "label": "pawnNFTContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/UserReview.sol:33"
          }
        ],
        "types": {
          "t_contract(IReputation)19620": {
            "label": "contract IReputation"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Review)20249_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct UserReview.Review))"
          },
          "t_mapping(t_bytes32,t_struct(Review)20249_storage)": {
            "label": "mapping(bytes32 => struct UserReview.Review)"
          },
          "t_struct(Review)20249_storage": {
            "label": "struct UserReview.Review",
            "members": [
              {
                "label": "reviewee",
                "type": "t_address"
              },
              {
                "label": "contractId",
                "type": "t_uint256"
              },
              {
                "label": "points",
                "type": "t_uint256"
              },
              {
                "label": "contractOrigin",
                "type": "t_address"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_enum(ReasonType)19603)": {
            "label": "mapping(uint8 => enum IReputation.ReasonType)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_enum(ReasonType)19603": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd00b196fcfcc8c448da45f89b6b48f4d2ee0fe2e1c09d18d988c26e44f60d3c": {
      "address": "0xb4850E2a97cB04D161cE5C52B5A5BCab017Ab4be",
      "txHash": "0xfcbdb20145ee7f2a62cee6d7e124d642c5fdbcf9bcc4e335a819a14fc7a70ae6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "assetEvaluation",
            "type": "t_contract(AssetEvaluation)6672",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:37"
          },
          {
            "contract": "PawnNFTContract",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:39"
          },
          {
            "contract": "PawnNFTContract",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:40"
          },
          {
            "contract": "PawnNFTContract",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:41"
          },
          {
            "contract": "PawnNFTContract",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:42"
          },
          {
            "contract": "PawnNFTContract",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:43"
          },
          {
            "contract": "PawnNFTContract",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:44"
          },
          {
            "contract": "PawnNFTContract",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:45"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)4030_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:213"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral)8685_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:216"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)4030_storage",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:219"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList)8725_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:222"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:225"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)8834_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:228"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8866_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:231"
          },
          {
            "contract": "PawnNFTContract",
            "label": "reputation",
            "type": "t_contract(IReputation)19620",
            "src": "contracts/pawn/pawn-nft/PawnNFTContract.sol:1164"
          }
        ],
        "types": {
          "t_contract(AssetEvaluation)6672": {
            "label": "contract AssetEvaluation"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)4030_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Collateral)8685_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Collateral)"
          },
          "t_struct(Collateral)8685_storage": {
            "label": "struct IPawnNFT.Collateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)8642"
              }
            ]
          },
          "t_enum(LoanDurationType)8637": {
            "label": "enum IPawnNFT.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)8642": {
            "label": "enum IPawnNFT.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList)8725_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.CollateralOfferList)"
          },
          "t_struct(CollateralOfferList)8725_storage": {
            "label": "struct IPawnNFT.CollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer)8749_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)8749_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Offer)"
          },
          "t_struct(Offer)8749_storage": {
            "label": "struct IPawnNFT.Offer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)8647"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)8647": {
            "label": "enum IPawnNFT.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract)8834_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.Contract)"
          },
          "t_struct(Contract)8834_storage": {
            "label": "struct IPawnNFT.Contract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)8821_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)8651"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms)8821_storage": {
            "label": "struct IPawnNFT.ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)8637"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)8651": {
            "label": "enum IPawnNFT.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)8866_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFT.PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)8866_storage)dyn_storage": {
            "label": "struct IPawnNFT.PaymentRequest[]"
          },
          "t_struct(PaymentRequest)8866_storage": {
            "label": "struct IPawnNFT.PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)8660"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)8656"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)8660": {
            "label": "enum IPawnNFT.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)8656": {
            "label": "enum IPawnNFT.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_contract(IReputation)19620": {
            "label": "contract IReputation"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aad02f92dda39d0bcfac2bceb2aed2bb8928121fe6045decee23639bc7840782": {
      "address": "0xaC285bbFE1dcC7a1C40208278983592308172AF8",
      "txHash": "0x1a58a5efee9bcd1557931824fb7065b98ac945fc3cb9444930c2e7172183626c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ed19fcb8fbde7e216b247129131121fe01fb5443698ea364393dcf35441b24c": {
      "address": "0x430AA51a3349367383a1fc05d183D26C581f959e",
      "txHash": "0x358b8f980a45f0265e0d0d9781ad7dbcc919383028074dc04e5c04b79b804507",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ed4c3276087a9d97eb91e63e8a079fdf7b73135096d88509eb700ac356f0fba": {
      "address": "0x7C727368b65dc7BB1F29CC305Cb0882Af61b84d1",
      "txHash": "0x0f44074962747b169761a7ff93b197699bc099b900a46b0efc7a1f92257f5b2d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff2e854ac0eeac3e97db43ebaab7c437d5aa1622b53ed47396f1919821472e32": {
      "address": "0x562bC21B58e8e31a2240191289bE113515d30835",
      "txHash": "0x024b34b47b0e0d1b901929741a548dde5392fd66e440e456185aa570543bbf92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32727f2bd893e4462f55daa1d8ba391c2dfe08617859456621e0b9bc068de611": {
      "address": "0x2628522b9dC55FDb1Dc8B98Ac4b6e9dd73BA2593",
      "txHash": "0x5df06dfcabecddcb7d9ba29d7eaf2accf60ad2482f03adcfcfa9aff282fbd0ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b588f2911b12e5ace2b86ed615acfb43b4644b1e5f492fe330e4647ed5a114bc": {
      "address": "0x96529977E3466dbd1a46D70dfbB19DD1fbb66449",
      "txHash": "0x73fe81d27216dbc8d2ee4bc06441e2e43b8b5e28b1f06f3bf01dda1b118c9dfa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10714_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10729_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10748_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)10714_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              },
              {
                "label": "Admin",
                "type": "t_address"
              },
              {
                "label": "Operator",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10729_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10748_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f57fb94d41651ded84d2c290a8be152c3ff0f432b19bd599cd949ed246b0d332": {
      "address": "0x43105553200c6DcD6D2D337905E95666b9479A93",
      "txHash": "0x4e4b4d92d5ffe92e80dd67ff2d4b544ad52dbee4430b1718c00cbfd74da4e8ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10789_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10804_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10823_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)10789_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              },
              {
                "label": "Admin",
                "type": "t_address"
              },
              {
                "label": "Operator",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10804_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10823_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b109b275183ff04089e4a4fa98e63997bb85d309bc2913534cf256636a564f1": {
      "address": "0xCe6661c118960C4f38F6630E76B0559584D76244",
      "txHash": "0x192b54a356f02d96436214f29a9709c7cd56dbfd77074c48a4a7511e3e75fe94",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:32"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)24576,t_int8)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:34"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)24576,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)24576": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c9a802467e07a14642e1831e002551da6e7ecdc1245e1e1437cb8ff3515ad9dd": {
      "address": "0x7E574e0021Ba5FcBc6D9f7a480f6f221c48a1F26",
      "txHash": "0xe6fbf15bf7a903d2e58d6936e8d62276211b2af38506beea45c2bee89aa01101",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:16"
          },
          {
            "contract": "Exchange",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:778"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d07f35d104bcc52f5be4c01e4c42c12c95fe8c1a397230544e39d6cafe284c96": {
      "address": "0x21382A8B0F943A1F82382eE4c500D7B311de3F7F",
      "txHash": "0xce13597dac961f20dc3969a505cda435abef5c5bb05b7f94b10e5e6624f3a6da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)2811_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)2826_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)2845_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)2811_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              },
              {
                "label": "Admin",
                "type": "t_address"
              },
              {
                "label": "Operator",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)2826_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)2845_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8bdcf74e1428f03a62079d77a92e69ab17498647f21a6fd2d33355ccc72938a6": {
      "address": "0x41Faaf3Fa727B79dCBB6F600163390986367fEB0",
      "txHash": "0xced288b04ba47ba18633f437f63ad757924ddb99424784280c0b62fd54197673",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)24581,t_int8)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:37"
          },
          {
            "contract": "Reputation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\reputation\\Reputation.sol:286"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)24581,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)24581": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6e4a276634a791dcdbfc8d0c92f499ec2fe351c7d04de9ce3d15cb357b9e5e21": {
      "address": "0x25A0ADD1f5f31045437859D505806cFf9e6b2940",
      "txHash": "0x526edc0fd6f65dc5dae57017b28272253e89a851008d7d6d70140afd788c39fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10799_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10814_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10833_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)10799_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10814_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10833_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "595c0f6c25262cc1ff7270193fb05bab8e3fc77b9a3827f2e83b1f0fb95f0a93": {
      "address": "0x54175cC3D6Faa16ed65ED5e65f046D4bfFeeF57F",
      "txHash": "0x272e46ff372af73dc17ea0cf508787dadced0cb2f05901f5fd4478ce9a1c2ca8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:26"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)2867_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)2882_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)2901_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)2867_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)2882_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)2901_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b3ace6ad2adcc8b11cc6304a961f75933fb67719d9cbbc311f1880a41448cbd1": {
      "address": "0x5bbec6F388a8b913468e7e24Ce6de30eD5a1a645",
      "txHash": "0x81629020b38f03d1325cabadee8e8696fe558ea2cae3a49a3fc2cb189d5bc4f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "DFY_721",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:35"
          },
          {
            "contract": "DFY_721",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:38"
          },
          {
            "contract": "DFY_721",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:41"
          },
          {
            "contract": "DFY_721",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:44"
          },
          {
            "contract": "DFY_721",
            "label": "tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:47"
          },
          {
            "contract": "DFY_721",
            "label": "totalToken",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:50"
          },
          {
            "contract": "DFY_721",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:54"
          },
          {
            "contract": "DFY_721",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "7bd72e945918688d88d2a26673b54a439c4ab931357bd1e2b2ae060db9510a79": {
      "address": "0x6F36117C429f16A0FA55709C55564D56b2793334",
      "txHash": "0xdcb9635982cab43dc2192b504a0da656b787ce7658f1b5049d4087d43800b2a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "DFY_1155",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:31"
          },
          {
            "contract": "DFY_1155",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:34"
          },
          {
            "contract": "DFY_1155",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:37"
          },
          {
            "contract": "DFY_1155",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:40"
          },
          {
            "contract": "DFY_1155",
            "label": "tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:43"
          },
          {
            "contract": "DFY_1155",
            "label": "totalToken",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:46"
          },
          {
            "contract": "DFY_1155",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:49"
          },
          {
            "contract": "DFY_1155",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:52"
          },
          {
            "contract": "DFY_1155",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:56"
          },
          {
            "contract": "DFY_1155",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c02ff5d638b86ca7ccb814d9616aec083e3680a28f9b69ee5d8e5dda0eb7133b": {
      "address": "0x700c1450932A9B4C5010525D0dB914e752C16013",
      "txHash": "0xabab87ef4bbd37a54e2be3591f598ab16d75b7cece10d3be89c35121671528a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12645_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12660_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12679_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12684_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)12691_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)12645_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12660_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12679_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12684_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)12691_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "af4188b8221991f601bf6b7e787bb0d84866ca07dce4522ca6be2b92e8efdbc2": {
      "address": "0x5F13a034a8b0567fea0C1D6e3e9b372202B62F18",
      "txHash": "0x8716ad451ec7a4f89747e69525f4edd472db8225c45d90903f22760eb7c39660",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:35"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:36"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "totalAssets",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "totalAppointment",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:42"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "totalEvaluation",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:45"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "baseUri",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:51"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "mintingFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:54"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:58"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:62"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15919_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:66"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15933_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:70"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:74"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15960_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:78"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:82"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)15919_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:86"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15960_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:90"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)15919_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:94"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15960_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:98"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfSoftTokenId",
            "type": "t_mapping(t_uint256,t_struct(EvaluationOfSoftNFT)15978_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:102"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfSoftTokenId",
            "type": "t_mapping(t_uint256,t_struct(EvaluationOfSoftNFT)15978_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)15919_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)15919_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15898"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15887"
              }
            ]
          },
          "t_enum(CollectionStandard)15898": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_721",
              "NFT_1155"
            ]
          },
          "t_enum(AssetStatus)15887": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15933_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)15933_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15904"
              }
            ]
          },
          "t_enum(AppointmentStatus)15904": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15960_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)15960_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15898"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15892"
              }
            ]
          },
          "t_enum(EvaluationStatus)15892": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(EvaluationOfSoftNFT)15978_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.EvaluationOfSoftNFT)"
          },
          "t_struct(EvaluationOfSoftNFT)15978_storage": {
            "label": "struct IDFY_Hard_Evaluation.EvaluationOfSoftNFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15898"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "556246439e88c565541c7e0e342837eb764ac5d90980bc3c8ded2041f0db84ae": {
      "address": "0xb051674c64D41600fc96F4781f7C43B9BC850909",
      "txHash": "0xcfad8869d2fc4051c2b1f6ff38eb8d5b412911969b906b5eed0fd5d02a5c216a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "DFY_721_Collection",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721_Collection.sol:21"
          },
          {
            "contract": "DFY_721_Collection",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFY_721)13736)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721_Collection.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFY_721)13736)dyn_storage)": {
            "label": "mapping(address => contract DFY_721[])"
          },
          "t_array(t_contract(DFY_721)13736)dyn_storage": {
            "label": "contract DFY_721[]"
          },
          "t_contract(DFY_721)13736": {
            "label": "contract DFY_721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "4610da6d55b5447bb2861fd4695305cf719c2cf11de9216e6dc8ac6bff4c384a": {
      "address": "0x40cd636fC19e9f93cE029F05653C64b42B40EDd1",
      "txHash": "0xce6ab0f798c44010188ae565b9bf53b4de5c34f888c034841de74ad80e8d5ac3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "DFY_1155_Collection",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155_Collection.sol:21"
          },
          {
            "contract": "DFY_1155_Collection",
            "label": "collections1155ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFY_1155)12986)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_1155_Collection.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFY_1155)12986)dyn_storage)": {
            "label": "mapping(address => contract DFY_1155[])"
          },
          "t_array(t_contract(DFY_1155)12986)dyn_storage": {
            "label": "contract DFY_1155[]"
          },
          "t_contract(DFY_1155)12986": {
            "label": "contract DFY_1155"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f6b6d005d7dd84ca4ee30275eb77c0e12dc5fad674605e31ba73e23abb4f5cd9": {
      "address": "0x3376Cf88623E82495A10539CD475F9DE22b7A7EB",
      "txHash": "0x689c2994bb774abb0074fb57ad193bd37889d5d66dd2d29ebda24664e8aa8e82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "DFY_721",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:35"
          },
          {
            "contract": "DFY_721",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:38"
          },
          {
            "contract": "DFY_721",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:41"
          },
          {
            "contract": "DFY_721",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:44"
          },
          {
            "contract": "DFY_721",
            "label": "tokenBaseUri",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:47"
          },
          {
            "contract": "DFY_721",
            "label": "totalToken",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:50"
          },
          {
            "contract": "DFY_721",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:54"
          },
          {
            "contract": "DFY_721",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_721.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "f195b281952d888cd6215fae1ca06b56e1da38ae05249cc23cd285c74a765371": {
      "address": "0x7f5d0018DD0c3749f7660008F61E7ecd7Ae0F657",
      "txHash": "0xe3916223c2a0b50311409f330cc484fe71f1c072e0ae22c02efa58ce93508d96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:37"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:41"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:47"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "mintingFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:53"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:57"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:61"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15596_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:65"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15610_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:69"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:73"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15637_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:77"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:81"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)15596_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:85"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15637_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:89"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)15596_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:93"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15637_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)15596_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)15596_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15577"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15569"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)15577": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)15569": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15610_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)15610_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15583"
              }
            ]
          },
          "t_enum(AppointmentStatus)15583": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15637_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)15637_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15577"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15574"
              }
            ]
          },
          "t_enum(EvaluationStatus)15574": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "01cb9bd1921ed0eb45bce5fcf56df70ef0f0c4cda262ef15ef2d3d206f10a37c": {
      "address": "0xC8110e3E3B466545fDE3D5eEFF44766CD0C83380",
      "txHash": "0xd1e01898ad3637a69f807f35539f8f932c5bbaf6d188abafa8ba28f8faf0bc63",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:38"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:41"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:44"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:47"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "_totalToken",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:54"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:58"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "1b00acd2c6435653255946c98dbcf1f8dd022b07bdf61602b7dcf19b4e6cc6b4": {
      "address": "0x8a9e4579C70BFab8648295B70E7135a669b1702e",
      "txHash": "0x62c900f01d8f1170e445a49d8de53f786e6048090ec3ce1717ab2e47a510a394",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155BurnableUpgradeable.sol:48"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:34"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:37"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:40"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:43"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "_totalToken",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:50"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:53"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:56"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:60"
          },
          {
            "contract": "DFY_Hard_1155",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2231837365c79cd831e3d502726e9cb7ea30e4320680c3104f14621a2dfd7adc": {
      "address": "0x07A3c913855c4C491f80E80FAF88e2930F611fdA",
      "txHash": "0x78bde48a5c5704d859bf3eeb4199db988376aada06dda2dcfc3f0b3b4485aad5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "DFY_Hard_721_Collection",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Collection.sol:24"
          },
          {
            "contract": "DFY_Hard_721_Collection",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFY_Hard_721)13634)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Collection.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFY_Hard_721)13634)dyn_storage)": {
            "label": "mapping(address => contract DFY_Hard_721[])"
          },
          "t_array(t_contract(DFY_Hard_721)13634)dyn_storage": {
            "label": "contract DFY_Hard_721[]"
          },
          "t_contract(DFY_Hard_721)13634": {
            "label": "contract DFY_Hard_721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "08f59c3a1be8d36bd5717a14c998b2d429ed45eac69e85209855630caf8352e2": {
      "address": "0x7d5a2515b4270Ad182A539032c3c67d00Cd44915",
      "txHash": "0xcd6d154389dff14099275a1ff5bb6317d87a953da83a6b24cf6dcbbbc70dbf4e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "DFY_Hard_1155_Collection",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155_Collection.sol:23"
          },
          {
            "contract": "DFY_Hard_1155_Collection",
            "label": "collections1155ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFY_Hard_1155)13062)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155_Collection.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFY_Hard_1155)13062)dyn_storage)": {
            "label": "mapping(address => contract DFY_Hard_1155[])"
          },
          "t_array(t_contract(DFY_Hard_1155)13062)dyn_storage": {
            "label": "contract DFY_Hard_1155[]"
          },
          "t_contract(DFY_Hard_1155)13062": {
            "label": "contract DFY_Hard_1155"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "493b0448ae204d61aafad04525b554b158efaf48a5e497bf2b73b00baceba5d2": {
      "address": "0x108e91e423a76460D26978A22030e78fEba93cF4",
      "txHash": "0x21fe3c74498369baa03fe8a3a69281470de84f2e57908658659f721b3512274b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)11823_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)11838_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)11857_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)11862_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)11869_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)11823_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)11838_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)11857_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)11862_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)11869_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "725a10433a271058efdaa66c0106fae2a023c53f4aef651d23ba89ee85bd56a1": {
      "address": "0x6897A47c35416a703D05007F7236Bd8eF7b9b3b9",
      "txHash": "0x8e24f40bc3d3210b5dee1da02e4e715339a9a5bac00ca3d089c1c661816fffbc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:37"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:41"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:47"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "mintingFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:53"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:57"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:61"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)5042_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:65"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)5056_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:69"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:73"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5083_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:77"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:81"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)5042_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:85"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5083_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:89"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)5042_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:93"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5083_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1643_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)5042_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)5042_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)5023"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)5015"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)5023": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)5015": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)5056_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)5056_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)5029"
              }
            ]
          },
          "t_enum(AppointmentStatus)5029": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)5083_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)5083_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)5023"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)5020"
              }
            ]
          },
          "t_enum(EvaluationStatus)5020": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c475f40bbf3dd9c0924c1aafc9a2ce2192f47707a9c9ac42cf8d2776f1368024": {
      "address": "0xD254C2d9Be4144e392dF57172211B5d5A5e342d7",
      "txHash": "0x49c67123d0886e527a7d665ad90b0cf2add7922cfd4d7cc3437d94a1faca8f91",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:37"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:41"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:47"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "mintingFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:53"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:57"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:61"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)5075_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:65"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)5089_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:69"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:73"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:77"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:81"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)5075_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:85"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:89"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)5075_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:93"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1643_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)5075_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)5075_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)5056"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)5048"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)5056": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)5048": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)5089_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)5089_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)5062"
              }
            ]
          },
          "t_enum(AppointmentStatus)5062": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)5116_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)5056"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)5053"
              }
            ]
          },
          "t_enum(EvaluationStatus)5053": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "926918787b065738fbeebc74944b3913e04e1df3da47f4c7a96c3587c2ab7609": {
      "address": "0xa78C6AF68C880e1fc1B76C819e331f42b9e03287",
      "txHash": "0xcf4df82a97566393e2f8716f417c1d5cecef419515a7bf9a8d85061bafdc09c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:37"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:41"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)1643_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:47"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "mintingFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:53"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:57"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:61"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)5075_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:65"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)5089_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:69"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:73"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:77"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:81"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)5075_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:85"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:89"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)5075_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:93"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)1643_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)5075_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)5075_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)5056"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)5048"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)5056": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)5048": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)5089_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)5089_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)5062"
              }
            ]
          },
          "t_enum(AppointmentStatus)5062": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)5116_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)5116_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)5056"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)5053"
              }
            ]
          },
          "t_enum(EvaluationStatus)5053": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8b42953545a677aecd4fdd6f73241abf74f97c638f0be5ca57ded114a1e1ed5a": {
      "address": "0xAF55Da72AAb2591e2Be20e06982FB6adAfAeD443",
      "txHash": "0xa0679dd2f0630c2a28c076453dbf1268db1fd149a3d857584a4adf4ed08fe6de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:37"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:41"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:47"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "mintingFee",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:53"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:57"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:61"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)16502_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:65"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)16516_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:69"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:73"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)16543_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:77"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:81"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)16502_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:85"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation721OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)16543_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:89"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "asset1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Asset)16502_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:93"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluation1155OfTokenId",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)16543_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:97"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)16502_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)16502_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16483"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)16475"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)16483": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)16475": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)16516_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)16516_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)16489"
              }
            ]
          },
          "t_enum(AppointmentStatus)16489": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)16543_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)16543_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16483"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)16480"
              }
            ]
          },
          "t_enum(EvaluationStatus)16480": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1e0ee6288a89fa87a072084cc9cb92c0a014f2756035c284ac3447de5591ce0c": {
      "address": "0x034a1A18cA26F47155652a4771fD7fFa7bc024ab",
      "txHash": "0x39533af6bab4f738593470e0079d270b6e4896fcb1508a29567d741d7e6f5ddf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)3752_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)3767_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)3786_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)3791_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)3798_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          },
          {
            "contract": "Hub",
            "label": "numContract",
            "type": "t_uint256",
            "src": "contracts\\pawn\\hub\\Hub.sol:130"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)3752_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)3767_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)3786_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)3791_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)3798_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f0f20d79b840c8ac7407934567421b83a9690cde0119bc8010f4c45de355a27": {
      "address": "0x0d504261843Dd62C8bDCcA9fA462741A18DcF458",
      "txHash": "0x768bbb00efb8b7872fa18139dfa88f6762d1d21c2f4dbbe1ba3de374bddda75c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12650_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12665_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12684_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12689_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)12696_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          },
          {
            "contract": "Hub",
            "label": "numContract",
            "type": "t_uint256",
            "src": "contracts\\pawn\\hub\\Hub.sol:130"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)12650_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12665_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12684_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12689_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)12696_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c00b5afd19d19d86dd153b1a29ed69f803c0e8392f6cccd6cf5e047263f1c90e": {
      "address": "0x5A88140831fA267899a06e729b773ac005dE2140",
      "txHash": "0x25d0c8536414df2f986a9365db4bbe4207c1806c31c69a8be6bc9e863dd7eb81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:176"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)19627_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19638_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)19711_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19734_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)19627_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)19627_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)19584"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)19579": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)19584": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19638_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)19638_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)19662_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)19662_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)19662_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)19589"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)19589": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)19711_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)19711_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)19698_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)19593"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)19698_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)19593": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19734_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)19734_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)19734_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)19602"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)19598"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)19602": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)19598": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "08dac05ed905ff3656831e6c83856ab03001f252ce6f82e3a743d7ccbd2373c3": {
      "address": "0xCd6557c7f9cBd2720ce0760b78122A1987C41edb",
      "txHash": "0x4a4847ce4e848f395bc35e03ccf84963846c338f101b95561f34de9c97cf24f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:176"
          },
          {
            "contract": "LoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawnNFT)16665",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:18"
          },
          {
            "contract": "LoanContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:81"
          },
          {
            "contract": "LoanContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)19627_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:84"
          },
          {
            "contract": "LoanContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)5648_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:87"
          },
          {
            "contract": "LoanContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19638_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:90"
          },
          {
            "contract": "LoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:93"
          },
          {
            "contract": "LoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)19711_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:96"
          },
          {
            "contract": "LoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19734_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:99"
          }
        ],
        "types": {
          "t_contract(IPawnNFT)16665": {
            "label": "contract IPawnNFT"
          },
          "t_struct(Counter)5648_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)19627_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)19627_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)19584"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType_NFT)19579": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)19584": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19638_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)19638_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)19662_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)19662_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)19662_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)19589"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)19589": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)19711_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)19711_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)19698_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)19593"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)19698_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19579"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)19593": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19734_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)19734_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)19734_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)19602"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)19598"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)19602": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)19598": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "59f64a6bf3dac9d2fc71ff8f91397321ededfd77ea619ba271767d644ac027f1": {
      "address": "0xd90ef53a94709a5367cBc85Ed7793fBdf59278F0",
      "txHash": "0x41284620ac5d08b1c0e1d10ec3d2bff06f98417d4b9eeab17a56221459b4f71a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:24"
          },
          {
            "contract": "Exchange",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fc9f14aee1ff55e4b8debef9ee2c861e552439fa2af9d7b7075b821ca91eac40": {
      "address": "0x22665951e60b2921d84d887D03A4452800dB3D1B",
      "txHash": "0xd394a3d4feb5a0417dba6dd3bbbca52002dad5efc9569f74eb31c0c0d267b9a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Reputation",
            "label": "_reputationScore",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/pawn/reputation/Reputation.sol:33"
          },
          {
            "contract": "Reputation",
            "label": "_rewardByReason",
            "type": "t_mapping(t_enum(ReasonType)29701,t_int8)",
            "src": "contracts/pawn/reputation/Reputation.sol:35"
          },
          {
            "contract": "Reputation",
            "label": "whitelistedContractCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/pawn/reputation/Reputation.sol:37"
          },
          {
            "contract": "Reputation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts/pawn/reputation/Reputation.sol:286"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_enum(ReasonType)29701,t_int8)": {
            "label": "mapping(enum IReputation.ReasonType => int8)"
          },
          "t_enum(ReasonType)29701": {
            "label": "enum IReputation.ReasonType",
            "members": [
              "LD_CREATE_PACKAGE",
              "LD_CANCEL_PACKAGE",
              "LD_REOPEN_PACKAGE",
              "LD_GENERATE_CONTRACT",
              "LD_CREATE_OFFER",
              "LD_CANCEL_OFFER",
              "LD_ACCEPT_OFFER",
              "BR_CREATE_COLLATERAL",
              "BR_CANCEL_COLLATERAL",
              "BR_ONTIME_PAYMENT",
              "BR_LATE_PAYMENT",
              "BR_ACCEPT_OFFER",
              "BR_CONTRACT_COMPLETE",
              "BR_CONTRACT_DEFAULTED",
              "LD_REVIEWED_BY_BORROWER_1",
              "LD_REVIEWED_BY_BORROWER_2",
              "LD_REVIEWED_BY_BORROWER_3",
              "LD_REVIEWED_BY_BORROWER_4",
              "LD_REVIEWED_BY_BORROWER_5",
              "LD_KYC",
              "BR_REVIEWED_BY_LENDER_1",
              "BR_REVIEWED_BY_LENDER_2",
              "BR_REVIEWED_BY_LENDER_3",
              "BR_REVIEWED_BY_LENDER_4",
              "BR_REVIEWED_BY_LENDER_5",
              "BR_KYC"
            ]
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "367ef7bdd289196314a388ec3d3ecd6d3fc0115d351f8c180ce1b1b47c33f8ac": {
      "address": "0x616f3C609F0C36b292e2f41423F98f8ee92D681e",
      "txHash": "0x937283d9da04ef718206b8fe83bbbe36123d06118765ff9588a583b0e5b993ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)7673_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)7688_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)7707_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)7712_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)7719_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          },
          {
            "contract": "Hub",
            "label": "numContract",
            "type": "t_uint256",
            "src": "contracts\\pawn\\hub\\Hub.sol:130"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)7673_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)7688_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)7707_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)7712_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)7719_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c0aa9a74ee30be36a6b9aa54732d2c0ca7410929d6903c585a5cc47a39574fe6": {
      "address": "0x54b121819Ad44012D25a1f03313348121890c5d5",
      "txHash": "0xcab4e54cd70a81b843ee5534a5ab1f55aa2c4053d7bb55ad0a3b8a174a28b0e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:177"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2270_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)9315_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)2270_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)9326_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)9399_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2270_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)9315_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)9315_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)9269"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)9264": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)9269": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)9326_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)9326_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)9350_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)9350_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)9350_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)9274"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)9274": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)9399_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)9399_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)9386_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)9278"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)9386_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)9278": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)9422_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)9287"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)9283"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)9287": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)9283": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1e3136092cc4f73533eb5a1fd79e21371470c25d0f0409f0fcab8a10221d80d2": {
      "address": "0x7A3FEf0d20fDEDdf590DA5b4ae2E00dCfDE3dAbD",
      "txHash": "0x733a7bbeee2d27c4c7c73c9d24aff49a625be71e679db3eae588236caf742895",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:177"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)19708_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19719_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)19792_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19815_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)19708_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)19708_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)19662"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)19657": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)19662": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19719_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)19719_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)19743_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)19743_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)19743_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)19667"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)19667": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)19792_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)19792_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)19779_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)19671"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)19779_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)19671": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19815_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)19815_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)19815_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)19680"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)19676"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)19680": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)19676": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "27dcfbb80438b35b549414f1a58e3387ac2c8ac2bb8f6399df9752cc924e25e8": {
      "address": "0x6A4037643D1C1D468e966A46243a7aAdA4098948",
      "txHash": "0x9a036634719775b1c4eb12454699e760390accf28edb37fb59d28801e6ea9f2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:179"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)19708_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19719_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)19792_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19815_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)19708_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)19708_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)19662"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)19657": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)19662": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19719_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)19719_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)19743_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)19743_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)19743_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)19667"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)19667": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)19792_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)19792_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)19779_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)19671"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)19779_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19657"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)19671": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19815_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)19815_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)19815_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)19680"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)19676"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)19680": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)19676": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e490493a673f77a27f0f1f5b0193a67b2521a3f24b4492efe22e2790df6c56f4": {
      "address": "0x17847e0A55B8a805F6f3857E3EDD95Ed005F5a5e",
      "txHash": "0x995353b0f7e3e059c1e0d50a75f691c3961836d89ae8845def136ecf783dd606",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:179"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2270_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)9315_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)2270_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)9326_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)9399_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2270_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)9315_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)9315_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)9269"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)9264": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)9269": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)9326_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)9326_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)9350_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)9350_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)9350_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)9274"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)9274": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)9399_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)9399_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)9386_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)9278"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)9386_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)9278": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)9422_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)9287"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)9283"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)9287": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)9283": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "4c2e96f57d98bb69fb870abb2629fe5f06ea9ee6114916d4aa00aa5b9bf07b5b": {
      "address": "0xb40D96ed48f137608dd48EE793CEAc006a8c4953",
      "txHash": "0xe3abe79f6f3354e658d2a6d6ce66bc579d9927bd44d3a195c6007e7f72751646",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:179"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2270_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)9315_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)2270_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)9326_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)9399_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2270_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)9315_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)9315_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)9269"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)9264": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)9269": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)9326_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)9326_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)9350_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)9350_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)9350_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)9274"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)9274": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)9399_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)9399_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)9386_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)9278"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)9386_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)9264"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)9278": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)9422_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)9422_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)9287"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)9283"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)9287": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)9283": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "62484eb601bda5e6fc0b98798c67fe6045ad7c3ba3dc49dee764665dc1168b3f": {
      "address": "0x0FAe9da1DB32d877fd258cAF0705c49fbE181546",
      "txHash": "0xed211b0471a13c5de64c31114afa1f7f80ee210c8cbcc5c894b51dcd241705a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:179"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:75"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:78"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)19725_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:81"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberOffers",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:84"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19736_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:87"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:90"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)19809_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:93"
          },
          {
            "contract": "PawnNFTContractV2",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19832_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContractV2.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)19725_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)19725_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)19674"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)19679"
              }
            ]
          },
          "t_enum(LoanDurationType_NFT)19674": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)19679": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19736_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)19736_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)19760_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)19760_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)19760_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)19684"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)19674"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19674"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)19684": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)19809_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)19809_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)19796_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)19688"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)19796_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19674"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)19688": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19832_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)19832_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)19832_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)19697"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)19693"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)19697": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)19693": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "484480f3dbd8cc47a777666e6f265cb198694695782b23f70083fc5414fe636e": {
      "address": "0xE40EfF6551c947d9bd7b1608c44620A6D75fE469",
      "txHash": "0xafb54f4f2749029a24d27a085d31ae3277ee794f16a3d12e7320f776f90ca714",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "PawnNFTModel",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTModel.sol:179"
          },
          {
            "contract": "LoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawnNFT)16714",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:18"
          },
          {
            "contract": "LoanContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:81"
          },
          {
            "contract": "LoanContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(Collateral_NFT)19696_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:84"
          },
          {
            "contract": "LoanContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:87"
          },
          {
            "contract": "LoanContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19707_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:90"
          },
          {
            "contract": "LoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:93"
          },
          {
            "contract": "LoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract_NFT)19780_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:96"
          },
          {
            "contract": "LoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19803_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\LoanContract_NFT.sol:99"
          }
        ],
        "types": {
          "t_contract(IPawnNFT)16714": {
            "label": "contract IPawnNFT"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Collateral_NFT)19696_storage)": {
            "label": "mapping(uint256 => struct Collateral_NFT)"
          },
          "t_struct(Collateral_NFT)19696_storage": {
            "label": "struct Collateral_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType_NFT)19645"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus_NFT)19650"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType_NFT)19645": {
            "label": "enum LoanDurationType_NFT",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus_NFT)19650": {
            "label": "enum CollateralStatus_NFT",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralOfferList_NFT)19707_storage)": {
            "label": "mapping(uint256 => struct CollateralOfferList_NFT)"
          },
          "t_struct(CollateralOfferList_NFT)19707_storage": {
            "label": "struct CollateralOfferList_NFT",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(Offer_NFT)19731_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer_NFT)19731_storage)": {
            "label": "mapping(uint256 => struct Offer_NFT)"
          },
          "t_struct(Offer_NFT)19731_storage": {
            "label": "struct Offer_NFT",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus_NFT)19655"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType_NFT)19645"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19645"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus_NFT)19655": {
            "label": "enum OfferStatus_NFT",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(Contract_NFT)19780_storage)": {
            "label": "mapping(uint256 => struct Contract_NFT)"
          },
          "t_struct(Contract_NFT)19780_storage": {
            "label": "struct Contract_NFT",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms_NFT)19767_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus_NFT)19659"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(ContractTerms_NFT)19767_storage": {
            "label": "struct ContractTerms_NFT",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType_NFT)19645"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus_NFT)19659": {
            "label": "enum ContractStatus_NFT",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest_NFT)19803_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest_NFT[])"
          },
          "t_array(t_struct(PaymentRequest_NFT)19803_storage)dyn_storage": {
            "label": "struct PaymentRequest_NFT[]"
          },
          "t_struct(PaymentRequest_NFT)19803_storage": {
            "label": "struct PaymentRequest_NFT",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum_NFT)19668"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum_NFT)19664"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum_NFT)19668": {
            "label": "enum PaymentRequestTypeEnum_NFT",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum_NFT)19664": {
            "label": "enum PaymentRequestStatusEnum_NFT",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2a35ec0610a25156f212ef7b6e6876d93f9fd3b6eff81434290397e25917e2c8": {
      "address": "0x27cd613368F302b267d7DA6E9149405524De180D",
      "txHash": "0x1b74b76e02ee180d7c854d5e7c533cb975510fb09acf7041476395146bc7db8c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)12719_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)12734_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)12753_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)12758_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)12765_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:36"
          },
          {
            "contract": "Hub",
            "label": "numContract",
            "type": "t_uint256",
            "src": "contracts\\pawn\\hub\\Hub.sol:139"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)12719_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)12734_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)12753_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)12758_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)12765_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "67942e063a0fb1949dca5a5eca504c6af9b8a6abac0527feee5d42cd9424b1af": {
      "address": "0xB8612f657Ecbc4Fc9E3e9C589a025588DC84a663",
      "txHash": "0x69e82ab2571640f136173217048f60654da3c97c549a9221d4ba0eae6b482cce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:42"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:45"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:58"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:62"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)16539_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:66"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)16553_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:70"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:74"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)16580_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:76"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)16580_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:84"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)16539_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)16539_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16520"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)16512"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)16520": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)16512": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)16553_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)16553_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)16526"
              }
            ]
          },
          "t_enum(AppointmentStatus)16526": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)16580_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)16580_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)16580_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16520"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)16517"
              }
            ]
          },
          "t_enum(EvaluationStatus)16517": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a94fb17740e4cc8894b63ac51f5e28c4589c5c1f81753df51ff427ba08a249d4": {
      "address": "0x6e3acF1D6744dcF32Dffa6ddF501e4105d271957",
      "txHash": "0x79069348b304653ab2983e27b30f19e4991f420a9da5f325efdb7b63758ee8dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:42"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:45"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:58"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:62"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)16536_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:66"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)16550_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:70"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:74"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)16577_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:76"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)16577_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:84"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)16536_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)16536_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16517"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)16509"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)16517": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)16509": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)16550_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)16550_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)16523"
              }
            ]
          },
          "t_enum(AppointmentStatus)16523": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)16577_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)16577_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)16577_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)16517"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)16514"
              }
            ]
          },
          "t_enum(EvaluationStatus)16514": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "708f1bce93de0878af50560cb650a9e43bb9d8c3d2d4f39461bc39886b6f5739": {
      "address": "0xbe63b6E24B8Da3932EC845951474A2E51Bf542f6",
      "txHash": "0xc17a0f4ba54b41681f89fbe3a65daccbd2f2a34eede79bb8dfa5338e01a24605",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)4213_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:42"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)4213_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:45"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)4213_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "WhiteListFees",
            "type": "t_mapping(t_address,t_struct(WhiteListFee)18620_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:59"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)18572_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:63"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)18586_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:67"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:71"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)18615_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:73"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)18615_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:78"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)4213_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WhiteListFee)18620_storage)": {
            "label": "mapping(address => struct IDFY_Hard_Evaluation.WhiteListFee)"
          },
          "t_struct(WhiteListFee)18620_storage": {
            "label": "struct IDFY_Hard_Evaluation.WhiteListFee",
            "members": [
              {
                "label": "EvaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "MintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Asset)18572_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)18572_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)18553"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)18545"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)18553": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)18545": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)18586_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)18586_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)18559"
              }
            ]
          },
          "t_enum(AppointmentStatus)18559": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)18615_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)18615_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)18615_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)18553"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)18550"
              }
            ]
          },
          "t_enum(EvaluationStatus)18550": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5a5a2b14272c6cc1852be4691acd4464ede794b77daf8257bda58513d46b4a8d": {
      "address": "0xD18F88F17366e67A967ae624df1C94Fd498AC142",
      "txHash": "0x4bdbc9fd57f69acebd56cd39af52bc746b2f640dcd113caf686b350aa1b0a630",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)14926_storage)",
            "src": "contracts\\pawn\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)14931_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)14946_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)14965_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)14970_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)14977_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:33"
          },
          {
            "contract": "Hub",
            "label": "numberOfContract",
            "type": "t_struct(Counter)4213_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)14926_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)14926_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)14931_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)14946_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)14965_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)14970_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)14977_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Counter)4213_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d89477886f6f3ff9945f79e81f8d3e4c6fd0893af89aae05bc9b9c6c1c8e3084": {
      "address": "0xBfc568cc6C53Ca8C0D1031d58821e5BF8bcb8BA8",
      "txHash": "0x67d9ed8e796a7681cf7f794f687dc7a4968c514dbb575c289c845f48675b5c09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "DFY_Hard_721_Factory",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:24"
          },
          {
            "contract": "DFY_Hard_721_Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFY_Hard_721)16667)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFY_Hard_721)16667)dyn_storage)": {
            "label": "mapping(address => contract DFY_Hard_721[])"
          },
          "t_array(t_contract(DFY_Hard_721)16667)dyn_storage": {
            "label": "contract DFY_Hard_721[]"
          },
          "t_contract(DFY_Hard_721)16667": {
            "label": "contract DFY_Hard_721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5aedc2aeb1b572cffec0de0433562c461e08447096b462ac19c42ba0d8eea31c": {
      "address": "0x953a2dCE7311951d310e126E1e37e5127A960c53",
      "txHash": "0xff82fc872385e61ab63e49c6728ab0c35591b3e21e0f20924c5a2cce4dba3ad0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)10436_storage)",
            "src": "contracts\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10441_storage",
            "src": "contracts\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10456_storage",
            "src": "contracts\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10475_storage",
            "src": "contracts\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)10480_storage",
            "src": "contracts\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)10487_storage",
            "src": "contracts\\hub\\Hub.sol:33"
          },
          {
            "contract": "Hub",
            "label": "numberOfContract",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\hub\\Hub.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)10436_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)10436_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)10441_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10456_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10475_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)10480_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)10487_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8526000f3c79c6854dbbc6eca7f4063f2b9608ae4cae98a08cdf8e82ba9c54e2": {
      "address": "0x4DFC7352E0CCEA382aa68EdB064322B8fe6ca8D0",
      "txHash": "0x462a3958f5cbf538ca2e8d22590bd00dd7d77a0f294551bba0034f344600df26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:24"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:27"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:30"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:33"
          },
          {
            "contract": "HardEvaluation",
            "label": "WhiteListFees",
            "type": "t_mapping(t_address,t_struct(WhiteListFee)15294_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:36"
          },
          {
            "contract": "HardEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15246_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:40"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15260_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15289_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15289_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:55"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WhiteListFee)15294_storage)": {
            "label": "mapping(address => struct IDFYHardEvaluation.WhiteListFee)"
          },
          "t_struct(WhiteListFee)15294_storage": {
            "label": "struct IDFYHardEvaluation.WhiteListFee",
            "members": [
              {
                "label": "EvaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "MintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Asset)15246_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Asset)"
          },
          "t_struct(Asset)15246_storage": {
            "label": "struct IDFYHardEvaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15227"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15219"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)15227": {
            "label": "enum IDFYHardEvaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)15219": {
            "label": "enum IDFYHardEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15260_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Appointment)"
          },
          "t_struct(Appointment)15260_storage": {
            "label": "struct IDFYHardEvaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15233"
              }
            ]
          },
          "t_enum(AppointmentStatus)15233": {
            "label": "enum IDFYHardEvaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15289_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFYHardEvaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15289_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)15289_storage": {
            "label": "struct IDFYHardEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15227"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15224"
              }
            ]
          },
          "t_enum(EvaluationStatus)15224": {
            "label": "enum IDFYHardEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "730399a2b67e84fbdff8f7cf9f08f830337dc73f33f9d1d2d65eae673ecba84c": {
      "address": "0x9cCdDF982d4e49e309AB579d1dCA8e507c68B668",
      "txHash": "0xa9885410d290b8b3d1c2184c0e6c8acc246f67a907366cea3157980789c2381e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ab5615df9ea37d7eabeb93173e7b8a1d4d7c79736425651c61afe3d68e356ce8": {
      "address": "0x2d873D0ad71a5f4435631dd62d84F35829c5159c",
      "txHash": "0xe4028dfddd55f4819a8ef44a1196dbce06008661b8a0336108a2f2f806992f0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard1155Factory",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155_Factory.sol:23"
          },
          {
            "contract": "DFYHard1155Factory",
            "label": "collections1155ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard1155)13169)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155_Factory.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFYHard1155)13169)dyn_storage)": {
            "label": "mapping(address => contract DFYHard1155[])"
          },
          "t_array(t_contract(DFYHard1155)13169)dyn_storage": {
            "label": "contract DFYHard1155[]"
          },
          "t_contract(DFYHard1155)13169": {
            "label": "contract DFYHard1155"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f7c964c0aa87aad3bebd28dade5990130ad3f2ec42d5892614f0a03234d601d5": {
      "address": "0x475276272CC6D8eB623587ba82B5AeB71FB8F63d",
      "txHash": "0xf864c2a40537c3fca28d6e2d6321cfcb801359f12ebfc30d297bf7b1b881a9ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c1b5876e9dc2699afc85695bd3e5052f5b36bde6ddd827c3182b7a90f1e00fdb": {
      "address": "0x21C5f60BB95409fcDE05B8825ba12cEAd2eFb6Fc",
      "txHash": "0x8037d43c9b02c6ca9208e271bbac6354032a0dac647382c9172b3675a46ba514",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard1155Factory",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155_Factory.sol:23"
          },
          {
            "contract": "DFYHard1155Factory",
            "label": "collections1155ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard1155)13169)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_1155_Factory.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_contract(DFYHard1155)13169)dyn_storage)": {
            "label": "mapping(address => contract DFYHard1155[])"
          },
          "t_array(t_contract(DFYHard1155)13169)dyn_storage": {
            "label": "contract DFYHard1155[]"
          },
          "t_contract(DFYHard1155)13169": {
            "label": "contract DFYHard1155"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6b5a1eb81bd4e844bc26640fd525e7bb3a666088554b0fa89003f0407dbb8b1b": {
      "address": "0xd89BE65B08735A51a4e0BD0e66A57f73170c7B2a",
      "txHash": "0xd0af077d34668606f798b09ce7b30c5258799361ec689e3b5dda83c7c368b0af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f0188d7f0d878d51eaca1207ab292dbe58733765b83e79ab0e021dcd528fe4b7": {
      "address": "0x4E7A1fA38bd40800Bb0F8800609b000302316CF2",
      "txHash": "0xb677cf0a2c79f982fdd08f75411cd4a8b3e87a5476db1ce3c62b71bb0e0f324b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "70c85b2d278b7ea853025e4782414bcca5c26e81d4715a02a85ce464201cef54": {
      "address": "0x9d919F62ed64905F212f54ea156997F83B00A511",
      "txHash": "0xdfd0c1bdbe709faecbd7deb7ca569a6cb064399611e45c49bed25bfd10eee876",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c9d29c4c703f8e8e0d3766a567b26bd73cb9edaee5468160a058c974a2c29424": {
      "address": "0x7a3A435cb463e147cdB6fb3A27e3F1b39b673E00",
      "txHash": "0x1d2bc09829b5baec16d50c3b2cc0f42a70baff7fd0ca27a3e7355c33841d25d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0a124c5a0ea4db52de7b27e8547c3d6636f26d16531b995e84c11f10282c8223": {
      "address": "0xd3c510e23542F0a0A3133588d2F97837996D5293",
      "txHash": "0x356f24ba4985b43582a436ede995d7aab9f1609a5635662c45143769174a8596",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721_Factory.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13705)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13705)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13705": {
            "label": "contract DFYHard721"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "625cfa378c728f62f9d36ea01792675ccb190de75e38b963a59722ddf1e4ad8e": {
      "address": "0x12c8D2d795c8709C52b17b8f63e4F7c77d4ee257",
      "txHash": "0x902d7595be37a78dbebf51b78873916fdfb88edea1921a4aeda54b544d7f7ab4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)3674_storage)",
            "src": "contracts\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)3679_storage",
            "src": "contracts\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)3694_storage",
            "src": "contracts\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)3713_storage",
            "src": "contracts\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)3718_storage",
            "src": "contracts\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)3725_storage",
            "src": "contracts\\hub\\Hub.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)3674_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)3674_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)3679_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)3694_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)3713_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)3718_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)3725_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0f664d885fbd6961f09200a39983189835fed1ee16109796bffb39f7915fac55": {
      "address": "0x83d2AD49bA2DE072491932538195851fa1EF19Dd",
      "txHash": "0x2f0d54a698763f7a4bd8fbd5c3ae05922b65bd0baa4d24ff3fca0772ee54e5ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:24"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:27"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:30"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:33"
          },
          {
            "contract": "HardEvaluation",
            "label": "WhiteListFees",
            "type": "t_mapping(t_address,t_struct(WhiteListFee)15393_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:36"
          },
          {
            "contract": "HardEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15345_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:40"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15359_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15388_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15388_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:55"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WhiteListFee)15393_storage)": {
            "label": "mapping(address => struct IDFYHardEvaluation.WhiteListFee)"
          },
          "t_struct(WhiteListFee)15393_storage": {
            "label": "struct IDFYHardEvaluation.WhiteListFee",
            "members": [
              {
                "label": "EvaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "MintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Asset)15345_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Asset)"
          },
          "t_struct(Asset)15345_storage": {
            "label": "struct IDFYHardEvaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15326"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15318"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)15326": {
            "label": "enum IDFYHardEvaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)15318": {
            "label": "enum IDFYHardEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15359_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Appointment)"
          },
          "t_struct(Appointment)15359_storage": {
            "label": "struct IDFYHardEvaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15332"
              }
            ]
          },
          "t_enum(AppointmentStatus)15332": {
            "label": "enum IDFYHardEvaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15388_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFYHardEvaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15388_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)15388_storage": {
            "label": "struct IDFYHardEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15326"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15323"
              }
            ]
          },
          "t_enum(EvaluationStatus)15323": {
            "label": "enum IDFYHardEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cb51d503364c46ddd02dd4550055f043f50fb18bbc88240746e128dbd8bbe4c3": {
      "address": "0x70c767Eb2F62a60fFA4A0CA140c88c180D5b615b",
      "txHash": "0x0c82fbea33039a5edb78bba26786f28c50d6ca8575a224c4a9462300a96ec677",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "PawnNFTContract",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:79"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:82"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateral)15600_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:85"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:88"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)15611_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:91"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:95"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(NFTLoanContract)15684_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:98"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(NFTPaymentRequest)15707_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(NFTCollateral)15600_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateral)"
          },
          "t_struct(NFTCollateral)15600_storage": {
            "label": "struct IPawnNFTBase.NFTCollateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)15533"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)15538"
              }
            ]
          },
          "t_enum(LoanDurationType)15533": {
            "label": "enum IEnums.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)15538": {
            "label": "enum IEnums.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)15611_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateralOfferList)"
          },
          "t_struct(NFTCollateralOfferList)15611_storage": {
            "label": "struct IPawnNFTBase.NFTCollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(NFTOffer)15635_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTOffer)15635_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTOffer)"
          },
          "t_struct(NFTOffer)15635_storage": {
            "label": "struct IPawnNFTBase.NFTOffer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)15543"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)15533"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15533"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)15543": {
            "label": "enum IEnums.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTLoanContract)15684_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTLoanContract)"
          },
          "t_struct(NFTLoanContract)15684_storage": {
            "label": "struct IPawnNFTBase.NFTLoanContract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(NFTLoanContractTerms)15671_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)15547"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(NFTLoanContractTerms)15671_storage": {
            "label": "struct IPawnNFTBase.NFTLoanContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15533"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)15547": {
            "label": "enum IEnums.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(NFTPaymentRequest)15707_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTPaymentRequest[])"
          },
          "t_array(t_struct(NFTPaymentRequest)15707_storage)dyn_storage": {
            "label": "struct IPawnNFTBase.NFTPaymentRequest[]"
          },
          "t_struct(NFTPaymentRequest)15707_storage": {
            "label": "struct IPawnNFTBase.NFTPaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)15556"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)15552"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)15556": {
            "label": "enum IEnums.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)15552": {
            "label": "enum IEnums.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6a2cd41f53ddd873838fc7aaa7aaa910df29c2722638abbe51a6d9b5c10b7b49": {
      "address": "0x028D7Cf12d0f76c7b39eA5d4D53D5d3f78c5a9a3",
      "txHash": "0x4fe02ec8185555f7fbcbb3acccdb3e06af1edc7c4bf6838560b71025b0cf181a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:24"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:27"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:30"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:33"
          },
          {
            "contract": "HardEvaluation",
            "label": "WhiteListFees",
            "type": "t_mapping(t_address,t_struct(WhiteListFee)15387_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:36"
          },
          {
            "contract": "HardEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15339_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:40"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15353_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:44"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15382_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:50"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15382_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:55"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WhiteListFee)15387_storage)": {
            "label": "mapping(address => struct IDFYHardEvaluation.WhiteListFee)"
          },
          "t_struct(WhiteListFee)15387_storage": {
            "label": "struct IDFYHardEvaluation.WhiteListFee",
            "members": [
              {
                "label": "EvaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "MintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Asset)15339_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Asset)"
          },
          "t_struct(Asset)15339_storage": {
            "label": "struct IDFYHardEvaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "expectingPrice",
                "type": "t_uint256"
              },
              {
                "label": "expectingPriceAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15316"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15308"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)15316": {
            "label": "enum IDFYHardEvaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)15308": {
            "label": "enum IDFYHardEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15353_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Appointment)"
          },
          "t_struct(Appointment)15353_storage": {
            "label": "struct IDFYHardEvaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15322"
              }
            ]
          },
          "t_enum(AppointmentStatus)15322": {
            "label": "enum IDFYHardEvaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15382_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFYHardEvaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15382_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)15382_storage": {
            "label": "struct IDFYHardEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15316"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15313"
              }
            ]
          },
          "t_enum(EvaluationStatus)15313": {
            "label": "enum IDFYHardEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "78cf2ca1a9c77c44990a7e0bc458c1a5f00f347e71bda972373acf4bf227b163": {
      "address": "0xbCC7A8B2980e70A24feb5f1a894002436b54f5E2",
      "txHash": "0x7efeafd87fadae9c6281ef0a516f61ecb86472d45f2025cfbd2d75287938899b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)10450_storage)",
            "src": "contracts\\hub\\Hub.sol:27"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10455_storage",
            "src": "contracts\\hub\\Hub.sol:29"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10470_storage",
            "src": "contracts\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10485_storage",
            "src": "contracts\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)10490_storage",
            "src": "contracts\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)10497_storage",
            "src": "contracts\\hub\\Hub.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)10450_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)10450_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)10455_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10470_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10485_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)10490_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)10497_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b91929555d3d1774dcab305f66a494493c3039b48d5176329edb4f8332e8df3": {
      "address": "0xB713192243c89748F6a435352e771fac73e9892E",
      "txHash": "0x7e0a10242d75b2ab2defcdae8e6097c0b00c7c5e881e78a3f666052a7e5bfcea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "Exchange",
            "label": "ListCryptoExchange",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\pawn\\exchange\\Exchange.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "668249c472203f83f601627e94a1b08b708187780063e945bceb91dec2992ff3": {
      "address": "0x32624EeCf4F5f3cCD8827eE5949373F9A9c83884",
      "txHash": "0x1289b7d72969c2bafd9cfff8737158617663eadad9f66cba689eab1c83f4a453",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:26"
          },
          {
            "contract": "PawnNFTContract",
            "label": "abc",
            "type": "t_address",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:79"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberCollaterals",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:82"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collaterals",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateral)15657_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:85"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberOffers",
            "type": "t_struct(Counter)2993_storage",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:88"
          },
          {
            "contract": "PawnNFTContract",
            "label": "collateralOffersMapping",
            "type": "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)15668_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:91"
          },
          {
            "contract": "PawnNFTContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:95"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(NFTLoanContract)15741_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:98"
          },
          {
            "contract": "PawnNFTContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(NFTPaymentRequest)15764_storage)dyn_storage)",
            "src": "contracts\\pawn\\pawn-nft-v2\\PawnNFTContract.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2993_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(NFTCollateral)15657_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateral)"
          },
          "t_struct(NFTCollateral)15657_storage": {
            "label": "struct IPawnNFTBase.NFTCollateral",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "nftTokenQuantity",
                "type": "t_uint256"
              },
              {
                "label": "expectedDurationQty",
                "type": "t_uint256"
              },
              {
                "label": "durationType",
                "type": "t_enum(LoanDurationType)15590"
              },
              {
                "label": "status",
                "type": "t_enum(CollateralStatus)15595"
              }
            ]
          },
          "t_enum(LoanDurationType)15590": {
            "label": "enum IEnums.LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_enum(CollateralStatus)15595": {
            "label": "enum IEnums.CollateralStatus",
            "members": [
              "OPEN",
              "DOING",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTCollateralOfferList)15668_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTCollateralOfferList)"
          },
          "t_struct(NFTCollateralOfferList)15668_storage": {
            "label": "struct IPawnNFTBase.NFTCollateralOfferList",
            "members": [
              {
                "label": "offerMapping",
                "type": "t_mapping(t_uint256,t_struct(NFTOffer)15692_storage)"
              },
              {
                "label": "offerIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTOffer)15692_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTOffer)"
          },
          "t_struct(NFTOffer)15692_storage": {
            "label": "struct IPawnNFTBase.NFTOffer",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "loanToValue",
                "type": "t_uint256"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(OfferStatus)15600"
              },
              {
                "label": "loanDurationType",
                "type": "t_enum(LoanDurationType)15590"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15590"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(OfferStatus)15600": {
            "label": "enum IEnums.OfferStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "COMPLETED",
              "CANCEL"
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTLoanContract)15741_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTLoanContract)"
          },
          "t_struct(NFTLoanContract)15741_storage": {
            "label": "struct IPawnNFTBase.NFTLoanContract",
            "members": [
              {
                "label": "nftCollateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_uint256"
              },
              {
                "label": "terms",
                "type": "t_struct(NFTLoanContractTerms)15728_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)15604"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(NFTLoanContractTerms)15728_storage": {
            "label": "struct IPawnNFTBase.NFTLoanContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              },
              {
                "label": "nftCollateralAsset",
                "type": "t_address"
              },
              {
                "label": "nftCollateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)15590"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)15604": {
            "label": "enum IEnums.ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_struct(NFTPaymentRequest)15764_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IPawnNFTBase.NFTPaymentRequest[])"
          },
          "t_array(t_struct(NFTPaymentRequest)15764_storage)dyn_storage": {
            "label": "struct IPawnNFTBase.NFTPaymentRequest[]"
          },
          "t_struct(NFTPaymentRequest)15764_storage": {
            "label": "struct IPawnNFTBase.NFTPaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)15613"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)15609"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)15613": {
            "label": "enum IEnums.PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_enum(PaymentRequestStatusEnum)15609": {
            "label": "enum IEnums.PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2425a61f422ff883a988c1b531efda1e64d629cf957ea674ffb7e6637c318717": {
      "address": "0xf27177d6993c676F8a632e959A3717Ac3c8AA00C",
      "txHash": "0xd7971f6980ebe334c2a2714bef1475c335ae6786cb9c0e11fe9f4051425da227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)2996_storage",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:23"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)2996_storage",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)2996_storage",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:29"
          },
          {
            "contract": "HardEvaluation",
            "label": "WhiteListFees",
            "type": "t_mapping(t_address,t_struct(WhiteListFee)15525_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:32"
          },
          {
            "contract": "HardEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15477_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:36"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15491_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:40"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:44"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15520_storage))",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:46"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15520_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:51"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:55"
          }
        ],
        "types": {
          "t_struct(Counter)2996_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WhiteListFee)15525_storage)": {
            "label": "mapping(address => struct IDFYHardEvaluation.WhiteListFee)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(WhiteListFee)15525_storage": {
            "label": "struct IDFYHardEvaluation.WhiteListFee",
            "members": [
              {
                "label": "EvaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "MintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Asset)15477_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Asset)"
          },
          "t_struct(Asset)15477_storage": {
            "label": "struct IDFYHardEvaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "expectingPrice",
                "type": "t_uint256"
              },
              {
                "label": "expectingPriceAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15454"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15446"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)15454": {
            "label": "enum IDFYHardEvaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)15446": {
            "label": "enum IDFYHardEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15491_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Appointment)"
          },
          "t_struct(Appointment)15491_storage": {
            "label": "struct IDFYHardEvaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15460"
              }
            ]
          },
          "t_enum(AppointmentStatus)15460": {
            "label": "enum IDFYHardEvaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15520_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFYHardEvaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15520_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)15520_storage": {
            "label": "struct IDFYHardEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15454"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15451"
              }
            ]
          },
          "t_enum(EvaluationStatus)15451": {
            "label": "enum IDFYHardEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5fcfb958e2c617a47bd76d06e03a656790287e23719b22bf13acd537cf5f2585": {
      "address": "0xEe7FbB8137232E13Ef88a6a2e9EAe1AA9Be13614",
      "txHash": "0x54d2fd030b3239f9222fabd6c996d3adafab2599739d620d7fbfa1a55c99c3a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "DFYHard721Factory",
            "label": "collections721ByOwner",
            "type": "t_mapping(t_address,t_array(t_contract(DFYHard721)13813)dyn_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/DFY_Hard_721_Factory.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_contract(DFYHard721)13813)dyn_storage)": {
            "label": "mapping(address => contract DFYHard721[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_contract(DFYHard721)13813)dyn_storage": {
            "label": "contract DFYHard721[]"
          },
          "t_contract(DFYHard721)13813": {
            "label": "contract DFYHard721"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "be07ae692c07823b8e6e923b7e168b98ae466e9a366ab7aa2eb1dadc17d98487": {
      "address": "0xAFDC392143531A84555233E2f854A86986A0FE3f",
      "txHash": "0xe7b20c68243bb3399afb71f9f7968f7cb362b0817f39fdf375c484276c854618",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)10596_storage)",
            "src": "contracts\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10601_storage",
            "src": "contracts\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10616_storage",
            "src": "contracts\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10631_storage",
            "src": "contracts\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)10636_storage",
            "src": "contracts\\hub\\Hub.sol:33"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)10643_storage",
            "src": "contracts\\hub\\Hub.sol:34"
          },
          {
            "contract": "Hub",
            "label": "EvaluationConfigs",
            "type": "t_mapping(t_address,t_struct(EvaluationConfig)10648_storage)",
            "src": "contracts\\hub\\Hub.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)10596_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)10596_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)10601_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10616_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10631_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)10636_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)10643_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(EvaluationConfig)10648_storage)": {
            "label": "mapping(address => struct HubInterface.EvaluationConfig)"
          },
          "t_struct(EvaluationConfig)10648_storage": {
            "label": "struct HubInterface.EvaluationConfig",
            "members": [
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
