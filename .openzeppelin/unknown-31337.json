{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x2604d9ff52eaf62eb7bd475fedea1ff57d2199b3add8207e74e01339ec518031",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xfa4c12501e60a5ee74800daa4f35f75ea8011633dfb4250dd1a048fcdc5c2334",
      "kind": "uups"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xef12b70b0a54f9475725007d64cecbd071c682c697077df7472e0711979cc988",
      "kind": "uups"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xdc2ce75232e100d645399f6f75b25f53a55765006555d1aecd542d6f8693a0e7",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x06ee8aadb85a9af997486cbc29b304adebdf828fd334176087906a326fb72eb8",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x3f22d8e5ffda4fea9ff72dd5691a33a3fbd7d246ce40d0105a6c32b62546bd55",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x07205812e396c142dfbac477943c32a281764bf6d4b9f440ef378c94d1f00886",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x6bda03b02d6343b04769165b94063c354376a97aecfb0aef9e64ca7df3966099",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xd5f61a7478c2203d91ddc191b308ed7914307d5d2ceb44b02f8d407cd7478d79",
      "kind": "uups"
    }
  ],
  "impls": {
    "2450a475d1f7ff41db772059581ca068a63d761e6712e4d679bf556aba0c1d7d": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x198e6396659fe18d5e8713279d4d1dea12c3851e5fd56c0e97e87c82ad78237c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PawnModel",
            "label": "whitelistCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:30"
          },
          {
            "contract": "PawnModel",
            "label": "feeWallet",
            "type": "t_address",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:31"
          },
          {
            "contract": "PawnModel",
            "label": "lateThreshold",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:32"
          },
          {
            "contract": "PawnModel",
            "label": "penaltyRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:33"
          },
          {
            "contract": "PawnModel",
            "label": "systemFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:34"
          },
          {
            "contract": "PawnModel",
            "label": "prepaidFeeRate",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:35"
          },
          {
            "contract": "PawnModel",
            "label": "ZOOM",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:36"
          },
          {
            "contract": "PawnModel",
            "label": "reputation",
            "type": "t_contract(IReputation)7666",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:38"
          },
          {
            "contract": "PawnModel",
            "label": "exchange",
            "type": "t_contract(Exchange)3688",
            "src": "contracts/pawn/pawn-p2p-v2/PawnModel.sol:156"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "pawnContract",
            "type": "t_contract(IPawn)7620",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:17"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "numberContracts",
            "type": "t_uint256",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:20"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contracts",
            "type": "t_mapping(t_uint256,t_struct(Contract)4242_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:21"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "contractPaymentRequestMapping",
            "type": "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4274_storage)dyn_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:23"
          },
          {
            "contract": "PawnP2PLoanContract",
            "label": "collateralAsLoanRequestMapping",
            "type": "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4189_storage)",
            "src": "contracts/pawn/pawn-p2p-v2/PawnP2PLoanContract.sol:25"
          }
        ],
        "types": {
          "t_contract(IPawn)7620": {
            "label": "contract IPawn"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Contract)4242_storage)": {
            "label": "mapping(uint256 => struct Contract)"
          },
          "t_struct(Contract)4242_storage": {
            "label": "struct Contract",
            "members": [
              {
                "label": "collateralId",
                "type": "t_uint256"
              },
              {
                "label": "offerId",
                "type": "t_int256"
              },
              {
                "label": "pawnShopPackageId",
                "type": "t_int256"
              },
              {
                "label": "terms",
                "type": "t_struct(ContractTerms)4227_storage"
              },
              {
                "label": "status",
                "type": "t_enum(ContractStatus)4193"
              },
              {
                "label": "lateCount",
                "type": "t_uint8"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(ContractTerms)4227_storage": {
            "label": "struct ContractTerms",
            "members": [
              {
                "label": "borrower",
                "type": "t_address"
              },
              {
                "label": "lender",
                "type": "t_address"
              },
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "collateralAmount",
                "type": "t_uint256"
              },
              {
                "label": "loanAsset",
                "type": "t_address"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256"
              },
              {
                "label": "repaymentAsset",
                "type": "t_address"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "repaymentCycleType",
                "type": "t_enum(LoanDurationType)4060"
              },
              {
                "label": "liquidityThreshold",
                "type": "t_uint256"
              },
              {
                "label": "contractStartDate",
                "type": "t_uint256"
              },
              {
                "label": "contractEndDate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(ContractStatus)4193": {
            "label": "enum ContractStatus",
            "members": [
              "ACTIVE",
              "COMPLETED",
              "DEFAULT"
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(LoanDurationType)4060": {
            "label": "enum LoanDurationType",
            "members": [
              "WEEK",
              "MONTH"
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(PaymentRequest)4274_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct PaymentRequest[])"
          },
          "t_array(t_struct(PaymentRequest)4274_storage)dyn_storage": {
            "label": "struct PaymentRequest[]"
          },
          "t_struct(PaymentRequest)4274_storage": {
            "label": "struct PaymentRequest",
            "members": [
              {
                "label": "requestId",
                "type": "t_uint256"
              },
              {
                "label": "paymentRequestType",
                "type": "t_enum(PaymentRequestTypeEnum)4251"
              },
              {
                "label": "remainingLoan",
                "type": "t_uint256"
              },
              {
                "label": "penalty",
                "type": "t_uint256"
              },
              {
                "label": "interest",
                "type": "t_uint256"
              },
              {
                "label": "remainingPenalty",
                "type": "t_uint256"
              },
              {
                "label": "remainingInterest",
                "type": "t_uint256"
              },
              {
                "label": "dueDateTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "chargePrepaidFee",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(PaymentRequestStatusEnum)4247"
              }
            ]
          },
          "t_enum(PaymentRequestTypeEnum)4251": {
            "label": "enum PaymentRequestTypeEnum",
            "members": [
              "INTEREST",
              "OVERDUE",
              "LOAN"
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_enum(PaymentRequestStatusEnum)4247": {
            "label": "enum PaymentRequestStatusEnum",
            "members": [
              "ACTIVE",
              "LATE",
              "COMPLETE",
              "DEFAULT"
            ]
          },
          "t_mapping(t_uint256,t_struct(CollateralAsLoanRequestListStruct)4189_storage)": {
            "label": "mapping(uint256 => struct CollateralAsLoanRequestListStruct)"
          },
          "t_struct(CollateralAsLoanRequestListStruct)4189_storage": {
            "label": "struct CollateralAsLoanRequestListStruct",
            "members": [
              {
                "label": "loanRequestToPawnShopPackageMapping",
                "type": "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4178_storage)"
              },
              {
                "label": "pawnShopPackageIdList",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "isInit",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(LoanRequestStatusStruct)4178_storage)": {
            "label": "mapping(uint256 => struct LoanRequestStatusStruct)"
          },
          "t_struct(LoanRequestStatusStruct)4178_storage": {
            "label": "struct LoanRequestStatusStruct",
            "members": [
              {
                "label": "isInit",
                "type": "t_bool"
              },
              {
                "label": "status",
                "type": "t_enum(LoanRequestStatus)4172"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_enum(LoanRequestStatus)4172": {
            "label": "enum LoanRequestStatus",
            "members": [
              "PENDING",
              "ACCEPTED",
              "REJECTED",
              "CONTRACTED",
              "CANCEL"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IReputation)7666": {
            "label": "contract IReputation"
          },
          "t_contract(Exchange)3688": {
            "label": "contract Exchange"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2a35ec0610a25156f212ef7b6e6876d93f9fd3b6eff81434290397e25917e2c8": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x1825ea95a387ae2fdae0ec3597ab23cfca601228c3eb1f2429f3d57989c09622",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts\\pawn\\hub\\Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)14835_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)14850_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)14869_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)14874_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:35"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)14881_storage",
            "src": "contracts\\pawn\\hub\\Hub.sol:36"
          },
          {
            "contract": "Hub",
            "label": "numContract",
            "type": "t_uint256",
            "src": "contracts\\pawn\\hub\\Hub.sol:139"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(SystemConfig)14835_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)14850_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)14869_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedEvaluationContract",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)14874_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)14881_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b85ac616aa5edcb2b8b6769a01dcd1d2ca237053d41a4a1db60d71832f8cbc2": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x2b143820c3992c87bd6aeec6cc1afc70f6f252bfb5703a8a901e6148c1cd28c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:38"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:41"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:44"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:47"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "_totalToken",
            "type": "t_struct(Counter)5730_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:54"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:58"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5730_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "cbac95fa3ce8361e2941dc0027f8e127fca0db1a1fbc384d530c5929ed2a23cd": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x007698dff0aeb9697ddf09b5534a8bacb5a6911876d8adab3331b0ff06d3a870",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "adminAdress",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:38"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)5730_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:42"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)5730_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:45"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)5730_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:58"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:62"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)18584_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:66"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)18598_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:70"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:74"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)18625_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:76"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)18625_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:84"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5730_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)18584_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)18584_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)18565"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)18557"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)18565": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)18557": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)18598_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)18598_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)18571"
              }
            ]
          },
          "t_enum(AppointmentStatus)18571": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)18625_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)18625_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)18625_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)18565"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)18562"
              }
            ]
          },
          "t_enum(EvaluationStatus)18562": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "47a1ffc3820ff3ef5a221c3f1c5cebdc3c397cfdd71dd6c0912c4a4cdabf0ea9": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x945d7e09bcbce7a4ee2a8067fd9609dd2520ad7dee002cc38e50218192f50a58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "hubContract",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:39"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:42"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:45"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:48"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListEvaluationFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:58"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "whiteListMintingFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:62"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)18635_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:66"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)18649_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:70"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:74"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)18676_storage))",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:76"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)18676_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:84"
          },
          {
            "contract": "Hard_Evaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\Hard_Evaluation.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Asset)18635_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Asset)"
          },
          "t_struct(Asset)18635_storage": {
            "label": "struct IDFY_Hard_Evaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)18616"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)18608"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)18616": {
            "label": "enum IDFY_Hard_Evaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)18608": {
            "label": "enum IDFY_Hard_Evaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTMENTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)18649_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Appointment)"
          },
          "t_struct(Appointment)18649_storage": {
            "label": "struct IDFY_Hard_Evaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)18622"
              }
            ]
          },
          "t_enum(AppointmentStatus)18622": {
            "label": "enum IDFY_Hard_Evaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)18676_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)18676_storage)": {
            "label": "mapping(uint256 => struct IDFY_Hard_Evaluation.Evaluation)"
          },
          "t_struct(Evaluation)18676_storage": {
            "label": "struct IDFY_Hard_Evaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)18616"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)18613"
              }
            ]
          },
          "t_enum(EvaluationStatus)18613": {
            "label": "enum IDFY_Hard_Evaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "01cb9bd1921ed0eb45bce5fcf56df70ef0f0c4cda262ef15ef2d3d206f10a37c": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x7c2d3241c6c92aa371a7b8944dd73abd789163d361337c33665d1b4f6acbce85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts\\base\\BaseContract.sol:23"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:40"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "originalCreator",
            "type": "t_address_payable",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:43"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "defaultRoyaltyRate",
            "type": "t_uint256",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:46"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "collectionCID",
            "type": "t_string_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:49"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "_totalToken",
            "type": "t_struct(Counter)5697_storage",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:56"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "cidOfToken",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:60"
          },
          {
            "contract": "DFY_Hard_721",
            "label": "royaltyRateOfToken",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\pawn\\nft_evaluation\\implement\\DFY_Hard_721.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)5697_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "2425a61f422ff883a988c1b531efda1e64d629cf957ea674ffb7e6637c318717": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x25711f949187ee70cd8981662908a718f99c14e10f5593ee04470bc75853b4e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "BaseContract",
            "label": "contractHub",
            "type": "t_address",
            "src": "contracts/base/BaseContract.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAssets",
            "type": "t_struct(Counter)2996_storage",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:23"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalAppointment",
            "type": "t_struct(Counter)2996_storage",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:26"
          },
          {
            "contract": "HardEvaluation",
            "label": "_totalEvaluation",
            "type": "t_struct(Counter)2996_storage",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:29"
          },
          {
            "contract": "HardEvaluation",
            "label": "WhiteListFees",
            "type": "t_mapping(t_address,t_struct(WhiteListFee)15526_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:32"
          },
          {
            "contract": "HardEvaluation",
            "label": "assetList",
            "type": "t_mapping(t_uint256,t_struct(Asset)15478_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:36"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentList",
            "type": "t_mapping(t_uint256,t_struct(Appointment)15492_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:40"
          },
          {
            "contract": "HardEvaluation",
            "label": "appointmentListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:44"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationWithTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15521_storage))",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:46"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationList",
            "type": "t_mapping(t_uint256,t_struct(Evaluation)15521_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:51"
          },
          {
            "contract": "HardEvaluation",
            "label": "evaluationListOfAsset",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/pawn/nft_evaluation/implement/Hard_Evaluation.sol:55"
          }
        ],
        "types": {
          "t_struct(Counter)2996_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(WhiteListFee)15526_storage)": {
            "label": "mapping(address => struct IDFYHardEvaluation.WhiteListFee)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(WhiteListFee)15526_storage": {
            "label": "struct IDFYHardEvaluation.WhiteListFee",
            "members": [
              {
                "label": "EvaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "MintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Asset)15478_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Asset)"
          },
          "t_struct(Asset)15478_storage": {
            "label": "struct IDFYHardEvaluation.Asset",
            "members": [
              {
                "label": "assetCID",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "expectingPrice",
                "type": "t_uint256"
              },
              {
                "label": "expectingPriceAddress",
                "type": "t_address"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15455"
              },
              {
                "label": "status",
                "type": "t_enum(AssetStatus)15447"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(CollectionStandard)15455": {
            "label": "enum IDFYHardEvaluation.CollectionStandard",
            "members": [
              "NFT_HARD_721",
              "NFT_HARD_1155"
            ]
          },
          "t_enum(AssetStatus)15447": {
            "label": "enum IDFYHardEvaluation.AssetStatus",
            "members": [
              "OPEN",
              "APPOINTED",
              "EVALUATED",
              "NFT_CREATED"
            ]
          },
          "t_mapping(t_uint256,t_struct(Appointment)15492_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Appointment)"
          },
          "t_struct(Appointment)15492_storage": {
            "label": "struct IDFYHardEvaluation.Appointment",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "assetOwner",
                "type": "t_address"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "evaluationFee",
                "type": "t_uint256"
              },
              {
                "label": "evaluationFeeAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AppointmentStatus)15461"
              }
            ]
          },
          "t_enum(AppointmentStatus)15461": {
            "label": "enum IDFYHardEvaluation.AppointmentStatus",
            "members": [
              "OPEN",
              "ACCEPTED",
              "REJECTED",
              "CANCELLED",
              "EVALUATED"
            ]
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Evaluation)15521_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IDFYHardEvaluation.Evaluation))"
          },
          "t_mapping(t_uint256,t_struct(Evaluation)15521_storage)": {
            "label": "mapping(uint256 => struct IDFYHardEvaluation.Evaluation)"
          },
          "t_struct(Evaluation)15521_storage": {
            "label": "struct IDFYHardEvaluation.Evaluation",
            "members": [
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "appointmentId",
                "type": "t_uint256"
              },
              {
                "label": "evaluationCID",
                "type": "t_string_storage"
              },
              {
                "label": "depreciationRate",
                "type": "t_uint256"
              },
              {
                "label": "evaluator",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeeAddress",
                "type": "t_address"
              },
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "timeOfEvaluation",
                "type": "t_uint256"
              },
              {
                "label": "collectionStandard",
                "type": "t_enum(CollectionStandard)15455"
              },
              {
                "label": "status",
                "type": "t_enum(EvaluationStatus)15452"
              }
            ]
          },
          "t_enum(EvaluationStatus)15452": {
            "label": "enum IDFYHardEvaluation.EvaluationStatus",
            "members": [
              "EVALUATED",
              "EVALUATION_ACCEPTED",
              "EVALUATION_REJECTED",
              "NFT_CREATED"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9d3373239a545b350572eacb8933d620f65b333fedf4faae89d82298f048ce08": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x8370fd89b82953bc4f0a3dfe0b6367b8c8670028badfed6d73f95d56f9d10b46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)89_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Hub",
            "label": "ContractRegistry",
            "type": "t_mapping(t_bytes4,t_struct(Registry)10534_storage)",
            "src": "contracts/hub/Hub.sol:28"
          },
          {
            "contract": "Hub",
            "label": "systemConfig",
            "type": "t_struct(SystemConfig)10539_storage",
            "src": "contracts/hub/Hub.sol:30"
          },
          {
            "contract": "Hub",
            "label": "pawnConfig",
            "type": "t_struct(PawnConfig)10554_storage",
            "src": "contracts/hub/Hub.sol:31"
          },
          {
            "contract": "Hub",
            "label": "pawnNFTConfig",
            "type": "t_struct(PawnNFTConfig)10569_storage",
            "src": "contracts/hub/Hub.sol:32"
          },
          {
            "contract": "Hub",
            "label": "nftCollectionConfig",
            "type": "t_struct(NFTCollectionConfig)10574_storage",
            "src": "contracts/hub/Hub.sol:33"
          },
          {
            "contract": "Hub",
            "label": "nftMarketConfig",
            "type": "t_struct(NFTMarketConfig)10581_storage",
            "src": "contracts/hub/Hub.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_bytes4,t_struct(Registry)10534_storage)": {
            "label": "mapping(bytes4 => struct HubInterface.Registry)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_struct(Registry)10534_storage": {
            "label": "struct HubInterface.Registry",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "contractName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(SystemConfig)10539_storage": {
            "label": "struct HubInterface.SystemConfig",
            "members": [
              {
                "label": "systemFeeWallet",
                "type": "t_address"
              },
              {
                "label": "systemFeeToken",
                "type": "t_address"
              }
            ]
          },
          "t_struct(PawnConfig)10554_storage": {
            "label": "struct HubInterface.PawnConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(PawnNFTConfig)10569_storage": {
            "label": "struct HubInterface.PawnNFTConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "systemFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "penaltyRate",
                "type": "t_uint256"
              },
              {
                "label": "prepaidFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "lateThreshold",
                "type": "t_uint256"
              },
              {
                "label": "whitelistedCollateral",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(NFTCollectionConfig)10574_storage": {
            "label": "struct HubInterface.NFTCollectionConfig",
            "members": [
              {
                "label": "collectionCreatingFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(NFTMarketConfig)10581_storage": {
            "label": "struct HubInterface.NFTMarketConfig",
            "members": [
              {
                "label": "ZOOM",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeRate",
                "type": "t_uint256"
              },
              {
                "label": "marketFeeWallet",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)89_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)89_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
